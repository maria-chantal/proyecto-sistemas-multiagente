{"version":3,"file":"febf2f12c27657ec738fa287d5ba21fddfc3e3e8-acf88adffb2f6ebb9c8b.js","mappings":"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","sources":["webpack://autogentstudio/./node_modules/style-to-js/node_modules/inline-style-parser/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://autogentstudio/./node_modules/comma-separated-tokens/index.js","webpack://autogentstudio/./node_modules/space-separated-tokens/index.js","webpack://autogentstudio/./node_modules/html-url-attributes/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://autogentstudio/./node_modules/micromark-util-chunked/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-subtokenize/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-combine-extensions/index.js","webpack://autogentstudio/./node_modules/micromark-factory-space/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-factory-space/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/content.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/document.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/content.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/flow.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/text.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/list.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-destination/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-label/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-title/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-whitespace/index.js","webpack://autogentstudio/./node_modules/micromark-util-normalize-identifier/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/definition.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-html-tag-name/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://autogentstudio/./node_modules/decode-named-character-reference/index.dom.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://autogentstudio/./node_modules/micromark-util-resolve-all/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://autogentstudio/./node_modules/micromark-util-classify-character/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-util-classify-character/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/attention.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://autogentstudio/./node_modules/micromark/lib/constructs.js","webpack://autogentstudio/./node_modules/micromark/lib/create-tokenizer.js","webpack://autogentstudio/./node_modules/micromark/lib/parse.js","webpack://autogentstudio/./node_modules/micromark/lib/preprocess.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/micromark-util-decode-string/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://autogentstudio/./node_modules/micromark/lib/postprocess.js","webpack://autogentstudio/./node_modules/remark-parse/lib/index.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/types.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/index.js","webpack://autogentstudio/./node_modules/micromark-util-sanitize-uri/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-util-sanitize-uri/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://autogentstudio/./node_modules/unist-util-visit-parents/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/unist-util-visit-parents/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://autogentstudio/./node_modules/trim-lines/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/state.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/index.js","webpack://autogentstudio/./node_modules/remark-rehype/lib/index.js","webpack://autogentstudio/./node_modules/bail/index.js","webpack://autogentstudio/./node_modules/is-plain-obj/index.js","webpack://autogentstudio/./node_modules/trough/lib/index.js","webpack://autogentstudio/./node_modules/vfile/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/vfile/node_modules/vfile-message/lib/index.js","webpack://autogentstudio/./node_modules/vfile/lib/minpath.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/minproc.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/minurl.shared.js","webpack://autogentstudio/./node_modules/vfile/lib/minurl.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/ccount/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://autogentstudio/./node_modules/markdown-table/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/encode-info.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://autogentstudio/./node_modules/mdast-util-phrasing/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-phrasing/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://autogentstudio/./node_modules/longest-streak/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm/node_modules/micromark-util-combine-extensions/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm/index.js","webpack://autogentstudio/./node_modules/remark-gfm/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm/lib/index.js","webpack://autogentstudio/./src/components/views/atoms.tsx","webpack://autogentstudio/./src/components/views/gallery/api.ts","webpack://autogentstudio/./node_modules/extend/index.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/maximize-2.js","webpack://autogentstudio/./node_modules/style-to-js/node_modules/style-to-object/cjs/index.js","webpack://autogentstudio/./node_modules/style-to-js/cjs/index.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/info.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/chevron-right.js","webpack://autogentstudio/./node_modules/antd/es/_util/ActionButton.js","webpack://autogentstudio/./node_modules/antd/es/modal/context.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/ConfirmCancelBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/ConfirmOkBtn.js","webpack://autogentstudio/./node_modules/rc-dialog/es/context.js","webpack://autogentstudio/./node_modules/rc-dialog/es/util.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/MemoChildren.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/Panel.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/index.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Mask.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/index.js","webpack://autogentstudio/./node_modules/rc-dialog/es/DialogWrap.js","webpack://autogentstudio/./node_modules/rc-dialog/es/index.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/NormalCancelBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/NormalOkBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/shared.js","webpack://autogentstudio/./node_modules/antd/es/modal/style/index.js","webpack://autogentstudio/./node_modules/antd/es/modal/Modal.js","webpack://autogentstudio/./node_modules/antd/es/_util/styleChecker.js","webpack://autogentstudio/./node_modules/antd/es/modal/style/confirm.js","webpack://autogentstudio/./node_modules/antd/es/modal/ConfirmDialog.js","webpack://autogentstudio/./node_modules/antd/es/modal/destroyFns.js","webpack://autogentstudio/./node_modules/antd/es/modal/confirm.js","webpack://autogentstudio/./node_modules/antd/es/modal/PurePanel.js","webpack://autogentstudio/./node_modules/antd/es/modal/useModal/HookModal.js","webpack://autogentstudio/./node_modules/antd/es/modal/useModal/index.js","webpack://autogentstudio/./node_modules/antd/es/_util/hooks/usePatchElement.js","webpack://autogentstudio/./node_modules/antd/es/modal/index.js","webpack://autogentstudio/./node_modules/antd/es/style/motion/fade.js","webpack://autogentstudio/./node_modules/style-to-js/cjs/utilities.js"],"sourcesContent":["// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {createElement, useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    /* c8 ignore next 7 -- hooks are client-only. */\n    function () {\n      const file = createFile(options)\n      processor.run(processor.parse(file), file, function (error, tree) {\n        setError(error)\n        setTree(tree)\n      })\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  /* c8 ignore next -- hooks are client-only. */\n  if (error) throw error\n\n  /* c8 ignore next -- hooks are client-only. */\n  return tree ? post(tree, options) : createElement(Fragment)\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  // Wrap in `div` if there’s a class name.\n  if (options.className) {\n    tree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className: options.className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        tree.type === 'root' ? tree.children : [tree]\n      )\n    }\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import React, { memo, useState } from \"react\";\nimport {\n  ArrowDown,\n  ArrowUp,\n  ChevronDown,\n  ChevronUp,\n  Fullscreen,\n  Loader2,\n  Maximize2,\n  Minimize2,\n  X,\n} from \"lucide-react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Tooltip } from \"antd\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const LoadingIndicator = ({ size = 16 }: { size: number }) => (\n  <div className=\"inline-flex items-center gap-2 text-accent   mr-2\">\n    <Loader2 size={size} className=\"animate-spin\" />\n  </div>\n);\n\nexport const LoadingDots = ({ size = 8 }) => {\n  return (\n    <span className=\"inline-flex items-center gap-2\">\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n        }}\n      />\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n          animationDelay: \"0.2s\",\n        }}\n      />\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n          animationDelay: \"0.4s\",\n        }}\n      />\n    </span>\n  );\n};\n\n// import { memo, useState } from 'react';\n// import ReactMarkdown from 'react-markdown';\n// import { Minimize2, Maximize2, ArrowsMaximize, X } from 'lucide-react';\n// import { Tooltip } from 'antd';\n\nfunction safeJsonStringify(input: any): string {\n  if (typeof input === \"object\" && input !== null) {\n    return JSON.stringify(input);\n  }\n  return input;\n}\n\nexport const TruncatableText = memo(\n  ({\n    content = \"\",\n    isJson = false,\n    className = \"\",\n    jsonThreshold = 1000,\n    textThreshold = 500,\n    showFullscreen = true,\n  }: {\n    content: string;\n    isJson?: boolean;\n    className?: string;\n    jsonThreshold?: number;\n    textThreshold?: number;\n    showFullscreen?: boolean;\n  }) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isFullscreen, setIsFullscreen] = useState(false);\n    const threshold = isJson ? jsonThreshold : textThreshold;\n    content = safeJsonStringify(content) + \"\";\n    const shouldTruncate = content.length > threshold;\n\n    const toggleExpand = (e: React.MouseEvent) => {\n      setIsExpanded(!isExpanded);\n      e.stopPropagation();\n    };\n\n    const displayContent =\n      shouldTruncate && !isExpanded\n        ? content.slice(0, threshold) + \"...\"\n        : content;\n    const proseClassName =\n      \" dark:prose-invert prose-table:border-hidden prose-td:border-t prose-th:border-b prose-ul:list-disc prose-sm prose-ol:list-decimal \";\n    return (\n      <div className=\"relative\">\n        <div\n          className={`\n            transition-[max-height,opacity] overflow-auto scroll  duration-500 ease-in-out\n            ${\n              shouldTruncate && !isExpanded\n                ? \"max-h-[300px]\"\n                : \"max-h-[10000px]\"\n            }\n            ${className}\n          `}\n        >\n          <ReactMarkdown\n            className={\n              isExpanded ? `mt-4 text-sm text-primary ${proseClassName}` : \"\"\n            }\n            remarkPlugins={[remarkGfm]}\n          >\n            {displayContent}\n          </ReactMarkdown>\n          {shouldTruncate && !isExpanded && (\n            <div className=\"absolute bottom-0 left-0 right-0 h-24 bg-gradient-to-t from-secondary to-transparent opacity-20\" />\n          )}\n        </div>\n\n        {shouldTruncate && (\n          <div className=\"mt-2 flex items-center justify-end gap-2\">\n            <Tooltip title={isExpanded ? \"Show less\" : \"Show more\"}>\n              <button\n                type=\"button\"\n                onClick={toggleExpand}\n                className=\"inline-flex items-center justify-center p-2 rounded bg-secondary text-primary hover:text-accent hover:scale-105 transition-all duration-300 z-10\"\n                aria-label={isExpanded ? \"Show less\" : \"Show more\"}\n              >\n                {isExpanded ? (\n                  <ChevronUp size={18} />\n                ) : (\n                  <ChevronDown size={18} />\n                )}\n              </button>\n            </Tooltip>\n\n            {showFullscreen && (\n              <Tooltip title=\"Fullscreen\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsFullscreen(true)}\n                  className=\"inline-flex items-center justify-center p-2 rounded bg-secondary text-primary hover:text-accent hover:scale-105 transition-all duration-300 z-10\"\n                  aria-label=\"Toggle fullscreen\"\n                >\n                  <Maximize2 size={18} />\n                </button>\n              </Tooltip>\n            )}\n          </div>\n        )}\n\n        {isFullscreen && (\n          <div\n            className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center\"\n            onClick={() => setIsFullscreen(false)}\n          >\n            <div\n              className=\"relative bg-secondary scroll w-full h-full md:w-4/5 md:h-4/5 md:rounded-lg p-8 overflow-auto\"\n              style={{ opacity: 0.95 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Tooltip title=\"Close\">\n                <button\n                  onClick={() => setIsFullscreen(false)}\n                  className=\"absolute top-4 right-4 p-2 rounded-full bg-black/50 hover:bg-black/70 text-primary transition-colors\"\n                  aria-label=\"Close fullscreen view\"\n                >\n                  <X size={24} />\n                </button>\n              </Tooltip>\n              <div className={`mt-8 text-base text-primary ${proseClassName}`}>\n                {isJson ? (\n                  <pre className=\"whitespace-pre-wrap\">{content}</pre>\n                ) : (\n                  <ReactMarkdown\n                    className=\"text-primary\"\n                    remarkPlugins={[remarkGfm]}\n                  >\n                    {content}\n                  </ReactMarkdown>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nconst FullScreenImage: React.FC<{\n  src: string;\n  alt: string;\n  onClose: () => void;\n}> = ({ src, alt, onClose }) => {\n  return (\n    <div\n      className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center\"\n      onClick={onClose}\n    >\n      <button\n        onClick={onClose}\n        className=\"absolute top-4 right-4 p-2 rounded-full bg-black/50 hover:bg-black/70 text-white transition-colors\"\n        aria-label=\"Close fullscreen image\"\n      >\n        <X size={24} />\n      </button>\n      <img\n        src={src}\n        alt={alt}\n        className=\"max-h-[90vh] max-w-[90vw] object-contain rounded-lg\"\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n};\n\nexport const ClickableImage: React.FC<{\n  src: string;\n  alt: string;\n  className?: string;\n}> = ({ src, alt, className = \"\" }) => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  return (\n    <>\n      <img\n        src={src}\n        alt={alt}\n        className={`${className} cursor-pointer rounded hover:opacity-90 transition-opacity`}\n        onClick={() => setIsFullScreen(true)}\n      />\n      {isFullScreen && (\n        <FullScreenImage\n          src={src}\n          alt={alt}\n          onClose={() => setIsFullScreen(false)}\n        />\n      )}\n    </>\n  );\n};\n\n// dateUtils.ts\nexport function getRelativeTimeString(date: string | number | Date): string {\n  const now = new Date();\n  const past = new Date(date);\n  const diffInMs = now.getTime() - past.getTime();\n\n  const diffInSeconds = Math.floor(diffInMs / 1000);\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n  const diffInMonths = Math.floor(diffInDays / 30);\n  const diffInYears = Math.floor(diffInDays / 365);\n\n  if (diffInSeconds < 60) {\n    return \"just now\";\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} ${diffInMinutes === 1 ? \"minute\" : \"minutes\"} ago`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours} ${diffInHours === 1 ? \"hour\" : \"hours\"} ago`;\n  } else if (diffInDays < 30) {\n    return `${diffInDays} ${diffInDays === 1 ? \"day\" : \"days\"} ago`;\n  } else if (diffInMonths < 12) {\n    return `${diffInMonths} ${diffInMonths === 1 ? \"month\" : \"months\"} ago`;\n  } else {\n    return `${diffInYears} ${diffInYears === 1 ? \"year\" : \"years\"} ago`;\n  }\n}\n","import { Gallery } from \"../../types/datamodel\";\nimport { BaseAPI } from \"../../utils/baseapi\";\n\nexport class GalleryAPI extends BaseAPI {\n  async listGalleries(userId: string): Promise<Gallery[]> {\n    const response = await fetch(\n      `${this.getBaseUrl()}/gallery/?user_id=${userId}`,\n      {\n        headers: this.getHeaders(),\n      }\n    );\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to fetch galleries\");\n    return data.data;\n  }\n\n  async getGallery(galleryId: number, userId: string): Promise<Gallery> {\n    const response = await fetch(\n      `${this.getBaseUrl()}/gallery/${galleryId}?user_id=${userId}`,\n      {\n        headers: this.getHeaders(),\n      }\n    );\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to fetch gallery\");\n    return data.data;\n  }\n\n  async createGallery(\n    galleryData: Partial<Gallery>,\n    userId: string\n  ): Promise<Gallery> {\n    const gallery = {\n      ...galleryData,\n      user_id: userId,\n    };\n\n    console.log(\"Creating gallery with data:\", gallery);\n\n    const response = await fetch(`${this.getBaseUrl()}/gallery/`, {\n      method: \"POST\",\n      headers: this.getHeaders(),\n      body: JSON.stringify(gallery),\n    });\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to create gallery\");\n    return data.data;\n  }\n\n  async updateGallery(\n    galleryId: number,\n    galleryData: Partial<Gallery>,\n    userId: string\n  ): Promise<Gallery> {\n    const gallery = {\n      ...galleryData,\n      user_id: userId,\n    };\n\n    const response = await fetch(\n      `${this.getBaseUrl()}/gallery/${galleryId}?user_id=${userId}`,\n      {\n        method: \"PUT\",\n        headers: this.getHeaders(),\n        body: JSON.stringify(gallery),\n      }\n    );\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to update gallery\");\n    return data.data;\n  }\n\n  async deleteGallery(galleryId: number, userId: string): Promise<void> {\n    const response = await fetch(\n      `${this.getBaseUrl()}/gallery/${galleryId}?user_id=${userId}`,\n      {\n        method: \"DELETE\",\n        headers: this.getHeaders(),\n      }\n    );\n    const data = await response.json();\n    if (!data.status)\n      throw new Error(data.message || \"Failed to delete gallery\");\n  }\n\n  async syncGallery(url: string): Promise<Gallery> {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Failed to sync gallery from ${url}`);\n    }\n    return await response.json();\n  }\n}\n\nexport const galleryAPI = new GalleryAPI();\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\n  [\"polyline\", { points: \"15 3 21 3 21 9\", key: \"mznyad\" }],\n  [\"polyline\", { points: \"9 21 3 21 3 15\", key: \"1avn1i\" }],\n  [\"line\", { x1: \"21\", x2: \"14\", y1: \"3\", y2: \"10\", key: \"ota7mn\" }],\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\n]);\n\nexport { Maximize2 as default };\n//# sourceMappingURL=maximize-2.js.map\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Info = createLucideIcon(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\nexport { Info as default };\n//# sourceMappingURL=info.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","\"use client\";\n\nimport * as React from 'react';\nimport useState from \"rc-util/es/hooks/useState\";\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\nfunction isThenable(thing) {\n  return !!(thing === null || thing === void 0 ? void 0 : thing.then);\n}\nconst ActionButton = props => {\n  const {\n    type,\n    children,\n    prefixCls,\n    buttonProps,\n    close,\n    autoFocus,\n    emitEvent,\n    isSilent,\n    quitOnNullishReturnValue,\n    actionFn\n  } = props;\n  const clickedRef = React.useRef(false);\n  const buttonRef = React.useRef(null);\n  const [loading, setLoading] = useState(false);\n  const onInternalClose = function () {\n    close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n  };\n  React.useEffect(() => {\n    let timeoutId = null;\n    if (autoFocus) {\n      timeoutId = setTimeout(() => {\n        var _a;\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventScroll: true\n        });\n      });\n    }\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n  const handlePromiseOnOk = returnValueOfOnOk => {\n    if (!isThenable(returnValueOfOnOk)) {\n      return;\n    }\n    setLoading(true);\n    returnValueOfOnOk.then(function () {\n      setLoading(false, true);\n      onInternalClose.apply(void 0, arguments);\n      clickedRef.current = false;\n    }, e => {\n      // See: https://github.com/ant-design/ant-design/issues/6183\n      setLoading(false, true);\n      clickedRef.current = false;\n      // Do not throw if is `await` mode\n      if (isSilent === null || isSilent === void 0 ? void 0 : isSilent()) {\n        return;\n      }\n      return Promise.reject(e);\n    });\n  };\n  const onClick = e => {\n    if (clickedRef.current) {\n      return;\n    }\n    clickedRef.current = true;\n    if (!actionFn) {\n      onInternalClose();\n      return;\n    }\n    let returnValueOfOnOk;\n    if (emitEvent) {\n      returnValueOfOnOk = actionFn(e);\n      if (quitOnNullishReturnValue && !isThenable(returnValueOfOnOk)) {\n        clickedRef.current = false;\n        onInternalClose(e);\n        return;\n      }\n    } else if (actionFn.length) {\n      returnValueOfOnOk = actionFn(close);\n      // https://github.com/ant-design/ant-design/issues/23358\n      clickedRef.current = false;\n    } else {\n      returnValueOfOnOk = actionFn();\n      if (!isThenable(returnValueOfOnOk)) {\n        onInternalClose();\n        return;\n      }\n    }\n    handlePromiseOnOk(returnValueOfOnOk);\n  };\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(type), {\n    onClick: onClick,\n    loading: loading,\n    prefixCls: prefixCls\n  }, buttonProps, {\n    ref: buttonRef\n  }), children);\n};\nexport default ActionButton;","import React from 'react';\nexport const ModalContext = /*#__PURE__*/React.createContext({});\nexport const {\n  Provider: ModalContextProvider\n} = ModalContext;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport ActionButton from '../../_util/ActionButton';\nimport { ModalContext } from '../context';\nconst ConfirmCancelBtn = () => {\n  const {\n    autoFocusButton,\n    cancelButtonProps,\n    cancelTextLocale,\n    isSilent,\n    mergedOkCancel,\n    rootPrefixCls,\n    close,\n    onCancel,\n    onConfirm\n  } = useContext(ModalContext);\n  return mergedOkCancel ? (/*#__PURE__*/React.createElement(ActionButton, {\n    isSilent: isSilent,\n    actionFn: onCancel,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    autoFocus: autoFocusButton === 'cancel',\n    buttonProps: cancelButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, cancelTextLocale)) : null;\n};\nexport default ConfirmCancelBtn;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport ActionButton from '../../_util/ActionButton';\nimport { ModalContext } from '../context';\nconst ConfirmOkBtn = () => {\n  const {\n    autoFocusButton,\n    close,\n    isSilent,\n    okButtonProps,\n    rootPrefixCls,\n    okTextLocale,\n    okType,\n    onConfirm,\n    onOk\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(ActionButton, {\n    isSilent: isSilent,\n    type: okType || 'primary',\n    actionFn: onOk,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(true);\n    },\n    autoFocus: autoFocusButton === 'ok',\n    buttonProps: okButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, okTextLocale);\n};\nexport default ConfirmOkBtn;","import * as React from 'react';\nexport var RefContext = /*#__PURE__*/React.createContext({});","// =============================== Motion ===============================\nexport function getMotionName(prefixCls, transitionName, animationName) {\n  var motionName = transitionName;\n  if (!motionName && animationName) {\n    motionName = \"\".concat(prefixCls, \"-\").concat(animationName);\n  }\n  return motionName;\n}\n\n// =============================== Offset ===============================\nfunction getScroll(w, top) {\n  var ret = w[\"page\".concat(top ? 'Y' : 'X', \"Offset\")];\n  var method = \"scroll\".concat(top ? 'Top' : 'Left');\n  if (typeof ret !== 'number') {\n    var d = w.document;\n    ret = d.documentElement[method];\n    if (typeof ret !== 'number') {\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\nexport function offset(el) {\n  var rect = el.getBoundingClientRect();\n  var pos = {\n    left: rect.left,\n    top: rect.top\n  };\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  pos.top += getScroll(w, true);\n  return pos;\n}","import * as React from 'react';\nexport default /*#__PURE__*/React.memo(function (_ref) {\n  var children = _ref.children;\n  return children;\n}, function (_, _ref2) {\n  var shouldUpdate = _ref2.shouldUpdate;\n  return !shouldUpdate;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport classNames from 'classnames';\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport React, { useMemo, useRef } from 'react';\nimport { RefContext } from \"../../context\";\nimport MemoChildren from \"./MemoChildren\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nvar sentinelStyle = {\n  width: 0,\n  height: 0,\n  overflow: 'hidden',\n  outline: 'none'\n};\nvar entityStyle = {\n  outline: 'none'\n};\nvar Panel = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    title = props.title,\n    ariaId = props.ariaId,\n    footer = props.footer,\n    closable = props.closable,\n    closeIcon = props.closeIcon,\n    onClose = props.onClose,\n    children = props.children,\n    bodyStyle = props.bodyStyle,\n    bodyProps = props.bodyProps,\n    modalRender = props.modalRender,\n    onMouseDown = props.onMouseDown,\n    onMouseUp = props.onMouseUp,\n    holderRef = props.holderRef,\n    visible = props.visible,\n    forceRender = props.forceRender,\n    width = props.width,\n    height = props.height,\n    modalClassNames = props.classNames,\n    modalStyles = props.styles;\n\n  // ================================= Refs =================================\n  var _React$useContext = React.useContext(RefContext),\n    panelRef = _React$useContext.panel;\n  var mergedRef = useComposeRef(holderRef, panelRef);\n  var sentinelStartRef = useRef();\n  var sentinelEndRef = useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _sentinelStartRef$cur;\n        (_sentinelStartRef$cur = sentinelStartRef.current) === null || _sentinelStartRef$cur === void 0 || _sentinelStartRef$cur.focus({\n          preventScroll: true\n        });\n      },\n      changeActive: function changeActive(next) {\n        var _document = document,\n          activeElement = _document.activeElement;\n        if (next && activeElement === sentinelEndRef.current) {\n          sentinelStartRef.current.focus({\n            preventScroll: true\n          });\n        } else if (!next && activeElement === sentinelStartRef.current) {\n          sentinelEndRef.current.focus({\n            preventScroll: true\n          });\n        }\n      }\n    };\n  });\n\n  // ================================ Style =================================\n  var contentStyle = {};\n  if (width !== undefined) {\n    contentStyle.width = width;\n  }\n  if (height !== undefined) {\n    contentStyle.height = height;\n  }\n  // ================================ Render ================================\n  var footerNode = footer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-footer\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.footer),\n    style: _objectSpread({}, modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.footer)\n  }, footer) : null;\n  var headerNode = title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-header\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.header),\n    style: _objectSpread({}, modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.header)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-title\"),\n    id: ariaId\n  }, title)) : null;\n  var closableObj = useMemo(function () {\n    if (_typeof(closable) === 'object' && closable !== null) {\n      return closable;\n    }\n    if (closable) {\n      return {\n        closeIcon: closeIcon !== null && closeIcon !== void 0 ? closeIcon : /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-close-x\")\n        })\n      };\n    }\n    return {};\n  }, [closable, closeIcon, prefixCls]);\n  var ariaProps = pickAttrs(closableObj, true);\n  var closeBtnIsDisabled = _typeof(closable) === 'object' && closable.disabled;\n  var closerNode = closable ? /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    onClick: onClose,\n    \"aria-label\": \"Close\"\n  }, ariaProps, {\n    className: \"\".concat(prefixCls, \"-close\"),\n    disabled: closeBtnIsDisabled\n  }), closableObj.closeIcon) : null;\n  var content = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-content\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.content),\n    style: modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.content\n  }, closerNode, headerNode, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-body\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.body),\n    style: _objectSpread(_objectSpread({}, bodyStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.body)\n  }, bodyProps), children), footerNode);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: \"dialog-element\",\n    role: \"dialog\",\n    \"aria-labelledby\": title ? ariaId : null,\n    \"aria-modal\": \"true\",\n    ref: mergedRef,\n    style: _objectSpread(_objectSpread({}, style), contentStyle),\n    className: classNames(prefixCls, className),\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: sentinelStartRef,\n    tabIndex: 0,\n    style: entityStyle\n  }, /*#__PURE__*/React.createElement(MemoChildren, {\n    shouldUpdate: visible || forceRender\n  }, modalRender ? modalRender(content) : content)), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEndRef,\n    style: sentinelStyle\n  }));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Panel.displayName = 'Panel';\n}\nexport default Panel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport { offset } from \"../../util\";\nimport Panel from \"./Panel\";\nvar Content = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    title = props.title,\n    style = props.style,\n    className = props.className,\n    visible = props.visible,\n    forceRender = props.forceRender,\n    destroyOnClose = props.destroyOnClose,\n    motionName = props.motionName,\n    ariaId = props.ariaId,\n    onVisibleChanged = props.onVisibleChanged,\n    mousePosition = props.mousePosition;\n  var dialogRef = useRef();\n\n  // ============================= Style ==============================\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    transformOrigin = _React$useState2[0],\n    setTransformOrigin = _React$useState2[1];\n  var contentStyle = {};\n  if (transformOrigin) {\n    contentStyle.transformOrigin = transformOrigin;\n  }\n  function onPrepare() {\n    var elementOffset = offset(dialogRef.current);\n    setTransformOrigin(mousePosition && (mousePosition.x || mousePosition.y) ? \"\".concat(mousePosition.x - elementOffset.left, \"px \").concat(mousePosition.y - elementOffset.top, \"px\") : '');\n  }\n\n  // ============================= Render =============================\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    onVisibleChanged: onVisibleChanged,\n    onAppearPrepare: onPrepare,\n    onEnterPrepare: onPrepare,\n    forceRender: forceRender,\n    motionName: motionName,\n    removeOnLeave: destroyOnClose,\n    ref: dialogRef\n  }, function (_ref, motionRef) {\n    var motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(Panel, _extends({}, props, {\n      ref: ref,\n      title: title,\n      ariaId: ariaId,\n      prefixCls: prefixCls,\n      holderRef: motionRef,\n      style: _objectSpread(_objectSpread(_objectSpread({}, motionStyle), style), contentStyle),\n      className: classNames(className, motionClassName)\n    }));\n  });\n});\nContent.displayName = 'Content';\nexport default Content;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nvar Mask = function Mask(props) {\n  var prefixCls = props.prefixCls,\n    style = props.style,\n    visible = props.visible,\n    maskProps = props.maskProps,\n    motionName = props.motionName,\n    className = props.className;\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    key: \"mask\",\n    visible: visible,\n    motionName: motionName,\n    leavedClassName: \"\".concat(prefixCls, \"-mask-hidden\")\n  }, function (_ref, ref) {\n    var motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref,\n      style: _objectSpread(_objectSpread({}, motionStyle), style),\n      className: classNames(\"\".concat(prefixCls, \"-mask\"), motionClassName, className)\n    }, maskProps));\n  });\n};\nexport default Mask;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport contains from \"rc-util/es/Dom/contains\";\nimport useId from \"rc-util/es/hooks/useId\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { getMotionName } from \"../util\";\nimport Content from \"./Content\";\nimport Mask from \"./Mask\";\nimport { warning } from \"rc-util/es/warning\";\nvar Dialog = function Dialog(props) {\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-dialog' : _props$prefixCls,\n    zIndex = props.zIndex,\n    _props$visible = props.visible,\n    visible = _props$visible === void 0 ? false : _props$visible,\n    _props$keyboard = props.keyboard,\n    keyboard = _props$keyboard === void 0 ? true : _props$keyboard,\n    _props$focusTriggerAf = props.focusTriggerAfterClose,\n    focusTriggerAfterClose = _props$focusTriggerAf === void 0 ? true : _props$focusTriggerAf,\n    wrapStyle = props.wrapStyle,\n    wrapClassName = props.wrapClassName,\n    wrapProps = props.wrapProps,\n    onClose = props.onClose,\n    afterOpenChange = props.afterOpenChange,\n    afterClose = props.afterClose,\n    transitionName = props.transitionName,\n    animation = props.animation,\n    _props$closable = props.closable,\n    closable = _props$closable === void 0 ? true : _props$closable,\n    _props$mask = props.mask,\n    mask = _props$mask === void 0 ? true : _props$mask,\n    maskTransitionName = props.maskTransitionName,\n    maskAnimation = props.maskAnimation,\n    _props$maskClosable = props.maskClosable,\n    maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable,\n    maskStyle = props.maskStyle,\n    maskProps = props.maskProps,\n    rootClassName = props.rootClassName,\n    modalClassNames = props.classNames,\n    modalStyles = props.styles;\n  if (process.env.NODE_ENV !== 'production') {\n    ['wrapStyle', 'bodyStyle', 'maskStyle'].forEach(function (prop) {\n      // (prop in props) && console.error(`Warning: ${prop} is deprecated, please use styles instead.`)\n      warning(!(prop in props), \"\".concat(prop, \" is deprecated, please use styles instead.\"));\n    });\n    if ('wrapClassName' in props) {\n      warning(false, \"wrapClassName is deprecated, please use classNames instead.\");\n    }\n  }\n  var lastOutSideActiveElementRef = useRef();\n  var wrapperRef = useRef();\n  var contentRef = useRef();\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n\n  // ========================== Init ==========================\n  var ariaId = useId();\n  function saveLastOutSideActiveElementRef() {\n    if (!contains(wrapperRef.current, document.activeElement)) {\n      lastOutSideActiveElementRef.current = document.activeElement;\n    }\n  }\n  function focusDialogContent() {\n    if (!contains(wrapperRef.current, document.activeElement)) {\n      var _contentRef$current;\n      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus();\n    }\n  }\n\n  // ========================= Events =========================\n  function onDialogVisibleChanged(newVisible) {\n    // Try to focus\n    if (newVisible) {\n      focusDialogContent();\n    } else {\n      // Clean up scroll bar & focus back\n      setAnimatedVisible(false);\n      if (mask && lastOutSideActiveElementRef.current && focusTriggerAfterClose) {\n        try {\n          lastOutSideActiveElementRef.current.focus({\n            preventScroll: true\n          });\n        } catch (e) {\n          // Do nothing\n        }\n        lastOutSideActiveElementRef.current = null;\n      }\n\n      // Trigger afterClose only when change visible from true to false\n      if (animatedVisible) {\n        afterClose === null || afterClose === void 0 || afterClose();\n      }\n    }\n    afterOpenChange === null || afterOpenChange === void 0 || afterOpenChange(newVisible);\n  }\n  function onInternalClose(e) {\n    onClose === null || onClose === void 0 || onClose(e);\n  }\n\n  // >>> Content\n  var contentClickRef = useRef(false);\n  var contentTimeoutRef = useRef();\n\n  // We need record content click incase content popup out of dialog\n  var onContentMouseDown = function onContentMouseDown() {\n    clearTimeout(contentTimeoutRef.current);\n    contentClickRef.current = true;\n  };\n  var onContentMouseUp = function onContentMouseUp() {\n    contentTimeoutRef.current = setTimeout(function () {\n      contentClickRef.current = false;\n    });\n  };\n\n  // >>> Wrapper\n  // Close only when element not on dialog\n  var onWrapperClick = null;\n  if (maskClosable) {\n    onWrapperClick = function onWrapperClick(e) {\n      if (contentClickRef.current) {\n        contentClickRef.current = false;\n      } else if (wrapperRef.current === e.target) {\n        onInternalClose(e);\n      }\n    };\n  }\n  function onWrapperKeyDown(e) {\n    if (keyboard && e.keyCode === KeyCode.ESC) {\n      e.stopPropagation();\n      onInternalClose(e);\n      return;\n    }\n\n    // keep focus inside dialog\n    if (visible && e.keyCode === KeyCode.TAB) {\n      contentRef.current.changeActive(!e.shiftKey);\n    }\n  }\n\n  // ========================= Effect =========================\n  useEffect(function () {\n    if (visible) {\n      setAnimatedVisible(true);\n      saveLastOutSideActiveElementRef();\n    }\n  }, [visible]);\n\n  // Remove direct should also check the scroll bar update\n  useEffect(function () {\n    return function () {\n      clearTimeout(contentTimeoutRef.current);\n    };\n  }, []);\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread({\n    zIndex: zIndex\n  }, wrapStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.wrapper), {}, {\n    display: !animatedVisible ? 'none' : null\n  });\n\n  // ========================= Render =========================\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-root\"), rootClassName)\n  }, pickAttrs(props, {\n    data: true\n  })), /*#__PURE__*/React.createElement(Mask, {\n    prefixCls: prefixCls,\n    visible: mask && visible,\n    motionName: getMotionName(prefixCls, maskTransitionName, maskAnimation),\n    style: _objectSpread(_objectSpread({\n      zIndex: zIndex\n    }, maskStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.mask),\n    maskProps: maskProps,\n    className: modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.mask\n  }), /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: -1,\n    onKeyDown: onWrapperKeyDown,\n    className: classNames(\"\".concat(prefixCls, \"-wrap\"), wrapClassName, modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.wrapper),\n    ref: wrapperRef,\n    onClick: onWrapperClick,\n    style: mergedStyle\n  }, wrapProps), /*#__PURE__*/React.createElement(Content, _extends({}, props, {\n    onMouseDown: onContentMouseDown,\n    onMouseUp: onContentMouseUp,\n    ref: contentRef,\n    closable: closable,\n    ariaId: ariaId,\n    prefixCls: prefixCls,\n    visible: visible && animatedVisible,\n    onClose: onInternalClose,\n    onVisibleChanged: onDialogVisibleChanged,\n    motionName: getMotionName(prefixCls, transitionName, animation)\n  }))));\n};\nexport default Dialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport Portal from '@rc-component/portal';\nimport * as React from 'react';\nimport { RefContext } from \"./context\";\nimport Dialog from \"./Dialog\";\n// fix issue #10656\n/*\n * getContainer remarks\n * Custom container should not be return, because in the Portal component, it will remove the\n * return container element here, if the custom container is the only child of it's component,\n * like issue #10656, It will has a conflict with removeChild method in react-dom.\n * So here should add a child (div element) to custom container.\n * */\n\nvar DialogWrap = function DialogWrap(props) {\n  var visible = props.visible,\n    getContainer = props.getContainer,\n    forceRender = props.forceRender,\n    _props$destroyOnClose = props.destroyOnClose,\n    destroyOnClose = _props$destroyOnClose === void 0 ? false : _props$destroyOnClose,\n    _afterClose = props.afterClose,\n    panelRef = props.panelRef;\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n  var refContext = React.useMemo(function () {\n    return {\n      panel: panelRef\n    };\n  }, [panelRef]);\n  React.useEffect(function () {\n    if (visible) {\n      setAnimatedVisible(true);\n    }\n  }, [visible]);\n\n  // Destroy on close will remove wrapped div\n  if (!forceRender && destroyOnClose && !animatedVisible) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(RefContext.Provider, {\n    value: refContext\n  }, /*#__PURE__*/React.createElement(Portal, {\n    open: visible || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: visible || animatedVisible\n  }, /*#__PURE__*/React.createElement(Dialog, _extends({}, props, {\n    destroyOnClose: destroyOnClose,\n    afterClose: function afterClose() {\n      _afterClose === null || _afterClose === void 0 || _afterClose();\n      setAnimatedVisible(false);\n    }\n  }))));\n};\nDialogWrap.displayName = 'Dialog';\nexport default DialogWrap;","import DialogWrap from \"./DialogWrap\";\nimport Panel from \"./Dialog/Content/Panel\";\nexport { Panel };\nexport default DialogWrap;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport Button from '../../button';\nimport { ModalContext } from '../context';\nconst NormalCancelBtn = () => {\n  const {\n    cancelButtonProps,\n    cancelTextLocale,\n    onCancel\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: onCancel\n  }, cancelButtonProps), cancelTextLocale);\n};\nexport default NormalCancelBtn;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport Button from '../../button';\nimport { convertLegacyProps } from '../../button/buttonHelpers';\nimport { ModalContext } from '../context';\nconst NormalOkBtn = () => {\n  const {\n    confirmLoading,\n    okButtonProps,\n    okType,\n    okTextLocale,\n    onOk\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(okType), {\n    loading: confirmLoading,\n    onClick: onOk\n  }, okButtonProps), okTextLocale);\n};\nexport default NormalOkBtn;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport { DisabledContextProvider } from '../config-provider/DisabledContext';\nimport { useLocale } from '../locale';\nimport NormalCancelBtn from './components/NormalCancelBtn';\nimport NormalOkBtn from './components/NormalOkBtn';\nimport { ModalContextProvider } from './context';\nimport { getConfirmLocale } from './locale';\nexport function renderCloseIcon(prefixCls, closeIcon) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-close-x`\n  }, closeIcon || /*#__PURE__*/React.createElement(CloseOutlined, {\n    className: `${prefixCls}-close-icon`\n  }));\n}\nexport const Footer = props => {\n  const {\n    okText,\n    okType = 'primary',\n    cancelText,\n    confirmLoading,\n    onOk,\n    onCancel,\n    okButtonProps,\n    cancelButtonProps,\n    footer\n  } = props;\n  const [locale] = useLocale('Modal', getConfirmLocale());\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (locale === null || locale === void 0 ? void 0 : locale.okText);\n  const cancelTextLocale = cancelText || (locale === null || locale === void 0 ? void 0 : locale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = {\n    confirmLoading,\n    okButtonProps,\n    cancelButtonProps,\n    okTextLocale,\n    cancelTextLocale,\n    okType,\n    onOk,\n    onCancel\n  };\n  const btnCtxValueMemo = React.useMemo(() => btnCtxValue, _toConsumableArray(Object.values(btnCtxValue)));\n  let footerNode;\n  if (typeof footer === 'function' || typeof footer === 'undefined') {\n    footerNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalCancelBtn, null), /*#__PURE__*/React.createElement(NormalOkBtn, null));\n    if (typeof footer === 'function') {\n      footerNode = footer(footerNode, {\n        OkBtn: NormalOkBtn,\n        CancelBtn: NormalCancelBtn\n      });\n    }\n    footerNode = /*#__PURE__*/React.createElement(ModalContextProvider, {\n      value: btnCtxValueMemo\n    }, footerNode);\n  } else {\n    footerNode = footer;\n  }\n  return /*#__PURE__*/React.createElement(DisabledContextProvider, {\n    disabled: false\n  }, footerNode);\n};","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { unit } from '@ant-design/cssinjs';\nimport { getMediaSize } from '../../grid/style';\nimport { genFocusStyle, resetComponent } from '../../style';\nimport { initFadeMotion, initZoomMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nfunction box(position) {\n  return {\n    position,\n    inset: 0\n  };\n}\nexport const genModalMaskStyle = token => {\n  const {\n    componentCls,\n    antCls\n  } = token;\n  return [{\n    [`${componentCls}-root`]: {\n      [`${componentCls}${antCls}-zoom-enter, ${componentCls}${antCls}-zoom-appear`]: {\n        // reset scale avoid mousePosition bug\n        transform: 'none',\n        opacity: 0,\n        animationDuration: token.motionDurationSlow,\n        // https://github.com/ant-design/ant-design/issues/11777\n        userSelect: 'none'\n      },\n      // https://github.com/ant-design/ant-design/issues/37329\n      // https://github.com/ant-design/ant-design/issues/40272\n      [`${componentCls}${antCls}-zoom-leave ${componentCls}-content`]: {\n        pointerEvents: 'none'\n      },\n      [`${componentCls}-mask`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        height: '100%',\n        backgroundColor: token.colorBgMask,\n        pointerEvents: 'none',\n        [`${componentCls}-hidden`]: {\n          display: 'none'\n        }\n      }),\n      [`${componentCls}-wrap`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        overflow: 'auto',\n        outline: 0,\n        WebkitOverflowScrolling: 'touch'\n      })\n    }\n  }, {\n    [`${componentCls}-root`]: initFadeMotion(token)\n  }];\n};\nconst genModalStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return [\n  // ======================== Root =========================\n  {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl'\n      },\n      [`${componentCls}-centered`]: {\n        textAlign: 'center',\n        '&::before': {\n          display: 'inline-block',\n          width: 0,\n          height: '100%',\n          verticalAlign: 'middle',\n          content: '\"\"'\n        },\n        [componentCls]: {\n          top: 0,\n          display: 'inline-block',\n          paddingBottom: 0,\n          textAlign: 'start',\n          verticalAlign: 'middle'\n        }\n      },\n      [`@media (max-width: ${token.screenSMMax}px)`]: {\n        [componentCls]: {\n          maxWidth: 'calc(100vw - 16px)',\n          margin: `${unit(token.marginXS)} auto`\n        },\n        [`${componentCls}-centered`]: {\n          [componentCls]: {\n            flex: 1\n          }\n        }\n      }\n    }\n  },\n  // ======================== Modal ========================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      pointerEvents: 'none',\n      position: 'relative',\n      top: 100,\n      width: 'auto',\n      maxWidth: `calc(100vw - ${unit(token.calc(token.margin).mul(2).equal())})`,\n      margin: '0 auto',\n      paddingBottom: token.paddingLG,\n      [`${componentCls}-title`]: {\n        margin: 0,\n        color: token.titleColor,\n        fontWeight: token.fontWeightStrong,\n        fontSize: token.titleFontSize,\n        lineHeight: token.titleLineHeight,\n        wordWrap: 'break-word'\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative',\n        backgroundColor: token.contentBg,\n        backgroundClip: 'padding-box',\n        border: 0,\n        borderRadius: token.borderRadiusLG,\n        boxShadow: token.boxShadow,\n        pointerEvents: 'auto',\n        padding: token.contentPadding\n      },\n      [`${componentCls}-close`]: Object.assign({\n        position: 'absolute',\n        top: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        insetInlineEnd: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        zIndex: token.calc(token.zIndexPopupBase).add(10).equal(),\n        padding: 0,\n        color: token.modalCloseIconColor,\n        fontWeight: token.fontWeightStrong,\n        lineHeight: 1,\n        textDecoration: 'none',\n        background: 'transparent',\n        borderRadius: token.borderRadiusSM,\n        width: token.modalCloseBtnSize,\n        height: token.modalCloseBtnSize,\n        border: 0,\n        outline: 0,\n        cursor: 'pointer',\n        transition: `color ${token.motionDurationMid}, background-color ${token.motionDurationMid}`,\n        '&-x': {\n          display: 'flex',\n          fontSize: token.fontSizeLG,\n          fontStyle: 'normal',\n          lineHeight: unit(token.modalCloseBtnSize),\n          justifyContent: 'center',\n          textTransform: 'none',\n          textRendering: 'auto'\n        },\n        '&:disabled': {\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          color: token.modalCloseIconHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          textDecoration: 'none'\n        },\n        '&:active': {\n          backgroundColor: token.colorBgTextActive\n        }\n      }, genFocusStyle(token)),\n      [`${componentCls}-header`]: {\n        color: token.colorText,\n        background: token.headerBg,\n        borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`,\n        marginBottom: token.headerMarginBottom,\n        padding: token.headerPadding,\n        borderBottom: token.headerBorderBottom\n      },\n      [`${componentCls}-body`]: {\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        wordWrap: 'break-word',\n        padding: token.bodyPadding,\n        [`${componentCls}-body-skeleton`]: {\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: `${unit(token.margin)} auto`\n        }\n      },\n      [`${componentCls}-footer`]: {\n        textAlign: 'end',\n        background: token.footerBg,\n        marginTop: token.footerMarginTop,\n        padding: token.footerPadding,\n        borderTop: token.footerBorderTop,\n        borderRadius: token.footerBorderRadius,\n        [`> ${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginInlineStart: token.marginXS\n        }\n      },\n      [`${componentCls}-open`]: {\n        overflow: 'hidden'\n      }\n    })\n  },\n  // ======================== Pure =========================\n  {\n    [`${componentCls}-pure-panel`]: {\n      top: 'auto',\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      [`${componentCls}-content,\n          ${componentCls}-body,\n          ${componentCls}-confirm-body-wrapper`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto'\n      },\n      [`${componentCls}-confirm-body`]: {\n        marginBottom: 'auto'\n      }\n    }\n  }];\n};\nconst genRTLStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl',\n        [`${componentCls}-confirm-body`]: {\n          direction: 'rtl'\n        }\n      }\n    }\n  };\n};\nconst genResponsiveWidthStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const gridMediaSizesMap = getMediaSize(token);\n  delete gridMediaSizesMap.xs;\n  const responsiveStyles = Object.keys(gridMediaSizesMap).map(key => ({\n    [`@media (min-width: ${unit(gridMediaSizesMap[key])})`]: {\n      width: `var(--${componentCls.replace('.', '')}-${key}-width)`\n    }\n  }));\n  return {\n    [`${componentCls}-root`]: {\n      [componentCls]: [{\n        width: `var(--${componentCls.replace('.', '')}-xs-width)`\n      }].concat(_toConsumableArray(responsiveStyles))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const headerPaddingVertical = token.padding;\n  const headerFontSize = token.fontSizeHeading5;\n  const headerLineHeight = token.lineHeightHeading5;\n  const modalToken = mergeToken(token, {\n    modalHeaderHeight: token.calc(token.calc(headerLineHeight).mul(headerFontSize).equal()).add(token.calc(headerPaddingVertical).mul(2).equal()).equal(),\n    modalFooterBorderColorSplit: token.colorSplit,\n    modalFooterBorderStyle: token.lineType,\n    modalFooterBorderWidth: token.lineWidth,\n    modalCloseIconColor: token.colorIcon,\n    modalCloseIconHoverColor: token.colorIconHover,\n    modalCloseBtnSize: token.controlHeight,\n    modalConfirmIconSize: token.fontHeight,\n    modalTitleHeight: token.calc(token.titleFontSize).mul(token.titleLineHeight).equal()\n  });\n  return modalToken;\n};\nexport const prepareComponentToken = token => ({\n  footerBg: 'transparent',\n  headerBg: token.colorBgElevated,\n  titleLineHeight: token.lineHeightHeading5,\n  titleFontSize: token.fontSizeHeading5,\n  contentBg: token.colorBgElevated,\n  titleColor: token.colorTextHeading,\n  // internal\n  contentPadding: token.wireframe ? 0 : `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n  headerPadding: token.wireframe ? `${unit(token.padding)} ${unit(token.paddingLG)}` : 0,\n  headerBorderBottom: token.wireframe ? `${unit(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  headerMarginBottom: token.wireframe ? 0 : token.marginXS,\n  bodyPadding: token.wireframe ? token.paddingLG : 0,\n  footerPadding: token.wireframe ? `${unit(token.paddingXS)} ${unit(token.padding)}` : 0,\n  footerBorderTop: token.wireframe ? `${unit(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  footerBorderRadius: token.wireframe ? `0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}` : 0,\n  footerMarginTop: token.wireframe ? 0 : token.marginSM,\n  confirmBodyPadding: token.wireframe ? `${unit(token.padding * 2)} ${unit(token.padding * 2)} ${unit(token.paddingLG)}` : 0,\n  confirmIconMarginInlineEnd: token.wireframe ? token.margin : token.marginSM,\n  confirmBtnsMarginTop: token.wireframe ? token.marginLG : token.marginSM\n});\nexport default genStyleHooks('Modal', token => {\n  const modalToken = prepareToken(token);\n  return [genModalStyle(modalToken), genRTLStyle(modalToken), genModalMaskStyle(modalToken), initZoomMotion(modalToken, 'zoom'), genResponsiveWidthStyle(modalToken)];\n}, prepareComponentToken, {\n  unitless: {\n    titleLineHeight: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport Dialog from 'rc-dialog';\nimport ContextIsolator from '../_util/ContextIsolator';\nimport useClosable, { pickClosable } from '../_util/hooks/useClosable';\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport { canUseDocElement } from '../_util/styleChecker';\nimport { devUseWarning } from '../_util/warning';\nimport zIndexContext from '../_util/zindexContext';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Skeleton from '../skeleton';\nimport { usePanelRef } from '../watermark/context';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nlet mousePosition;\n// ref: https://github.com/ant-design/ant-design/issues/15795\nconst getClickPosition = e => {\n  mousePosition = {\n    x: e.pageX,\n    y: e.pageY\n  };\n  // 100ms 内发生过点击事件，则从点击位置动画展示\n  // 否则直接 zoom 展示\n  // 这样可以兼容非点击方式展开\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n// 只有点击事件支持从鼠标位置动画展开\nif (canUseDocElement()) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\nconst Modal = props => {\n  var _a;\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction,\n    modal: modalContext\n  } = React.useContext(ConfigContext);\n  const handleCancel = e => {\n    const {\n      onCancel\n    } = props;\n    onCancel === null || onCancel === void 0 ? void 0 : onCancel(e);\n  };\n  const handleOk = e => {\n    const {\n      onOk\n    } = props;\n    onOk === null || onOk === void 0 ? void 0 : onOk(e);\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    [['visible', 'open'], ['bodyStyle', 'styles.body'], ['maskStyle', 'styles.mask']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      open,\n      wrapClassName,\n      centered,\n      getContainer,\n      focusTriggerAfterClose = true,\n      style,\n      // Deprecated\n      visible,\n      width = 520,\n      footer,\n      classNames: modalClassNames,\n      styles: modalStyles,\n      children,\n      loading\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"open\", \"wrapClassName\", \"centered\", \"getContainer\", \"focusTriggerAfterClose\", \"style\", \"visible\", \"width\", \"footer\", \"classNames\", \"styles\", \"children\", \"loading\"]);\n  const prefixCls = getPrefixCls('modal', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const wrapClassNameExtended = classNames(wrapClassName, {\n    [`${prefixCls}-centered`]: centered !== null && centered !== void 0 ? centered : modalContext === null || modalContext === void 0 ? void 0 : modalContext.centered,\n    [`${prefixCls}-wrap-rtl`]: direction === 'rtl'\n  });\n  const dialogFooter = footer !== null && !loading ? (/*#__PURE__*/React.createElement(Footer, Object.assign({}, props, {\n    onOk: handleOk,\n    onCancel: handleCancel\n  }))) : null;\n  const [mergedClosable, mergedCloseIcon, closeBtnIsDisabled] = useClosable(pickClosable(props), pickClosable(modalContext), {\n    closable: true,\n    closeIcon: /*#__PURE__*/React.createElement(CloseOutlined, {\n      className: `${prefixCls}-close-icon`\n    }),\n    closeIconRender: icon => renderCloseIcon(prefixCls, icon)\n  });\n  // ============================ Refs ============================\n  // Select `ant-modal-content` by `panelRef`\n  const panelRef = usePanelRef(`.${prefixCls}-content`);\n  // ============================ zIndex ============================\n  const [zIndex, contextZIndex] = useZIndex('Modal', restProps.zIndex);\n  // =========================== Width ============================\n  const [numWidth, responsiveWidth] = React.useMemo(() => {\n    if (width && typeof width === 'object') {\n      return [undefined, width];\n    }\n    return [width, undefined];\n  }, [width]);\n  const responsiveWidthVars = React.useMemo(() => {\n    const vars = {};\n    if (responsiveWidth) {\n      Object.keys(responsiveWidth).forEach(breakpoint => {\n        const breakpointWidth = responsiveWidth[breakpoint];\n        if (breakpointWidth !== undefined) {\n          vars[`--${prefixCls}-${breakpoint}-width`] = typeof breakpointWidth === 'number' ? `${breakpointWidth}px` : breakpointWidth;\n        }\n      });\n    }\n    return vars;\n  }, [responsiveWidth]);\n  // =========================== Render ===========================\n  return wrapCSSVar(/*#__PURE__*/React.createElement(ContextIsolator, {\n    form: true,\n    space: true\n  }, /*#__PURE__*/React.createElement(zIndexContext.Provider, {\n    value: contextZIndex\n  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    width: numWidth\n  }, restProps, {\n    zIndex: zIndex,\n    getContainer: getContainer === undefined ? getContextPopupContainer : getContainer,\n    prefixCls: prefixCls,\n    rootClassName: classNames(hashId, rootClassName, cssVarCls, rootCls),\n    footer: dialogFooter,\n    visible: open !== null && open !== void 0 ? open : visible,\n    mousePosition: (_a = restProps.mousePosition) !== null && _a !== void 0 ? _a : mousePosition,\n    onClose: handleCancel,\n    closable: mergedClosable ? {\n      disabled: closeBtnIsDisabled,\n      closeIcon: mergedCloseIcon\n    } : mergedClosable,\n    closeIcon: mergedCloseIcon,\n    focusTriggerAfterClose: focusTriggerAfterClose,\n    transitionName: getTransitionName(rootPrefixCls, 'zoom', props.transitionName),\n    maskTransitionName: getTransitionName(rootPrefixCls, 'fade', props.maskTransitionName),\n    className: classNames(hashId, className, modalContext === null || modalContext === void 0 ? void 0 : modalContext.className),\n    style: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.style), style), responsiveWidthVars),\n    classNames: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.classNames), modalClassNames), {\n      wrapper: classNames(wrapClassNameExtended, modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.wrapper)\n    }),\n    styles: Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.styles), modalStyles),\n    panelRef: panelRef\n  }), loading ? (/*#__PURE__*/React.createElement(Skeleton, {\n    active: true,\n    title: false,\n    paragraph: {\n      rows: 4\n    },\n    className: `${prefixCls}-body-skeleton`\n  })) : children))));\n};\nexport default Modal;","import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport const canUseDocElement = () => canUseDom() && window.document.documentElement;\nexport { isStyleSupport };","// Style as confirm component\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { clearFix } from '../../style';\nimport { genSubStyleComponent } from '../../theme/internal';\n// ============================= Confirm ==============================\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS,\n        // https://github.com/ant-design/ant-design/issues/51912\n        maxWidth: `calc(100% - ${unit(token.marginSM)})`\n      },\n      // https://github.com/ant-design/ant-design/issues/48159\n      [`${token.iconCls} + ${confirmComponentCls}-paragraph`]: {\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n});","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport classNames from 'classnames';\nimport { CONTAINER_MAX_OFFSET } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport { devUseWarning } from '../_util/warning';\nimport ConfigProvider from '../config-provider';\nimport { useLocale } from '../locale';\nimport useToken from '../theme/useToken';\nimport CancelBtn from './components/ConfirmCancelBtn';\nimport OkBtn from './components/ConfirmOkBtn';\nimport { ModalContextProvider } from './context';\nimport Modal from './Modal';\nimport Confirm from './style/confirm';\nexport function ConfirmContent(props) {\n  const {\n      prefixCls,\n      icon,\n      okText,\n      cancelText,\n      confirmPrefixCls,\n      type,\n      okCancel,\n      footer,\n      // Legacy for static function usage\n      locale: staticLocale\n    } = props,\n    resetProps = __rest(props, [\"prefixCls\", \"icon\", \"okText\", \"cancelText\", \"confirmPrefixCls\", \"type\", \"okCancel\", \"footer\", \"locale\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof icon === 'string' && icon.length > 2), 'breaking', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`) : void 0;\n  }\n  // Icon\n  let mergedIcon = icon;\n  // 支持传入{ icon: null }来隐藏`Modal.confirm`默认的Icon\n  if (!icon && icon !== null) {\n    switch (type) {\n      case 'info':\n        mergedIcon = /*#__PURE__*/React.createElement(InfoCircleFilled, null);\n        break;\n      case 'success':\n        mergedIcon = /*#__PURE__*/React.createElement(CheckCircleFilled, null);\n        break;\n      case 'error':\n        mergedIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n        break;\n      default:\n        mergedIcon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null);\n    }\n  }\n  // 默认为 true，保持向下兼容\n  const mergedOkCancel = okCancel !== null && okCancel !== void 0 ? okCancel : type === 'confirm';\n  const autoFocusButton = props.autoFocusButton === null ? false : props.autoFocusButton || 'ok';\n  const [locale] = useLocale('Modal');\n  const mergedLocale = staticLocale || locale;\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (mergedOkCancel ? mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.okText : mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.justOkText);\n  const cancelTextLocale = cancelText || (mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = Object.assign({\n    autoFocusButton,\n    cancelTextLocale,\n    okTextLocale,\n    mergedOkCancel\n  }, resetProps);\n  const btnCtxValueMemo = React.useMemo(() => btnCtxValue, _toConsumableArray(Object.values(btnCtxValue)));\n  // ====================== Footer Origin Node ======================\n  const footerOriginNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CancelBtn, null), /*#__PURE__*/React.createElement(OkBtn, null));\n  const hasTitle = props.title !== undefined && props.title !== null;\n  const bodyCls = `${confirmPrefixCls}-body`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-body-wrapper`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(bodyCls, {\n      [`${bodyCls}-has-title`]: hasTitle\n    })\n  }, mergedIcon, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-paragraph`\n  }, hasTitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${confirmPrefixCls}-title`\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-content`\n  }, props.content))), footer === undefined || typeof footer === 'function' ? (/*#__PURE__*/React.createElement(ModalContextProvider, {\n    value: btnCtxValueMemo\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-btns`\n  }, typeof footer === 'function' ? footer(footerOriginNode, {\n    OkBtn,\n    CancelBtn\n  }) : footerOriginNode))) : footer, /*#__PURE__*/React.createElement(Confirm, {\n    prefixCls: prefixCls\n  }));\n}\nconst ConfirmDialog = props => {\n  const {\n    close,\n    zIndex,\n    maskStyle,\n    direction,\n    prefixCls,\n    wrapClassName,\n    rootPrefixCls,\n    bodyStyle,\n    closable = false,\n    onConfirm,\n    styles\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    [['visible', 'open'], ['bodyStyle', 'styles.body'], ['maskStyle', 'styles.mask']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  const width = props.width || 416;\n  const style = props.style || {};\n  const mask = props.mask === undefined ? true : props.mask;\n  // 默认为 false，保持旧版默认行为\n  const maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n  const classString = classNames(confirmPrefixCls, `${confirmPrefixCls}-${props.type}`, {\n    [`${confirmPrefixCls}-rtl`]: direction === 'rtl'\n  }, props.className);\n  // ========================= zIndex =========================\n  const [, token] = useToken();\n  const mergedZIndex = React.useMemo(() => {\n    if (zIndex !== undefined) {\n      return zIndex;\n    }\n    // Static always use max zIndex\n    return token.zIndexPopupBase + CONTAINER_MAX_OFFSET;\n  }, [zIndex, token]);\n  // ========================= Render =========================\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    className: classString,\n    wrapClassName: classNames({\n      [`${confirmPrefixCls}-centered`]: !!props.centered\n    }, wrapClassName),\n    onCancel: () => {\n      close === null || close === void 0 ? void 0 : close({\n        triggerCancel: true\n      });\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    title: \"\",\n    footer: null,\n    transitionName: getTransitionName(rootPrefixCls || '', 'zoom', props.transitionName),\n    maskTransitionName: getTransitionName(rootPrefixCls || '', 'fade', props.maskTransitionName),\n    mask: mask,\n    maskClosable: maskClosable,\n    style: style,\n    styles: Object.assign({\n      body: bodyStyle,\n      mask: maskStyle\n    }, styles),\n    width: width,\n    zIndex: mergedZIndex,\n    closable: closable\n  }), /*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n    confirmPrefixCls: confirmPrefixCls\n  })));\n};\nconst ConfirmDialogWrapper = props => {\n  const {\n    rootPrefixCls,\n    iconPrefixCls,\n    direction,\n    theme\n  } = props;\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: iconPrefixCls,\n    direction: direction,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ConfirmDialog.displayName = 'ConfirmDialog';\n  ConfirmDialogWrapper.displayName = 'ConfirmDialogWrapper';\n}\nexport default ConfirmDialogWrapper;","const destroyFns = [];\nexport default destroyFns;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport { getReactRender } from '../config-provider/UnstableContext';\nimport ConfirmDialog from './ConfirmDialog';\nimport destroyFns from './destroyFns';\nimport { getConfirmLocale } from './locale';\nlet defaultRootPrefixCls = '';\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\nconst ConfirmDialogWrapper = props => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    getContainer,\n    direction\n  } = props;\n  const runtimeLocale = getConfirmLocale();\n  const config = useContext(ConfigContext);\n  const rootPrefixCls = getRootPrefixCls() || config.getPrefixCls();\n  // because Modal.config set rootPrefixCls, which is different from other components\n  const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n  let mergedGetContainer = getContainer;\n  if (mergedGetContainer === false) {\n    mergedGetContainer = undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Static method not support `getContainer` to be `false` since it do not have context env.') : void 0;\n    }\n  }\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props, {\n    rootPrefixCls: rootPrefixCls,\n    prefixCls: prefixCls,\n    iconPrefixCls: config.iconPrefixCls,\n    theme: config.theme,\n    direction: direction !== null && direction !== void 0 ? direction : config.direction,\n    locale: (_b = (_a = config.locale) === null || _a === void 0 ? void 0 : _a.Modal) !== null && _b !== void 0 ? _b : runtimeLocale,\n    getContainer: mergedGetContainer\n  }));\n};\nexport default function confirm(config) {\n  const global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('Modal');\n  }\n  const container = document.createDocumentFragment();\n  let currentConfig = Object.assign(Object.assign({}, config), {\n    close,\n    open: true\n  });\n  let timeoutId;\n  let reactUnmount;\n  function destroy() {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = config.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [config, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n    reactUnmount();\n  }\n  function render(props) {\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    timeoutId = setTimeout(() => {\n      const rootPrefixCls = global.getPrefixCls(undefined, getRootPrefixCls());\n      const iconPrefixCls = global.getIconPrefixCls();\n      const theme = global.getTheme();\n      const dom = /*#__PURE__*/React.createElement(ConfirmDialogWrapper, Object.assign({}, props));\n      const reactRender = getReactRender();\n      reactUnmount = reactRender(/*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        theme: theme\n      }, global.holderRender ? global.holderRender(dom) : dom), container);\n    });\n  }\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = Object.assign(Object.assign({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        // @ts-ignore\n        destroy.apply(this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    render(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = Object.assign(Object.assign({}, currentConfig), configUpdate);\n    }\n    render(currentConfig);\n  }\n  render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n}\nexport function withWarn(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'confirm'\n  });\n}\nexport function modalGlobalConfig(_ref) {\n  let {\n    rootPrefixCls\n  } = _ref;\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Modal.config is deprecated. Please use ConfigProvider.config instead.') : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Panel } from 'rc-dialog';\nimport { withPureRenderTheme } from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport { ConfirmContent } from './ConfirmDialog';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      closeIcon,\n      closable,\n      type,\n      title,\n      children,\n      footer\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"closeIcon\", \"closable\", \"type\", \"title\", \"children\", \"footer\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = customizePrefixCls || getPrefixCls('modal');\n  const rootCls = useCSSVarCls(rootPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  // Choose target props by confirm mark\n  let additionalProps = {};\n  if (type) {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : false,\n      title: '',\n      footer: '',\n      children: (/*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n        prefixCls: prefixCls,\n        confirmPrefixCls: confirmPrefixCls,\n        rootPrefixCls: rootPrefixCls,\n        content: children\n      })))\n    };\n  } else {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : true,\n      title,\n      footer: footer !== null && /*#__PURE__*/React.createElement(Footer, Object.assign({}, props)),\n      children\n    };\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(Panel, Object.assign({\n    prefixCls: prefixCls,\n    className: classNames(hashId, `${prefixCls}-pure-panel`, type && confirmPrefixCls, type && `${confirmPrefixCls}-${type}`, className, cssVarCls, rootCls)\n  }, restProps, {\n    closeIcon: renderCloseIcon(prefixCls, closeIcon),\n    closable: closable\n  }, additionalProps)));\n};\nexport default withPureRenderTheme(PurePanel);","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport defaultLocale from '../../locale/en_US';\nimport useLocale from '../../locale/useLocale';\nimport ConfirmDialog from '../ConfirmDialog';\nconst HookModal = (_a, ref) => {\n  var _b;\n  var {\n      afterClose: hookAfterClose,\n      config\n    } = _a,\n    restProps = __rest(_a, [\"afterClose\", \"config\"]);\n  const [open, setOpen] = React.useState(true);\n  const [innerConfig, setInnerConfig] = React.useState(config);\n  const {\n    direction,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('modal');\n  const rootPrefixCls = getPrefixCls();\n  const afterClose = () => {\n    var _a;\n    hookAfterClose();\n    (_a = innerConfig.afterClose) === null || _a === void 0 ? void 0 : _a.call(innerConfig);\n  };\n  const close = function () {\n    var _a;\n    setOpen(false);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = innerConfig.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [innerConfig, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    destroy: close,\n    update: newConfig => {\n      setInnerConfig(originConfig => Object.assign(Object.assign({}, originConfig), newConfig));\n    }\n  }));\n  const mergedOkCancel = (_b = innerConfig.okCancel) !== null && _b !== void 0 ? _b : innerConfig.type === 'confirm';\n  const [contextLocale] = useLocale('Modal', defaultLocale.Modal);\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({\n    prefixCls: prefixCls,\n    rootPrefixCls: rootPrefixCls\n  }, innerConfig, {\n    close: close,\n    open: open,\n    afterClose: afterClose,\n    okText: innerConfig.okText || (mergedOkCancel ? contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.okText : contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.justOkText),\n    direction: innerConfig.direction || direction,\n    cancelText: innerConfig.cancelText || (contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.cancelText)\n  }, restProps));\n};\nexport default /*#__PURE__*/React.forwardRef(HookModal);","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport { withConfirm, withError, withInfo, withSuccess, withWarn } from '../confirm';\nimport destroyFns from '../destroyFns';\nimport HookModal from './HookModal';\nlet uuid = 0;\nconst ElementsHolder = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef((_props, ref) => {\n  const [elements, patchElement] = usePatchElement();\n  React.useImperativeHandle(ref, () => ({\n    patchElement\n  }), []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, elements);\n}));\nfunction useModal() {\n  const holderRef = React.useRef(null);\n  // ========================== Effect ==========================\n  const [actionQueue, setActionQueue] = React.useState([]);\n  React.useEffect(() => {\n    if (actionQueue.length) {\n      const cloneQueue = _toConsumableArray(actionQueue);\n      cloneQueue.forEach(action => {\n        action();\n      });\n      setActionQueue([]);\n    }\n  }, [actionQueue]);\n  // =========================== Hook ===========================\n  const getConfirmFunc = React.useCallback(withFunc => function hookConfirm(config) {\n    var _a;\n    uuid += 1;\n    const modalRef = /*#__PURE__*/React.createRef();\n    // Proxy to promise with `onClose`\n    let resolvePromise;\n    const promise = new Promise(resolve => {\n      resolvePromise = resolve;\n    });\n    let silent = false;\n    let closeFunc;\n    const modal = /*#__PURE__*/React.createElement(HookModal, {\n      key: `modal-${uuid}`,\n      config: withFunc(config),\n      ref: modalRef,\n      afterClose: () => {\n        closeFunc === null || closeFunc === void 0 ? void 0 : closeFunc();\n      },\n      isSilent: () => silent,\n      onConfirm: confirmed => {\n        resolvePromise(confirmed);\n      }\n    });\n    closeFunc = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.patchElement(modal);\n    if (closeFunc) {\n      destroyFns.push(closeFunc);\n    }\n    const instance = {\n      destroy: () => {\n        function destroyAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        if (modalRef.current) {\n          destroyAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [destroyAction]));\n        }\n      },\n      update: newConfig => {\n        function updateAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.update(newConfig);\n        }\n        if (modalRef.current) {\n          updateAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [updateAction]));\n        }\n      },\n      then: resolve => {\n        silent = true;\n        return promise.then(resolve);\n      }\n    };\n    return instance;\n  }, []);\n  const fns = React.useMemo(() => ({\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }), []);\n  return [fns, /*#__PURE__*/React.createElement(ElementsHolder, {\n    key: \"modal-holder\",\n    ref: holderRef\n  })];\n}\nexport default useModal;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nexport default function usePatchElement() {\n  const [elements, setElements] = React.useState([]);\n  const patchElement = React.useCallback(element => {\n    // append a new element to elements (and create a new ref)\n    setElements(originElements => [].concat(_toConsumableArray(originElements), [element]));\n    // return a function that removes the new element out of elements (and create a new ref)\n    // it works a little like useEffect\n    return () => {\n      setElements(originElements => originElements.filter(ele => ele !== element));\n    };\n  }, []);\n  return [elements, patchElement];\n}","\"use client\";\n\nimport confirm, { modalGlobalConfig, withConfirm, withError, withInfo, withSuccess, withWarn } from './confirm';\nimport destroyFns from './destroyFns';\nimport OriginModal from './Modal';\nimport PurePanel from './PurePanel';\nimport useModal from './useModal';\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\nconst Modal = OriginModal;\nModal.useModal = useModal;\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    const close = destroyFns.pop();\n    if (close) {\n      close();\n    }\n  }\n};\nModal.config = modalGlobalConfig;\nModal._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;","import { Keyframes } from '@ant-design/cssinjs';\nimport { initMotion } from './motion';\nexport const fadeIn = new Keyframes('antFadeIn', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\nexport const fadeOut = new Keyframes('antFadeOut', {\n  '0%': {\n    opacity: 1\n  },\n  '100%': {\n    opacity: 0\n  }\n});\nexport const initFadeMotion = function (token) {\n  let sameLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const {\n    antCls\n  } = token;\n  const motionCls = `${antCls}-fade`;\n  const sameLevelPrefix = sameLevel ? '&' : '';\n  return [initMotion(motionCls, fadeIn, fadeOut, token.motionDurationMid, sameLevel), {\n    [`\n        ${sameLevelPrefix}${motionCls}-enter,\n        ${sameLevelPrefix}${motionCls}-appear\n      `]: {\n      opacity: 0,\n      animationTimingFunction: 'linear'\n    },\n    [`${sameLevelPrefix}${motionCls}-leave`]: {\n      animationTimingFunction: 'linear'\n    }\n  }];\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map"],"names":["COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","module","exports","style","options","TypeError","lineno","column","updatePosition","lines","match","length","i","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","prototype","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","value","decl","decls","declarations","nameRe","nameReJsx","emptyOptions","name","jsx","test","empty","Schema","constructor","normal","space","merge","definitions","definition","Object","assign","normalize","toLowerCase","undefined","Info","attribute","booleanish","boolean","commaOrSpaceSeparated","commaSeparated","defined","mustUseProperty","number","overloadedBoolean","spaceSeparated","powers","increment","checks","keys","DefinedInfo","mask","index","super","mark","check","values","key","create","properties","normals","entries","info","transform","attributes","includes","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","_","caseSensitiveTransform","caseInsensitiveTransform","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","step","tabIndex","target","title","translate","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlns","xmlnsxlink","xmlnsXLink","xml","xmlBase","xmlLang","xmlSpace","cap","dash","valid","kebab","$0","camelcase","toUpperCase","hastToReact","point","pointStart","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","indexOf","parent","fatal","file","stack","actual","expected","note","url","own","hasOwnProperty","emptyMap","Map","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","Array","isArray","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","call","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","settings","join","padRight","padLeft","styleObject","reactCompat","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","Boolean","optional","toDash","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","concat","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","_contentTypeTextTrailing","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","add","regexCheck","markdownSpace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","document","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","character","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","toString","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","arr","Date","flags","RegExp","BigInt","Uint8Array","DataView","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","visitParents","visitor","factory","parents","defineProperty","visit","subresult","grandparents","toResult","nodeAsParent","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","createState","footnoteById","handlers","nodes","trimMarkdownSpaceStart","handle","passThrough","shallow","unknownHandler","defaultUnknownHandler","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","isPlainObject","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","arguments","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","copy","attacher","extend","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","hasOwn","colon","questionMark","numberSign","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","createTracker","move","subexit","safe","associationId","gfmFootnoteToMarkdown","firstLineBlank","indentLines","containerFlow","mapAll","mapExceptFirst","unsafe","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","checkQuote","quote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","formatHeadingAsSetext","literalWithBreak","setext","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","element","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteCallString","gfmFootnoteCall","gfmFootnoteDefinitionLabelString","gfmFootnoteDefinition","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","LoadingDots","_ref2","React","animationDuration","animationDelay","TruncatableText","memo","_ref3","isJson","jsonThreshold","textThreshold","showFullscreen","isExpanded","setIsExpanded","useState","isFullscreen","setIsFullscreen","threshold","shouldTruncate","displayContent","proseClassName","ReactMarkdown","Tooltip","e","stopPropagation","ChevronUp","ChevronDown","Maximize2","X","FullScreenImage","_ref4","ClickableImage","_ref5","isFullScreen","setIsFullScreen","getRelativeTimeString","date","past","diffInMs","getTime","diffInSeconds","floor","diffInMinutes","diffInHours","diffInDays","diffInMonths","diffInYears","GalleryAPI","_BaseAPI","_inheritsLoose","_proto","listGalleries","userId","response","fetch","getBaseUrl","getHeaders","status","getGallery","galleryId","createGallery","galleryData","gallery","user_id","console","log","updateGallery","deleteGallery","syncGallery","BaseAPI","galleryAPI","toStr","gOPD","getOwnPropertyDescriptor","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","configurable","newValue","writable","getProperty","copyIsArray","clone","deep","__importDefault","mod","__esModule","inline_style_parser_1","hasIterator","forEach","style_to_object_1","utilities_1","StyleToJS","camelCase","ChevronRight","isThenable","prefixCls","buttonProps","emitEvent","isSilent","quitOnNullishReturnValue","actionFn","clickedRef","buttonRef","setLoading","onInternalClose","timeoutId","setTimeout","_a","focus","preventScroll","clearTimeout","returnValueOfOnOk","handlePromiseOnOk","ref","ModalContext","Provider","ModalContextProvider","autoFocusButton","cancelButtonProps","cancelTextLocale","mergedOkCancel","rootPrefixCls","onConfirm","useContext","okButtonProps","okTextLocale","okType","onOk","RefContext","getMotionName","transitionName","animationName","motionName","getScroll","w","top","documentElement","_ref","shouldUpdate","sentinelStyle","outline","entityStyle","Panel","ariaId","closable","closeIcon","bodyStyle","bodyProps","modalRender","holderRef","visible","forceRender","modalClassNames","classNames","modalStyles","styles","panelRef","panel","mergedRef","sentinelStartRef","useRef","sentinelEndRef","_sentinelStartRef$cur","changeActive","activeElement","contentStyle","footerNode","headerNode","header","closableObj","useMemo","ariaProps","pickAttrs","closeBtnIsDisabled","closerNode","MemoChildren","Content","destroyOnClose","onVisibleChanged","mousePosition","dialogRef","_React$useState","_React$useState2","setTransformOrigin","onPrepare","el","rect","elementOffset","getBoundingClientRect","ownerDocument","defaultView","parentWindow","onAppearPrepare","onEnterPrepare","removeOnLeave","motionRef","motionClassName","motionStyle","displayName","maskProps","leavedClassName","_props$prefixCls","zIndex","_props$visible","_props$keyboard","keyboard","_props$focusTriggerAf","focusTriggerAfterClose","wrapStyle","wrapClassName","wrapProps","afterOpenChange","afterClose","animation","_props$closable","_props$mask","maskTransitionName","maskAnimation","_props$maskClosable","maskClosable","maskStyle","rootClassName","lastOutSideActiveElementRef","wrapperRef","contentRef","animatedVisible","setAnimatedVisible","useId","contentClickRef","contentTimeoutRef","onWrapperClick","useEffect","contains","mergedStyle","wrapper","keyCode","KeyCode","ESC","TAB","shiftKey","newVisible","_contentRef$current","DialogWrap","getContainer","_props$destroyOnClose","_afterClose","refContext","autoDestroy","autoLock","confirmLoading","renderCloseIcon","CloseOutlined","Footer","okText","cancelText","locale","useLocale","btnCtxValue","btnCtxValueMemo","OkBtn","CancelBtn","DisabledContext","box","inset","genModalMaskStyle","componentCls","antCls","motionDurationSlow","userSelect","zIndexPopupBase","backgroundColor","colorBgMask","WebkitOverflowScrolling","genModalStyle","textAlign","verticalAlign","paddingBottom","screenSMMax","maxWidth","margin","marginXS","flex","calc","mul","equal","paddingLG","titleColor","fontWeightStrong","titleFontSize","lineHeight","titleLineHeight","wordWrap","contentBg","backgroundClip","borderRadius","borderRadiusLG","boxShadow","contentPadding","modalHeaderHeight","sub","modalCloseBtnSize","div","insetInlineEnd","modalCloseIconColor","borderRadiusSM","transition","motionDurationMid","fontSizeLG","justifyContent","textTransform","modalCloseIconHoverColor","colorBgTextHover","colorBgTextActive","colorText","headerBg","marginBottom","headerMarginBottom","headerPadding","borderBottom","headerBorderBottom","bodyPadding","alignItems","footerBg","marginTop","footerMarginTop","footerPadding","borderTop","footerBorderTop","footerBorderRadius","marginInlineStart","flexDirection","genRTLStyle","genResponsiveWidthStyle","gridMediaSizesMap","xs","responsiveStyles","prepareToken","headerPaddingVertical","headerFontSize","fontSizeHeading5","headerLineHeight","lineHeightHeading5","modalFooterBorderColorSplit","colorSplit","modalFooterBorderStyle","lineType","modalFooterBorderWidth","lineWidth","colorIcon","colorIconHover","controlHeight","modalConfirmIconSize","fontHeight","modalTitleHeight","prepareComponentToken","colorBgElevated","colorTextHeading","wireframe","paddingMD","paddingContentHorizontalLG","paddingXS","marginSM","confirmBodyPadding","confirmIconMarginInlineEnd","confirmBtnsMarginTop","marginLG","modalToken","unitless","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","getClickPosition","pageX","pageY","canUseDom","window","addEventListener","getPopupContainer","getContextPopupContainer","getPrefixCls","modal","modalContext","handleCancel","customizePrefixCls","centered","restProps","rootCls","useCSSVarCls","wrapCSSVar","hashId","cssVarCls","wrapClassNameExtended","dialogFooter","mergedClosable","mergedCloseIcon","useClosable","closeIconRender","contextZIndex","useZIndex","numWidth","responsiveWidth","responsiveWidthVars","vars","breakpoint","breakpointWidth","ContextIsolator","active","genModalConfirmStyle","confirmComponentCls","flexWrap","iconCls","marginInlineEnd","rowGap","colorError","colorWarning","colorInfo","colorSuccess","ConfirmContent","confirmPrefixCls","okCancel","staticLocale","resetProps","mergedIcon","InfoCircleFilled","CheckCircleFilled","CloseCircleFilled","ExclamationCircleFilled","mergedLocale","justOkText","footerOriginNode","hasTitle","bodyCls","ConfirmDialog","classString","useToken","mergedZIndex","triggerCancel","iconPrefixCls","theme","defaultRootPrefixCls","getRootPrefixCls","_b","runtimeLocale","mergedGetContainer","Modal","container","createDocumentFragment","reactUnmount","currentConfig","destroy","_len","args","_key","_a2","param","render","getIconPrefixCls","getTheme","dom","reactRender","holderRender","_len2","_key2","update","configUpdate","withWarn","withInfo","withSuccess","withError","withConfirm","additionalProps","HookModal","hookAfterClose","setOpen","innerConfig","setInnerConfig","newConfig","originConfig","contextLocale","uuid","ElementsHolder","_props","elements","patchElement","setElements","originElements","ele","usePatchElement","actionQueue","setActionQueue","getConfirmFunc","withFunc","modalRef","resolvePromise","promise","closeFunc","confirmed","instance","destroyAction","prev","updateAction","success","warning","confirm","modalWarn","useModal","warn","destroyAll","_InternalPanelDoNotUseOrYouWillBeFired","fadeIn","fadeOut","initFadeMotion","sameLevel","motionCls","sameLevelPrefix","animationTimingFunction","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","trimHyphen","skipCamelCase"],"sourceRoot":""}