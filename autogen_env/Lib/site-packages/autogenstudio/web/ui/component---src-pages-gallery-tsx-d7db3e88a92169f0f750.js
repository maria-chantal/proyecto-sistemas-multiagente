/*! For license information please see component---src-pages-gallery-tsx-d7db3e88a92169f0f750.js.LICENSE.txt */
"use strict";(self.webpackChunkautogentstudio=self.webpackChunkautogentstudio||[]).push([[355],{1610:function(e){e.exports=JSON.parse('{"id":"gallery_default","name":"Default Component Gallery","url":null,"metadata":{"author":"AutoGen Team","created_at":"2025-02-21T20:43:06.400850","updated_at":"2025-02-21T20:43:07.501068","version":"1.0.0","description":"A default gallery containing basic components for human-in-loop conversations","tags":["human-in-loop","assistant","web agents"],"license":"MIT","homepage":null,"category":"conversation","last_synced":null},"components":{"agents":[{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with ability to use tools.","label":"AssistantAgent","config":{"name":"assistant_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"Create custom tools by wrapping standard Python functions.","label":"FunctionTool","config":{"source_code":"def calculator(a: float, b: float, operator: str) -> str:\\n    try:\\n        if operator == \\"+\\":\\n            return str(a + b)\\n        elif operator == \\"-\\":\\n            return str(a - b)\\n        elif operator == \\"*\\":\\n            return str(a * b)\\n        elif operator == \\"/\\":\\n            if b == 0:\\n                return \\"Error: Division by zero\\"\\n            return str(a / b)\\n        else:\\n            return \\"Error: Invalid operator. Please use +, -, *, or /\\"\\n    except Exception as e:\\n        return f\\"Error: {str(e)}\\"\\n","name":"calculator","description":"A simple calculator that performs basic arithmetic operations","global_imports":[],"has_cancellation_support":false}}],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"An agent that provides assistance with ability to use tools.","system_message":"You are a helpful assistant. Solve tasks carefully. When done, say TERMINATE.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_ext.agents.web_surfer.MultimodalWebSurfer","component_type":"agent","version":1,"component_version":1,"description":"An agent that solves tasks by browsing the web using a headless browser.","label":"Web Surfer Agent","config":{"name":"websurfer_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"description":"an agent that solves tasks by browsing the web","headless":true,"start_page":"https://www.bing.com/","animate_actions":false,"to_save_screenshots":false,"use_ocr":false,"to_resize_viewport":true}},{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"an agent that verifies and summarizes information","label":"Verification Assistant","config":{"name":"assistant_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"an agent that verifies and summarizes information","system_message":"You are a task verification assistant who is working with a web surfer agent to solve tasks. At each point, check if the task has been completed as requested by the user. If the websurfer_agent responds and the task has not yet been completed, respond with what is left to do and then say \'keep going\'. If and only when the task has been completed, summarize and present a final answer that directly addresses the user task in detail and then respond with TERMINATE.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_agentchat.agents.UserProxyAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that can represent a human user through an input function.","label":"UserProxyAgent","config":{"name":"user_proxy","description":"a human user that should be consulted only when the assistant_agent is unable to verify the information provided by the websurfer_agent"}}],"models":[{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"OpenAI GPT-4o-mini","label":"OpenAI GPT-4o Mini","config":{"model":"gpt-4o-mini"}},{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Local Mistral-7B model client for instruction-based generation (Ollama, LMStudio).","label":"Mistral-7B Local","config":{"model":"TheBloke/Mistral-7B-Instruct-v0.2-GGUF","model_info":{"vision":false,"function_calling":true,"json_output":false,"family":"unknown"},"base_url":"http://localhost:1234/v1"}},{"provider":"autogen_ext.models.openai.AzureOpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"GPT-4o Mini Azure OpenAI model client.","label":"AzureOpenAI GPT-4o-mini","config":{"model":"gpt-4o-mini","api_key":"sk-...","azure_endpoint":"https://{your-custom-endpoint}.openai.azure.com/","azure_deployment":"{your-azure-deployment}","api_version":"2024-06-01"}}],"tools":[{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that performs basic arithmetic operations (addition, subtraction, multiplication, division).","label":"Calculator Tool","config":{"source_code":"def calculator(a: float, b: float, operator: str) -> str:\\n    try:\\n        if operator == \\"+\\":\\n            return str(a + b)\\n        elif operator == \\"-\\":\\n            return str(a - b)\\n        elif operator == \\"*\\":\\n            return str(a * b)\\n        elif operator == \\"/\\":\\n            if b == 0:\\n                return \\"Error: Division by zero\\"\\n            return str(a / b)\\n        else:\\n            return \\"Error: Invalid operator. Please use +, -, *, or /\\"\\n    except Exception as e:\\n        return f\\"Error: {str(e)}\\"\\n","name":"calculator","description":"A simple calculator that performs basic arithmetic operations","global_imports":[],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that generates images based on a text description using OpenAI\'s DALL-E model. Note: Requires OpenAI API key to function.","label":"Image Generation Tool","config":{"source_code":"async def generate_image(\\n    query: str, output_dir: Optional[Path] = None, image_size: Literal[\\"1024x1024\\", \\"512x512\\", \\"256x256\\"] = \\"1024x1024\\"\\n) -> List[str]:\\n    \\"\\"\\"\\n    Generate images using OpenAI\'s DALL-E model based on a text description.\\n\\n    Args:\\n        query: Natural language description of the desired image\\n        output_dir: Directory to save generated images (default: current directory)\\n        image_size: Size of generated image (1024x1024, 512x512, or 256x256)\\n\\n    Returns:\\n        List[str]: Paths to the generated image files\\n    \\"\\"\\"\\n    # Initialize the OpenAI client\\n    client = OpenAI()\\n\\n    # Generate images using DALL-E 3\\n    response = client.images.generate(model=\\"dall-e-3\\", prompt=query, n=1, response_format=\\"b64_json\\", size=image_size)\\n\\n    saved_files = []\\n\\n    # Process the response\\n    if response.data:\\n        for image_data in response.data:\\n            # Generate a unique filename\\n            file_name = f\\"{uuid.uuid4()}.png\\"\\n\\n            # Use output_dir if provided, otherwise use current directory\\n            file_path = Path(output_dir) / file_name if output_dir else Path(file_name)\\n\\n            base64_str = image_data.b64_json\\n            img = Image.open(io.BytesIO(base64.decodebytes(bytes(base64_str, \\"utf-8\\"))))\\n\\n            # Save the image to a file\\n            img.save(file_path)\\n\\n            saved_files.append(str(file_path))\\n\\n    return saved_files\\n","name":"generate_image","description":"Generate images using DALL-E based on text descriptions.","global_imports":["io","uuid","base64",{"module":"typing","imports":["List","Optional","Literal"]},{"module":"pathlib","imports":["Path"]},{"module":"openai","imports":["OpenAI"]},{"module":"PIL","imports":["Image"]}],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that generates a PDF file from a list of images.Requires the PyFPDF and pillow library to function.","label":"PDF Generation Tool","config":{"source_code":"async def generate_pdf(\\n    sections: List[Dict[str, Optional[str]]], output_file: str = \\"report.pdf\\", report_title: str = \\"PDF Report\\"\\n) -> str:\\n    \\"\\"\\"\\n    Generate a PDF report with formatted sections including text and images.\\n\\n    Args:\\n        sections: List of dictionaries containing section details with keys:\\n            - title: Section title\\n            - level: Heading level (title, h1, h2)\\n            - content: Section text content\\n            - image: Optional image URL or file path\\n        output_file: Name of output PDF file\\n        report_title: Title shown at top of report\\n\\n    Returns:\\n        str: Path to the generated PDF file\\n    \\"\\"\\"\\n\\n    def normalize_text(text: str) -> str:\\n        \\"\\"\\"Normalize Unicode text to ASCII.\\"\\"\\"\\n        return unicodedata.normalize(\\"NFKD\\", text).encode(\\"ascii\\", \\"ignore\\").decode(\\"ascii\\")\\n\\n    def get_image(image_url_or_path):\\n        \\"\\"\\"Fetch image from URL or local path.\\"\\"\\"\\n        if image_url_or_path.startswith((\\"http://\\", \\"https://\\")):\\n            response = requests.get(image_url_or_path)\\n            if response.status_code == 200:\\n                return BytesIO(response.content)\\n        elif Path(image_url_or_path).is_file():\\n            return open(image_url_or_path, \\"rb\\")\\n        return None\\n\\n    def add_rounded_corners(img, radius=6):\\n        \\"\\"\\"Add rounded corners to an image.\\"\\"\\"\\n        mask = Image.new(\\"L\\", img.size, 0)\\n        draw = ImageDraw.Draw(mask)\\n        draw.rounded_rectangle([(0, 0), img.size], radius, fill=255)\\n        img = ImageOps.fit(img, mask.size, centering=(0.5, 0.5))\\n        img.putalpha(mask)\\n        return img\\n\\n    class PDF(FPDF):\\n        \\"\\"\\"Custom PDF class with header and content formatting.\\"\\"\\"\\n\\n        def header(self):\\n            self.set_font(\\"Arial\\", \\"B\\", 12)\\n            normalized_title = normalize_text(report_title)\\n            self.cell(0, 10, normalized_title, 0, 1, \\"C\\")\\n\\n        def chapter_title(self, txt):\\n            self.set_font(\\"Arial\\", \\"B\\", 12)\\n            normalized_txt = normalize_text(txt)\\n            self.cell(0, 10, normalized_txt, 0, 1, \\"L\\")\\n            self.ln(2)\\n\\n        def chapter_body(self, body):\\n            self.set_font(\\"Arial\\", \\"\\", 12)\\n            normalized_body = normalize_text(body)\\n            self.multi_cell(0, 10, normalized_body)\\n            self.ln()\\n\\n        def add_image(self, img_data):\\n            img = Image.open(img_data)\\n            img = add_rounded_corners(img)\\n            img_path = Path(f\\"temp_{uuid.uuid4().hex}.png\\")\\n            img.save(img_path, format=\\"PNG\\")\\n            self.image(str(img_path), x=None, y=None, w=190 if img.width > 190 else img.width)\\n            self.ln(10)\\n            img_path.unlink()\\n\\n    # Initialize PDF\\n    pdf = PDF()\\n    pdf.add_page()\\n    font_size = {\\"title\\": 16, \\"h1\\": 14, \\"h2\\": 12, \\"body\\": 12}\\n\\n    # Add sections\\n    for section in sections:\\n        title = section.get(\\"title\\", \\"\\")\\n        level = section.get(\\"level\\", \\"h1\\")\\n        content = section.get(\\"content\\", \\"\\")\\n        image = section.get(\\"image\\")\\n\\n        pdf.set_font(\\"Arial\\", \\"B\\" if level in font_size else \\"\\", font_size.get(level, font_size[\\"body\\"]))\\n        pdf.chapter_title(title)\\n\\n        if content:\\n            pdf.chapter_body(content)\\n\\n        if image:\\n            img_data = get_image(image)\\n            if img_data:\\n                pdf.add_image(img_data)\\n                if isinstance(img_data, BytesIO):\\n                    img_data.close()\\n\\n    pdf.output(output_file)\\n    return output_file\\n","name":"generate_pdf","description":"Generate PDF reports with formatted sections containing text and images","global_imports":["uuid","requests","unicodedata",{"module":"typing","imports":["List","Dict","Optional"]},{"module":"pathlib","imports":["Path"]},{"module":"fpdf","imports":["FPDF"]},{"module":"PIL","imports":["Image","ImageDraw","ImageOps"]},{"module":"io","imports":["BytesIO"]}],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that fetches the content of a webpage and converts it to markdown. Requires the requests and beautifulsoup4 library to function.","label":"Fetch Webpage Tool","config":{"source_code":"async def fetch_webpage(\\n    url: str, include_images: bool = True, max_length: Optional[int] = None, headers: Optional[Dict[str, str]] = None\\n) -> str:\\n    \\"\\"\\"Fetch a webpage and convert it to markdown format.\\n\\n    Args:\\n        url: The URL of the webpage to fetch\\n        include_images: Whether to include image references in the markdown\\n        max_length: Maximum length of the output markdown (if None, no limit)\\n        headers: Optional HTTP headers for the request\\n\\n    Returns:\\n        str: Markdown version of the webpage content\\n\\n    Raises:\\n        ValueError: If the URL is invalid or the page can\'t be fetched\\n    \\"\\"\\"\\n    # Use default headers if none provided\\n    if headers is None:\\n        headers = {\\"User-Agent\\": \\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\\"}\\n\\n    try:\\n        # Fetch the webpage\\n        async with httpx.AsyncClient() as client:\\n            response = await client.get(url, headers=headers, timeout=10)\\n            response.raise_for_status()\\n\\n            # Parse HTML\\n            soup = BeautifulSoup(response.text, \\"html.parser\\")\\n\\n            # Remove script and style elements\\n            for script in soup([\\"script\\", \\"style\\"]):\\n                script.decompose()\\n\\n            # Convert relative URLs to absolute\\n            for tag in soup.find_all([\\"a\\", \\"img\\"]):\\n                if tag.get(\\"href\\"):\\n                    tag[\\"href\\"] = urljoin(url, tag[\\"href\\"])\\n                if tag.get(\\"src\\"):\\n                    tag[\\"src\\"] = urljoin(url, tag[\\"src\\"])\\n\\n            # Configure HTML to Markdown converter\\n            h2t = html2text.HTML2Text()\\n            h2t.body_width = 0  # No line wrapping\\n            h2t.ignore_images = not include_images\\n            h2t.ignore_emphasis = False\\n            h2t.ignore_links = False\\n            h2t.ignore_tables = False\\n\\n            # Convert to markdown\\n            markdown = h2t.handle(str(soup))\\n\\n            # Trim if max_length is specified\\n            if max_length and len(markdown) > max_length:\\n                markdown = markdown[:max_length] + \\"\\\\n...(truncated)\\"\\n\\n            return markdown.strip()\\n\\n    except httpx.RequestError as e:\\n        raise ValueError(f\\"Failed to fetch webpage: {str(e)}\\") from e\\n    except Exception as e:\\n        raise ValueError(f\\"Error processing webpage: {str(e)}\\") from e\\n","name":"fetch_webpage","description":"Fetch a webpage and convert it to markdown format, with options for including images and limiting length","global_imports":["os","html2text",{"module":"typing","imports":["Optional","Dict"]},"httpx",{"module":"bs4","imports":["BeautifulSoup"]},{"module":"html2text","imports":["HTML2Text"]},{"module":"urllib.parse","imports":["urljoin"]}],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that performs Bing searches using the Bing Web Search API. Requires the requests library, BING_SEARCH_KEY env variable to function.","label":"Bing Search Tool","config":{"source_code":"async def bing_search(\\n    query: str,\\n    num_results: int = 3,\\n    include_snippets: bool = True,\\n    include_content: bool = True,\\n    content_max_length: Optional[int] = 10000,\\n    language: str = \\"en\\",\\n    country: Optional[str] = None,\\n    safe_search: str = \\"moderate\\",\\n    response_filter: str = \\"webpages\\",\\n) -> List[Dict[str, str]]:\\n    \\"\\"\\"\\n    Perform a Bing search using the Bing Web Search API.\\n\\n    Args:\\n        query: Search query string\\n        num_results: Number of results to return (max 50)\\n        include_snippets: Include result snippets in output\\n        include_content: Include full webpage content in markdown format\\n        content_max_length: Maximum length of webpage content (if included)\\n        language: Language code for search results (e.g., \'en\', \'es\', \'fr\')\\n        country: Optional market code for search results (e.g., \'us\', \'uk\')\\n        safe_search: SafeSearch setting (\'off\', \'moderate\', or \'strict\')\\n        response_filter: Type of results (\'webpages\', \'news\', \'images\', or \'videos\')\\n\\n    Returns:\\n        List[Dict[str, str]]: List of search results\\n\\n    Raises:\\n        ValueError: If API credentials are invalid or request fails\\n    \\"\\"\\"\\n    # Get and validate API key\\n    api_key = os.getenv(\\"BING_SEARCH_KEY\\", \\"\\").strip()\\n\\n    if not api_key:\\n        raise ValueError(\\n            \\"BING_SEARCH_KEY environment variable is not set. \\" \\"Please obtain an API key from Azure Portal.\\"\\n        )\\n\\n    # Validate safe_search parameter\\n    valid_safe_search = [\\"off\\", \\"moderate\\", \\"strict\\"]\\n    if safe_search.lower() not in valid_safe_search:\\n        raise ValueError(f\\"Invalid safe_search value. Must be one of: {\', \'.join(valid_safe_search)}\\")\\n\\n    # Validate response_filter parameter\\n    valid_filters = [\\"webpages\\", \\"news\\", \\"images\\", \\"videos\\"]\\n    if response_filter.lower() not in valid_filters:\\n        raise ValueError(f\\"Invalid response_filter value. Must be one of: {\', \'.join(valid_filters)}\\")\\n\\n    async def fetch_page_content(url: str, max_length: Optional[int] = 50000) -> str:\\n        \\"\\"\\"Helper function to fetch and convert webpage content to markdown\\"\\"\\"\\n        headers = {\\"User-Agent\\": \\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\\"}\\n\\n        try:\\n            async with httpx.AsyncClient() as client:\\n                response = await client.get(url, headers=headers, timeout=10)\\n                response.raise_for_status()\\n\\n                soup = BeautifulSoup(response.text, \\"html.parser\\")\\n\\n                # Remove script and style elements\\n                for script in soup([\\"script\\", \\"style\\"]):\\n                    script.decompose()\\n\\n                # Convert relative URLs to absolute\\n                for tag in soup.find_all([\\"a\\", \\"img\\"]):\\n                    if tag.get(\\"href\\"):\\n                        tag[\\"href\\"] = urljoin(url, tag[\\"href\\"])\\n                    if tag.get(\\"src\\"):\\n                        tag[\\"src\\"] = urljoin(url, tag[\\"src\\"])\\n\\n                h2t = html2text.HTML2Text()\\n                h2t.body_width = 0\\n                h2t.ignore_images = False\\n                h2t.ignore_emphasis = False\\n                h2t.ignore_links = False\\n                h2t.ignore_tables = False\\n\\n                markdown = h2t.handle(str(soup))\\n\\n                if max_length and len(markdown) > max_length:\\n                    markdown = markdown[:max_length] + \\"\\\\n...(truncated)\\"\\n\\n                return markdown.strip()\\n\\n        except Exception as e:\\n            return f\\"Error fetching content: {str(e)}\\"\\n\\n    # Build request headers and parameters\\n    headers = {\\"Ocp-Apim-Subscription-Key\\": api_key, \\"Accept\\": \\"application/json\\"}\\n\\n    params = {\\n        \\"q\\": query,\\n        \\"count\\": min(max(1, num_results), 50),\\n        \\"mkt\\": f\\"{language}-{country.upper()}\\" if country else language,\\n        \\"safeSearch\\": safe_search.capitalize(),\\n        \\"responseFilter\\": response_filter,\\n        \\"textFormat\\": \\"raw\\",\\n    }\\n\\n    # Make the request\\n    try:\\n        async with httpx.AsyncClient() as client:\\n            response = await client.get(\\n                \\"https://api.bing.microsoft.com/v7.0/search\\", headers=headers, params=params, timeout=10\\n            )\\n\\n            # Handle common error cases\\n            if response.status_code == 401:\\n                raise ValueError(\\"Authentication failed. Please verify your Bing Search API key.\\")\\n            elif response.status_code == 403:\\n                raise ValueError(\\n                    \\"Access forbidden. This could mean:\\\\n\\"\\n                    \\"1. The API key is invalid\\\\n\\"\\n                    \\"2. The API key has expired\\\\n\\"\\n                    \\"3. You\'ve exceeded your API quota\\"\\n                )\\n            elif response.status_code == 429:\\n                raise ValueError(\\"API quota exceeded. Please try again later.\\")\\n\\n            response.raise_for_status()\\n            data = response.json()\\n\\n        # Process results based on response_filter\\n        results = []\\n        if response_filter == \\"webpages\\" and \\"webPages\\" in data:\\n            items = data[\\"webPages\\"][\\"value\\"]\\n        elif response_filter == \\"news\\" and \\"news\\" in data:\\n            items = data[\\"news\\"][\\"value\\"]\\n        elif response_filter == \\"images\\" and \\"images\\" in data:\\n            items = data[\\"images\\"][\\"value\\"]\\n        elif response_filter == \\"videos\\" and \\"videos\\" in data:\\n            items = data[\\"videos\\"][\\"value\\"]\\n        else:\\n            if not any(key in data for key in [\\"webPages\\", \\"news\\", \\"images\\", \\"videos\\"]):\\n                return []  # No results found\\n            raise ValueError(f\\"No {response_filter} results found in API response\\")\\n\\n        # Extract relevant information based on result type\\n        for item in items:\\n            result = {\\"title\\": item.get(\\"name\\", \\"\\")}\\n\\n            if response_filter == \\"webpages\\":\\n                result[\\"link\\"] = item.get(\\"url\\", \\"\\")\\n                if include_snippets:\\n                    result[\\"snippet\\"] = item.get(\\"snippet\\", \\"\\")\\n                if include_content:\\n                    result[\\"content\\"] = await fetch_page_content(result[\\"link\\"], max_length=content_max_length)\\n\\n            elif response_filter == \\"news\\":\\n                result[\\"link\\"] = item.get(\\"url\\", \\"\\")\\n                if include_snippets:\\n                    result[\\"snippet\\"] = item.get(\\"description\\", \\"\\")\\n                result[\\"date\\"] = item.get(\\"datePublished\\", \\"\\")\\n                if include_content:\\n                    result[\\"content\\"] = await fetch_page_content(result[\\"link\\"], max_length=content_max_length)\\n\\n            elif response_filter == \\"images\\":\\n                result[\\"link\\"] = item.get(\\"contentUrl\\", \\"\\")\\n                result[\\"thumbnail\\"] = item.get(\\"thumbnailUrl\\", \\"\\")\\n                if include_snippets:\\n                    result[\\"snippet\\"] = item.get(\\"description\\", \\"\\")\\n\\n            elif response_filter == \\"videos\\":\\n                result[\\"link\\"] = item.get(\\"contentUrl\\", \\"\\")\\n                result[\\"thumbnail\\"] = item.get(\\"thumbnailUrl\\", \\"\\")\\n                if include_snippets:\\n                    result[\\"snippet\\"] = item.get(\\"description\\", \\"\\")\\n                result[\\"duration\\"] = item.get(\\"duration\\", \\"\\")\\n\\n            results.append(result)\\n\\n        return results[:num_results]\\n\\n    except httpx.RequestException as e:\\n        error_msg = str(e)\\n        if \\"InvalidApiKey\\" in error_msg:\\n            raise ValueError(\\"Invalid API key. Please check your BING_SEARCH_KEY environment variable.\\") from e\\n        elif \\"KeyExpired\\" in error_msg:\\n            raise ValueError(\\"API key has expired. Please generate a new key.\\") from e\\n        else:\\n            raise ValueError(f\\"Search request failed: {error_msg}\\") from e\\n    except json.JSONDecodeError:\\n        raise ValueError(\\"Failed to parse API response. \\" \\"Please verify your API credentials and try again.\\") from None\\n    except Exception as e:\\n        raise ValueError(f\\"Unexpected error during search: {str(e)}\\") from e\\n","name":"bing_search","description":"\\n    Perform Bing searches using the Bing Web Search API. Requires BING_SEARCH_KEY environment variable.\\n    Supports web, news, image, and video searches.\\n    See function documentation for detailed setup instructions.\\n    ","global_imports":[{"module":"typing","imports":["List","Dict","Optional"]},"os","httpx","json","html2text",{"module":"bs4","imports":["BeautifulSoup"]},{"module":"urllib.parse","imports":["urljoin"]}],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"A tool that performs Google searches using the Google Custom Search API. Requires the requests library, [GOOGLE_API_KEY, GOOGLE_CSE_ID] to be set,  env variable to function.","label":"Google Search Tool","config":{"source_code":"async def google_search(\\n    query: str,\\n    num_results: int = 3,\\n    include_snippets: bool = True,\\n    include_content: bool = True,\\n    content_max_length: Optional[int] = 10000,\\n    language: str = \\"en\\",\\n    country: Optional[str] = None,\\n    safe_search: bool = True,\\n) -> List[Dict[str, str]]:\\n    \\"\\"\\"\\n    Perform a Google search using the Custom Search API and optionally fetch webpage content.\\n\\n    Args:\\n        query: Search query string\\n        num_results: Number of results to return (max 10)\\n        include_snippets: Include result snippets in output\\n        include_content: Include full webpage content in markdown format\\n        content_max_length: Maximum length of webpage content (if included)\\n        language: Language code for search results (e.g., en, es, fr)\\n        country: Optional country code for search results (e.g., us, uk)\\n        safe_search: Enable safe search filtering\\n\\n    Returns:\\n        List[Dict[str, str]]: List of search results, each containing:\\n            - title: Result title\\n            - link: Result URL\\n            - snippet: Result description (if include_snippets=True)\\n            - content: Webpage content in markdown (if include_content=True)\\n    \\"\\"\\"\\n    api_key = os.getenv(\\"GOOGLE_API_KEY\\")\\n    cse_id = os.getenv(\\"GOOGLE_CSE_ID\\")\\n\\n    if not api_key or not cse_id:\\n        raise ValueError(\\"Missing required environment variables. Please set GOOGLE_API_KEY and GOOGLE_CSE_ID.\\")\\n\\n    num_results = min(max(1, num_results), 10)\\n\\n    async def fetch_page_content(url: str, max_length: Optional[int] = 50000) -> str:\\n        \\"\\"\\"Helper function to fetch and convert webpage content to markdown\\"\\"\\"\\n        headers = {\\"User-Agent\\": \\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\\"}\\n\\n        try:\\n            async with httpx.AsyncClient() as client:\\n                response = await client.get(url, headers=headers, timeout=10)\\n                response.raise_for_status()\\n\\n                soup = BeautifulSoup(response.text, \\"html.parser\\")\\n\\n                # Remove script and style elements\\n                for script in soup([\\"script\\", \\"style\\"]):\\n                    script.decompose()\\n\\n                # Convert relative URLs to absolute\\n                for tag in soup.find_all([\\"a\\", \\"img\\"]):\\n                    if tag.get(\\"href\\"):\\n                        tag[\\"href\\"] = urljoin(url, tag[\\"href\\"])\\n                    if tag.get(\\"src\\"):\\n                        tag[\\"src\\"] = urljoin(url, tag[\\"src\\"])\\n\\n                h2t = html2text.HTML2Text()\\n                h2t.body_width = 0\\n                h2t.ignore_images = False\\n                h2t.ignore_emphasis = False\\n                h2t.ignore_links = False\\n                h2t.ignore_tables = False\\n\\n                markdown = h2t.handle(str(soup))\\n\\n                if max_length and len(markdown) > max_length:\\n                    markdown = markdown[:max_length] + \\"\\\\n...(truncated)\\"\\n\\n                return markdown.strip()\\n\\n        except Exception as e:\\n            return f\\"Error fetching content: {str(e)}\\"\\n\\n    params = {\\n        \\"key\\": api_key,\\n        \\"cx\\": cse_id,\\n        \\"q\\": query,\\n        \\"num\\": num_results,\\n        \\"hl\\": language,\\n        \\"safe\\": \\"active\\" if safe_search else \\"off\\",\\n    }\\n\\n    if country:\\n        params[\\"gl\\"] = country\\n\\n    try:\\n        async with httpx.AsyncClient() as client:\\n            response = await client.get(\\"https://www.googleapis.com/customsearch/v1\\", params=params, timeout=10)\\n            response.raise_for_status()\\n            data = response.json()\\n\\n            results = []\\n            if \\"items\\" in data:\\n                for item in data[\\"items\\"]:\\n                    result = {\\"title\\": item.get(\\"title\\", \\"\\"), \\"link\\": item.get(\\"link\\", \\"\\")}\\n                    if include_snippets:\\n                        result[\\"snippet\\"] = item.get(\\"snippet\\", \\"\\")\\n\\n                    if include_content:\\n                        result[\\"content\\"] = await fetch_page_content(result[\\"link\\"], max_length=content_max_length)\\n\\n                    results.append(result)\\n\\n            return results\\n\\n    except httpx.RequestError as e:\\n        raise ValueError(f\\"Failed to perform search: {str(e)}\\") from e\\n    except KeyError as e:\\n        raise ValueError(f\\"Invalid API response format: {str(e)}\\") from e\\n    except Exception as e:\\n        raise ValueError(f\\"Error during search: {str(e)}\\") from e\\n","name":"google_search","description":"\\n    Perform Google searches using the Custom Search API with optional webpage content fetching.\\n    Requires GOOGLE_API_KEY and GOOGLE_CSE_ID environment variables to be set.\\n    ","global_imports":[{"module":"typing","imports":["List","Dict","Optional"]},"os","httpx","html2text",{"module":"bs4","imports":["BeautifulSoup"]},{"module":"urllib.parse","imports":["urljoin"]}],"has_cancellation_support":false}}],"terminations":[{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}},{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":10,"include_agent_event":false}},{"provider":"autogen_agentchat.base.OrTerminationCondition","component_type":"termination","version":1,"component_version":1,"description":"Termination condition that ends the conversation when either a message contains \'TERMINATE\' or the maximum number of messages is reached.","label":"OR Termination","config":{"conditions":[{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}},{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":10,"include_agent_event":false}}]}}],"teams":[{"provider":"autogen_agentchat.teams.RoundRobinGroupChat","component_type":"team","version":1,"component_version":1,"description":"A single AssistantAgent (with a calculator tool) in a RoundRobinGroupChat team. ","label":"RoundRobin Team","config":{"participants":[{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"assistant_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"Create custom tools by wrapping standard Python functions.","label":"FunctionTool","config":{"source_code":"def calculator(a: float, b: float, operator: str) -> str:\\n    try:\\n        if operator == \\"+\\":\\n            return str(a + b)\\n        elif operator == \\"-\\":\\n            return str(a - b)\\n        elif operator == \\"*\\":\\n            return str(a * b)\\n        elif operator == \\"/\\":\\n            if b == 0:\\n                return \\"Error: Division by zero\\"\\n            return str(a / b)\\n        else:\\n            return \\"Error: Invalid operator. Please use +, -, *, or /\\"\\n    except Exception as e:\\n        return f\\"Error: {str(e)}\\"\\n","name":"calculator","description":"A simple calculator that performs basic arithmetic operations","global_imports":[],"has_cancellation_support":false}}],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"An agent that provides assistance with ability to use tools.","system_message":"You are a helpful assistant. Solve tasks carefully. When done, say TERMINATE.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}}],"termination_condition":{"provider":"autogen_agentchat.base.OrTerminationCondition","component_type":"termination","version":1,"component_version":1,"label":"OrTerminationCondition","config":{"conditions":[{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}},{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":10,"include_agent_event":false}}]}}}},{"provider":"autogen_agentchat.teams.SelectorGroupChat","component_type":"team","version":1,"component_version":1,"description":"A team with 2 agents - an AssistantAgent (with a calculator tool) and a CriticAgent in a SelectorGroupChat team.","label":"Selector Team","config":{"participants":[{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"assistant_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"Create custom tools by wrapping standard Python functions.","label":"FunctionTool","config":{"source_code":"def calculator(a: float, b: float, operator: str) -> str:\\n    try:\\n        if operator == \\"+\\":\\n            return str(a + b)\\n        elif operator == \\"-\\":\\n            return str(a - b)\\n        elif operator == \\"*\\":\\n            return str(a * b)\\n        elif operator == \\"/\\":\\n            if b == 0:\\n                return \\"Error: Division by zero\\"\\n            return str(a / b)\\n        else:\\n            return \\"Error: Invalid operator. Please use +, -, *, or /\\"\\n    except Exception as e:\\n        return f\\"Error: {str(e)}\\"\\n","name":"calculator","description":"A simple calculator that performs basic arithmetic operations","global_imports":[],"has_cancellation_support":false}}],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"An agent that provides assistance with ability to use tools.","system_message":"You are a helpful assistant. Solve tasks carefully. When done, say TERMINATE.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"critic_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"an agent that critiques and improves the assistant\'s output","system_message":"You are a helpful assistant. Critique the assistant\'s output and suggest improvements.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}}],"model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"termination_condition":{"provider":"autogen_agentchat.base.OrTerminationCondition","component_type":"termination","version":1,"component_version":1,"label":"OrTerminationCondition","config":{"conditions":[{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}},{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":10,"include_agent_event":false}}]}},"selector_prompt":"You are in a role play game. The following roles are available:\\n{roles}.\\nRead the following conversation. Then select the next role from {participants} to play. Only return the role.\\n\\n{history}\\n\\nRead the above conversation. Then select the next role from {participants} to play. Only return the role.\\n","allow_repeated_speaker":false,"max_selector_attempts":3}},{"provider":"autogen_agentchat.teams.SelectorGroupChat","component_type":"team","version":1,"component_version":1,"description":"A team with 3 agents - a Web Surfer agent that can browse the web, a Verification Assistant that verifies and summarizes information, and a User Proxy that provides human feedback when needed.","label":"Web Agent Team (Operator)","config":{"participants":[{"provider":"autogen_ext.agents.web_surfer.MultimodalWebSurfer","component_type":"agent","version":1,"component_version":1,"description":"MultimodalWebSurfer is a multimodal agent that acts as a web surfer that can search the web and visit web pages.","label":"MultimodalWebSurfer","config":{"name":"websurfer_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"description":"an agent that solves tasks by browsing the web","headless":true,"start_page":"https://www.bing.com/","animate_actions":false,"to_save_screenshots":false,"use_ocr":false,"to_resize_viewport":true}},{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"assistant_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"tools":[],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"an agent that verifies and summarizes information","system_message":"You are a task verification assistant who is working with a web surfer agent to solve tasks. At each point, check if the task has been completed as requested by the user. If the websurfer_agent responds and the task has not yet been completed, respond with what is left to do and then say \'keep going\'. If and only when the task has been completed, summarize and present a final answer that directly addresses the user task in detail and then respond with TERMINATE.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_agentchat.agents.UserProxyAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that can represent a human user through an input function.","label":"UserProxyAgent","config":{"name":"user_proxy","description":"a human user that should be consulted only when the assistant_agent is unable to verify the information provided by the websurfer_agent"}}],"model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"model":"gpt-4o-mini"}},"termination_condition":{"provider":"autogen_agentchat.base.OrTerminationCondition","component_type":"termination","version":1,"component_version":1,"label":"OrTerminationCondition","config":{"conditions":[{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":20,"include_agent_event":false}},{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}}]}},"selector_prompt":"You are the cordinator of role play game. The following roles are available:\\n{roles}. Given a task, the websurfer_agent will be tasked to address it by browsing the web and providing information.  The assistant_agent will be tasked with verifying the information provided by the websurfer_agent and summarizing the information to present a final answer to the user. If the task  needs assistance from a human user (e.g., providing feedback, preferences, or the task is stalled), you should select the user_proxy role to provide the necessary information.\\n\\nRead the following conversation. Then select the next role from {participants} to play. Only return the role.\\n\\n{history}\\n\\nRead the above conversation. Then select the next role from {participants} to play. Only return the role.","allow_repeated_speaker":false,"max_selector_attempts":3}},{"provider":"autogen_agentchat.teams.SelectorGroupChat","component_type":"team","version":1,"component_version":1,"description":"A team with 3 agents - a Research Assistant that performs web searches and analyzes information, a Verifier that ensures research quality and completeness, and a Summary Agent that provides a detailed markdown summary of the research as a report to the user.","label":"Deep Research Team","config":{"participants":[{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"research_assistant","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"temperature":0.7,"model":"gpt-4o"}},"tools":[{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"Create custom tools by wrapping standard Python functions.","label":"FunctionTool","config":{"source_code":"async def google_search(\\n    query: str,\\n    num_results: int = 3,\\n    include_snippets: bool = True,\\n    include_content: bool = True,\\n    content_max_length: Optional[int] = 10000,\\n    language: str = \\"en\\",\\n    country: Optional[str] = None,\\n    safe_search: bool = True,\\n) -> List[Dict[str, str]]:\\n    \\"\\"\\"\\n    Perform a Google search using the Custom Search API and optionally fetch webpage content.\\n\\n    Args:\\n        query: Search query string\\n        num_results: Number of results to return (max 10)\\n        include_snippets: Include result snippets in output\\n        include_content: Include full webpage content in markdown format\\n        content_max_length: Maximum length of webpage content (if included)\\n        language: Language code for search results (e.g., en, es, fr)\\n        country: Optional country code for search results (e.g., us, uk)\\n        safe_search: Enable safe search filtering\\n\\n    Returns:\\n        List[Dict[str, str]]: List of search results, each containing:\\n            - title: Result title\\n            - link: Result URL\\n            - snippet: Result description (if include_snippets=True)\\n            - content: Webpage content in markdown (if include_content=True)\\n    \\"\\"\\"\\n    api_key = os.getenv(\\"GOOGLE_API_KEY\\")\\n    cse_id = os.getenv(\\"GOOGLE_CSE_ID\\")\\n\\n    if not api_key or not cse_id:\\n        raise ValueError(\\"Missing required environment variables. Please set GOOGLE_API_KEY and GOOGLE_CSE_ID.\\")\\n\\n    num_results = min(max(1, num_results), 10)\\n\\n    async def fetch_page_content(url: str, max_length: Optional[int] = 50000) -> str:\\n        \\"\\"\\"Helper function to fetch and convert webpage content to markdown\\"\\"\\"\\n        headers = {\\"User-Agent\\": \\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\\"}\\n\\n        try:\\n            async with httpx.AsyncClient() as client:\\n                response = await client.get(url, headers=headers, timeout=10)\\n                response.raise_for_status()\\n\\n                soup = BeautifulSoup(response.text, \\"html.parser\\")\\n\\n                # Remove script and style elements\\n                for script in soup([\\"script\\", \\"style\\"]):\\n                    script.decompose()\\n\\n                # Convert relative URLs to absolute\\n                for tag in soup.find_all([\\"a\\", \\"img\\"]):\\n                    if tag.get(\\"href\\"):\\n                        tag[\\"href\\"] = urljoin(url, tag[\\"href\\"])\\n                    if tag.get(\\"src\\"):\\n                        tag[\\"src\\"] = urljoin(url, tag[\\"src\\"])\\n\\n                h2t = html2text.HTML2Text()\\n                h2t.body_width = 0\\n                h2t.ignore_images = False\\n                h2t.ignore_emphasis = False\\n                h2t.ignore_links = False\\n                h2t.ignore_tables = False\\n\\n                markdown = h2t.handle(str(soup))\\n\\n                if max_length and len(markdown) > max_length:\\n                    markdown = markdown[:max_length] + \\"\\\\n...(truncated)\\"\\n\\n                return markdown.strip()\\n\\n        except Exception as e:\\n            return f\\"Error fetching content: {str(e)}\\"\\n\\n    params = {\\n        \\"key\\": api_key,\\n        \\"cx\\": cse_id,\\n        \\"q\\": query,\\n        \\"num\\": num_results,\\n        \\"hl\\": language,\\n        \\"safe\\": \\"active\\" if safe_search else \\"off\\",\\n    }\\n\\n    if country:\\n        params[\\"gl\\"] = country\\n\\n    try:\\n        async with httpx.AsyncClient() as client:\\n            response = await client.get(\\"https://www.googleapis.com/customsearch/v1\\", params=params, timeout=10)\\n            response.raise_for_status()\\n            data = response.json()\\n\\n            results = []\\n            if \\"items\\" in data:\\n                for item in data[\\"items\\"]:\\n                    result = {\\"title\\": item.get(\\"title\\", \\"\\"), \\"link\\": item.get(\\"link\\", \\"\\")}\\n                    if include_snippets:\\n                        result[\\"snippet\\"] = item.get(\\"snippet\\", \\"\\")\\n\\n                    if include_content:\\n                        result[\\"content\\"] = await fetch_page_content(result[\\"link\\"], max_length=content_max_length)\\n\\n                    results.append(result)\\n\\n            return results\\n\\n    except httpx.RequestError as e:\\n        raise ValueError(f\\"Failed to perform search: {str(e)}\\") from e\\n    except KeyError as e:\\n        raise ValueError(f\\"Invalid API response format: {str(e)}\\") from e\\n    except Exception as e:\\n        raise ValueError(f\\"Error during search: {str(e)}\\") from e\\n","name":"google_search","description":"\\n    Perform Google searches using the Custom Search API with optional webpage content fetching.\\n    Requires GOOGLE_API_KEY and GOOGLE_CSE_ID environment variables to be set.\\n    ","global_imports":[{"module":"typing","imports":["List","Dict","Optional"]},"os","httpx","html2text",{"module":"bs4","imports":["BeautifulSoup"]},{"module":"urllib.parse","imports":["urljoin"]}],"has_cancellation_support":false}},{"provider":"autogen_core.tools.FunctionTool","component_type":"tool","version":1,"component_version":1,"description":"Create custom tools by wrapping standard Python functions.","label":"FunctionTool","config":{"source_code":"async def fetch_webpage(\\n    url: str, include_images: bool = True, max_length: Optional[int] = None, headers: Optional[Dict[str, str]] = None\\n) -> str:\\n    \\"\\"\\"Fetch a webpage and convert it to markdown format.\\n\\n    Args:\\n        url: The URL of the webpage to fetch\\n        include_images: Whether to include image references in the markdown\\n        max_length: Maximum length of the output markdown (if None, no limit)\\n        headers: Optional HTTP headers for the request\\n\\n    Returns:\\n        str: Markdown version of the webpage content\\n\\n    Raises:\\n        ValueError: If the URL is invalid or the page can\'t be fetched\\n    \\"\\"\\"\\n    # Use default headers if none provided\\n    if headers is None:\\n        headers = {\\"User-Agent\\": \\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\\"}\\n\\n    try:\\n        # Fetch the webpage\\n        async with httpx.AsyncClient() as client:\\n            response = await client.get(url, headers=headers, timeout=10)\\n            response.raise_for_status()\\n\\n            # Parse HTML\\n            soup = BeautifulSoup(response.text, \\"html.parser\\")\\n\\n            # Remove script and style elements\\n            for script in soup([\\"script\\", \\"style\\"]):\\n                script.decompose()\\n\\n            # Convert relative URLs to absolute\\n            for tag in soup.find_all([\\"a\\", \\"img\\"]):\\n                if tag.get(\\"href\\"):\\n                    tag[\\"href\\"] = urljoin(url, tag[\\"href\\"])\\n                if tag.get(\\"src\\"):\\n                    tag[\\"src\\"] = urljoin(url, tag[\\"src\\"])\\n\\n            # Configure HTML to Markdown converter\\n            h2t = html2text.HTML2Text()\\n            h2t.body_width = 0  # No line wrapping\\n            h2t.ignore_images = not include_images\\n            h2t.ignore_emphasis = False\\n            h2t.ignore_links = False\\n            h2t.ignore_tables = False\\n\\n            # Convert to markdown\\n            markdown = h2t.handle(str(soup))\\n\\n            # Trim if max_length is specified\\n            if max_length and len(markdown) > max_length:\\n                markdown = markdown[:max_length] + \\"\\\\n...(truncated)\\"\\n\\n            return markdown.strip()\\n\\n    except httpx.RequestError as e:\\n        raise ValueError(f\\"Failed to fetch webpage: {str(e)}\\") from e\\n    except Exception as e:\\n        raise ValueError(f\\"Error processing webpage: {str(e)}\\") from e\\n","name":"fetch_webpage","description":"Fetch a webpage and convert it to markdown format, with options for including images and limiting length","global_imports":["os","html2text",{"module":"typing","imports":["Optional","Dict"]},"httpx",{"module":"bs4","imports":["BeautifulSoup"]},{"module":"html2text","imports":["HTML2Text"]},{"module":"urllib.parse","imports":["urljoin"]}],"has_cancellation_support":false}}],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"A research assistant that performs web searches and analyzes information","system_message":"You are a research assistant focused on finding accurate information.\\n        Use the google_search tool to find relevant information.\\n        Break down complex queries into specific search terms.\\n        Always verify information across multiple sources when possible.\\n        When you find relevant information, explain why it\'s relevant and how it connects to the query. When you get feedback from the a verifier agent, use your tools to act on the feedback and make progress.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"verifier","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"temperature":0.7,"model":"gpt-4o"}},"tools":[],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"A verification specialist who ensures research quality and completeness","system_message":"You are a research verification specialist.\\n        Your role is to:\\n        1. Verify that search queries are effective and suggest improvements if needed\\n        2. Explore drill downs where needed e.g, if the answer is likely in a link in the returned search results, suggest clicking on the link\\n        3. Suggest additional angles or perspectives to explore. Be judicious in suggesting new paths to avoid scope creep or wasting resources, if the task appears to be addressed and we can provide a report, do this and respond with \\"TERMINATE\\".\\n        4. Track progress toward answering the original question\\n        5. When the research is complete, provide a detailed summary in markdown format. For incomplete research, end your message with \\"CONTINUE RESEARCH\\". For complete research, end your message with APPROVED.\\n        Your responses should be structured as:\\n        - Progress Assessment\\n        - Gaps/Issues (if any)\\n        - Suggestions (if needed)\\n        - Next Steps or Final Summary","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}},{"provider":"autogen_agentchat.agents.AssistantAgent","component_type":"agent","version":1,"component_version":1,"description":"An agent that provides assistance with tool use.","label":"AssistantAgent","config":{"name":"summary_agent","model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"temperature":0.7,"model":"gpt-4o"}},"tools":[],"handoffs":[],"model_context":{"provider":"autogen_core.model_context.UnboundedChatCompletionContext","component_type":"chat_completion_context","version":1,"component_version":1,"description":"An unbounded chat completion context that keeps a view of the all the messages.","label":"UnboundedChatCompletionContext","config":{}},"description":"A summary agent that provides a detailed markdown summary of the research as a report to the user.","system_message":"You are a summary agent. Your role is to provide a detailed markdown summary of the research as a report to the user. Your report should have a reasonable title that matches the research question and should summarize the key details in the results found in natural an actionable manner. The main results/answer should be in the first paragraph. Where reasonable, your report should have clear comparison tables that drive critical insights. Most importantly, you should have a reference section and cite the key sources (where available) for facts obtained INSIDE THE MAIN REPORT. Also, where appropriate, you may add images if available that illustrate concepts needed for the summary.\\n        Your report should end with the word \\"TERMINATE\\" to signal the end of the conversation.","model_client_stream":false,"reflect_on_tool_use":false,"tool_call_summary_format":"{result}"}}],"model_client":{"provider":"autogen_ext.models.openai.OpenAIChatCompletionClient","component_type":"model","version":1,"component_version":1,"description":"Chat completion client for OpenAI hosted models.","label":"OpenAIChatCompletionClient","config":{"temperature":0.7,"model":"gpt-4o"}},"termination_condition":{"provider":"autogen_agentchat.base.OrTerminationCondition","component_type":"termination","version":1,"component_version":1,"label":"OrTerminationCondition","config":{"conditions":[{"provider":"autogen_agentchat.conditions.TextMentionTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation if a specific text is mentioned.","label":"TextMentionTermination","config":{"text":"TERMINATE"}},{"provider":"autogen_agentchat.conditions.MaxMessageTermination","component_type":"termination","version":1,"component_version":1,"description":"Terminate the conversation after a maximum number of messages have been exchanged.","label":"MaxMessageTermination","config":{"max_messages":30,"include_agent_event":false}}]}},"selector_prompt":"You are coordinating a research team by selecting the team member to speak/act next. The following team member roles are available:\\n    {roles}.\\n    The research_assistant performs searches and analyzes information.\\n    The verifier evaluates progress and ensures completeness.\\n    The summary_agent provides a detailed markdown summary of the research as a report to the user.\\n\\n    Given the current context, select the most appropriate next speaker.\\n    The research_assistant should search and analyze.\\n    The verifier should evaluate progress and guide the research (select this role is there is a need to verify/evaluate progress). You should ONLY select the summary_agent role if the research is complete and it is time to generate a report.\\n\\n    Base your selection on:\\n    1. Current stage of research\\n    2. Last speaker\'s findings or suggestions\\n    3. Need for verification vs need for new information\\n    Read the following conversation. Then select the next role from {participants} to play. Only return the role.\\n\\n    {history}\\n\\n    Read the above conversation. Then select the next role from {participants} to play. ONLY RETURN THE ROLE.","allow_repeated_speaker":true,"max_selector_attempts":3}}]}}')},3288:function(e,t,n){n.r(t),n.d(t,{default:function(){return wn}});var o=n(6540),r=n(5312),a=n(436),i=n(3532),s=n(8458),l=n(7677),c=n(2744),p=n(2571),d=n(955),m=n(2941),u=n(9910),g=n(697),f=n(9644),h=n(1788);const v=(0,h.A)("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]);var y=n(7213);const b=(0,h.A)("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]);var _=n(2708);const x=(0,h.A)("Package",[["path",{d:"M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z",key:"1a0edw"}],["path",{d:"M12 22V12",key:"d0xqtd"}],["path",{d:"m3.3 7 7.703 4.734a2 2 0 0 0 1.994 0L20.7 7",key:"yx3hmr"}],["path",{d:"m7.5 4.27 9 5.15",key:"1c824w"}]]);var w=n(2206);const A=e=>{let{isOpen:t,galleries:n,currentGallery:r,onToggle:a,onSelectGallery:i,onCreateGallery:s,onDeleteGallery:l,onSyncGallery:c,isLoading:p=!1}=e;return t?o.createElement("div",{className:"h-full border-r border-secondary"},o.createElement("div",{className:"flex items-center justify-between pt-0 p-4 pl-2 pr-2 border-b border-secondary"},o.createElement("div",{className:"flex items-center gap-2"},o.createElement("span",{className:"text-primary font-medium"},"Galleries"),o.createElement("span",{className:"px-2 py-0.5 text-xs bg-accent/10 text-accent rounded"},n.length)),o.createElement(d.A,{title:"Close Sidebar"},o.createElement("button",{onClick:a,className:"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50"},o.createElement(f.A,{strokeWidth:1.5,className:"h-6 w-6"})))),o.createElement("div",{className:"my-4 flex text-sm"},o.createElement("div",{className:"mr-2 w-full"},o.createElement(d.A,{title:"Create new gallery"},o.createElement(m.Ay,{type:"primary",className:"w-full",icon:o.createElement(g.A,{className:"w-4 h-4"}),onClick:s},"New Gallery")))),o.createElement("div",{className:"py-2 flex text-sm text-secondary"},o.createElement("div",{className:"flex"},"All Galleries"),p&&o.createElement(v,{className:"w-4 h-4 ml-2 animate-spin"})),!p&&0===n.length&&o.createElement("div",{className:"p-2 mr-2 text-center text-secondary text-sm border border-dashed rounded"},o.createElement(y.A,{className:"w-4 h-4 inline-block mr-1.5 -mt-0.5"}),"No galleries found"),o.createElement("div",{className:"scroll overflow-y-auto h-[calc(100%-170px)]"},n.map((e=>o.createElement("div",{key:e.id,className:"relative border-secondary"},o.createElement("div",{className:"absolute top-1 left-0.5 z-50 h-[calc(100%-8px)] w-1 bg-opacity-80 rounded "+((null==r?void 0:r.id)===e.id?"bg-accent":"bg-tertiary")}),e&&e.config&&e.config.components&&o.createElement("div",{className:"group ml-1 flex flex-col p-3 rounded-l cursor-pointer hover:bg-secondary "+((null==r?void 0:r.id)===e.id?"border-accent bg-secondary":"border-transparent"),onClick:()=>i(e)},o.createElement("div",{className:"flex items-center justify-between min-w-0"},o.createElement("div",{className:"flex items-center gap-2 min-w-0 flex-1"},o.createElement("div",{className:"truncate flex-1"},o.createElement("span",{className:"font-medium"},e.config.name)),e.config.url&&o.createElement(d.A,{title:"Remote Gallery"},o.createElement(b,{className:"w-3 h-3 text-secondary flex-shrink-0"}))),o.createElement("div",{className:"flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity ml-2 flex-shrink-0"},e.config.url&&o.createElement(d.A,{title:"Sync gallery"},o.createElement(m.Ay,{type:"text",size:"small",className:"p-0 min-w-[24px] h-6",icon:o.createElement(v,{className:"w-4 h-4"}),onClick:t=>{t.stopPropagation(),c(e.id)}})),o.createElement(d.A,{title:1===n.length?"Cannot delete the last gallery":"Delete gallery"},o.createElement(m.Ay,{type:"text",size:"small",className:"p-0 min-w-[24px] h-6",danger:!0,disabled:1===n.length,icon:o.createElement(_.A,{className:"w-4 h-4 text-red-500"}),onClick:t=>{t.stopPropagation(),l(e.id)}})))),o.createElement("div",{className:"mt-1 flex items-center gap-2 text-xs text-secondary"},o.createElement("span",{className:"bg-secondary/20 truncate rounded px-1"},"v",e.config.metadata.version),o.createElement("div",{className:"flex items-center gap-1"},o.createElement(x,{className:"w-3 h-3"}),o.createElement("span",null,Object.values(e.config.components).reduce(((e,t)=>e+t.length),0)," ","components"))),e.updated_at&&o.createElement("div",{className:"mt-1 flex items-center gap-1 text-xs text-secondary"},o.createElement("span",null,(0,w.vq)(e.updated_at))))))))):o.createElement("div",{className:"h-full border-r border-secondary"},o.createElement("div",{className:"p-2 -ml-2"},o.createElement(d.A,{title:`Galleries (${n.length})`},o.createElement("button",{onClick:a,className:"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50"},o.createElement(u.A,{strokeWidth:1.5,className:"h-6 w-6"})))),o.createElement("div",{className:"mt-4 px-2 -ml-1"},o.createElement(d.A,{title:"Create new gallery"},o.createElement(m.Ay,{type:"text",className:"w-full p-2 flex justify-center",onClick:s,icon:o.createElement(g.A,{className:"w-4 h-4"})}))))};var E=n(9957),C=n(6161),k=n(6143);const $=(0,h.A)("Trash",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}]]);var O=n(5404),I=n(8188),S=n(6274),N=n(2640),T=n(6816),P=n(7073),R=n(5680),M=n(7199),j=n(5144);const z=e=>{let{item:t,onEdit:n,onDuplicate:r,onDelete:a,index:i,allowDelete:s}=e;return o.createElement("div",{className:"bg-secondary rounded overflow-hidden group h-full cursor-pointer",onClick:()=>n(t,i)},o.createElement("div",{className:"px-4 py-3 flex items-center justify-between border-b border-tertiary"},o.createElement("div",{className:"text-xs text-secondary truncate flex-1"},t.provider),o.createElement("div",{className:"flex gap-0"},s&&o.createElement(m.Ay,{title:"Delete",type:"text",className:"h-6 w-6 flex items-center justify-center p-0 opacity-0 group-hover:opacity-100 transition-opacity text-red-500 hover:text-red-600",icon:o.createElement($,{className:"w-3.5 h-3.5"}),onClick:e=>{e.stopPropagation(),a(t,i)}}),o.createElement(m.Ay,{title:"Duplicate",type:"text",className:"h-6 w-6 flex items-center justify-center p-0 opacity-0 group-hover:opacity-100 transition-opacity",icon:o.createElement(O.A,{className:"w-3.5 h-3.5"}),onClick:e=>{e.stopPropagation(),r(t,i)}}),o.createElement(m.Ay,{title:"Edit",type:"text",className:"h-6 w-6 flex items-center justify-center p-0 opacity-0 group-hover:opacity-100 transition-opacity",icon:o.createElement(I.A,{className:"w-3.5 h-3.5"}),onClick:e=>{e.stopPropagation(),n(t,i)}}))),o.createElement("div",{className:"p-4 pb-0 pt-3"},o.createElement("div",{className:"text-base font-medium mb-2"},t.label),o.createElement("div",{className:"text-sm text-secondary line-clamp-2 mb-3 min-h-[40px]"},o.createElement(w.PA,{content:t.description||"",showFullscreen:!1,textThreshold:70}))))},D=e=>{let{items:t,title:n,...r}=e;return o.createElement("div",null,o.createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 auto-rows-fr"},t.map(((e,n)=>o.createElement(z,Object.assign({key:n,item:e,index:n,allowDelete:t.length>1},r))))))},L={team:S.A,agent:N.A,tool:T.A,model:P.A,termination:R.A},F={team:{selector_prompt:"Default selector prompt",participants:[]},agent:{name:"New Agent",description:""},model:{model:"gpt-3.5",api_key:""},tool:{source_code:"",name:"New Tool",description:"A new tool",global_imports:[],has_cancellation_support:!1},termination:{max_messages:1}},G=e=>{let{gallery:t,onSave:n,onDirtyStateChange:r}=e;if(!t.config.components)return o.createElement("div",{className:"text-secondary"},"No components found");const{0:i,1:s}=(0,o.useState)(null),{0:l,1:c}=(0,o.useState)("team"),{0:p,1:u}=(0,o.useState)(!1),{0:f,1:h}=(0,o.useState)(t.config.name),{0:v,1:y}=(0,o.useState)(t.config.metadata.description),_=(e,o)=>{const a={...t,config:{...t.config,components:{...t.config.components,[e]:o(t.config.components[e])}}};n(a),r(!0)},w={onEdit:(e,t)=>{s({component:e,category:`${l}s`,index:t})},onDuplicate:(e,n)=>{var o;const r=`${l}s`,i=null===(o=e.label)||void 0===o?void 0:o.replace(/_\d+$/,""),s=t.config.components[r],c=Math.max.apply(Math,(0,a.A)(s.map((e=>{var t;const n=null===(t=e.label)||void 0===t?void 0:t.match(new RegExp(`^${i}_?(\\d+)?$`));return n?parseInt(n[1]||"0"):0})).filter((e=>!isNaN(e)))).concat([0]))+1;_(r,(t=>[].concat((0,a.A)(t),[{...e,label:`${i}_${c}`}])))},onDelete:(e,t)=>{_(`${l}s`,(e=>e.filter(((e,n)=>n!==t))))}},A=Object.entries(L).map((e=>{let[n,r]=e;return{key:n,label:o.createElement("span",{className:"flex items-center gap-2"},o.createElement(r,{className:"w-5 h-5"}),n.charAt(0).toUpperCase()+n.slice(1),"s",o.createElement("span",{className:"text-xs font-light text-secondary"},"(",t.config.components[`${n}s`].length,")")),children:o.createElement("div",null,o.createElement("div",{className:"flex justify-between items-center mb-4"},o.createElement("h3",{className:"text-base font-medium"},t.config.components[`${n}s`].length," ",1===t.config.components[`${n}s`].length?n.charAt(0).toUpperCase()+n.slice(1):n.charAt(0).toUpperCase()+n.slice(1)+"s"),o.createElement(m.Ay,{type:"primary",icon:o.createElement(g.A,{className:"w-4 h-4"}),onClick:()=>{c(n),(()=>{const e=`${l}s`,n=t.config.components[e];let o;const r=`New ${l.charAt(0).toUpperCase()+l.slice(1)}`;o=n.length>0?{...n[0],label:r}:{provider:"new",component_type:l,config:F[l],label:r},_(e,(t=>{const n=[].concat((0,a.A)(t),[o]);return s({component:o,category:e,index:n.length-1}),n}))})()}},`Add ${n.charAt(0).toUpperCase()+n.slice(1)}`)),o.createElement(D,Object.assign({items:t.config.components[`${n}s`],title:n},w)))}}));return o.createElement("div",{className:"max-w-7xl mx-auto px-4"},o.createElement("div",{className:"relative h-64 rounded bg-secondary overflow-hidden mb-8"},o.createElement("img",{src:"/images/bg/layeredbg.svg",alt:"Gallery Banner",className:"absolute w-full h-full object-cover"}),o.createElement("div",{className:"relative z-10 p-6 h-full flex flex-col justify-between"},o.createElement("div",null,o.createElement("div",{className:"flex items-center justify-between"},o.createElement("div",{className:"flex items-center gap-2"},p?o.createElement(E.A,{value:f,onChange:e=>h(e.target.value),className:"text-2xl font-medium bg-background/50 backdrop-blur px-2 py-1 rounded w-[400px]"}):o.createElement("h1",{className:"text-2xl font-medium text-primary"},t.config.name),t.config.url&&o.createElement(d.A,{title:"Remote Gallery"},o.createElement(b,{className:"w-5 h-5 text-secondary"}))),p?o.createElement("div",{className:"flex gap-2"},o.createElement(m.Ay,{onClick:()=>u(!1)},"Cancel"),o.createElement(m.Ay,{type:"primary",onClick:()=>{const e={...t,config:{...t.config,name:f,metadata:{...t.config.metadata,description:v}}};n(e),r(!0),u(!1)}},"Save")):o.createElement(m.Ay,{icon:o.createElement(I.A,{className:"w-4 h-4"}),onClick:()=>u(!0),type:"text",className:"text-white hover:text-white/80"},"Edit")),p?o.createElement(j.A,{value:v,onChange:e=>y(e.target.value),className:"w-1/2 bg-background/50 backdrop-blur px-2 py-1 rounded mt-2",rows:2}):o.createElement("p",{className:"text-secondary w-1/2 mt-2 line-clamp-2"},t.config.metadata.description)),o.createElement("div",{className:"flex gap-2"},o.createElement("div",{className:"bg-tertiary backdrop-blur rounded p-2 flex items-center gap-2"},o.createElement(x,{className:"w-4 h-4 text-secondary"}),o.createElement("span",{className:"text-sm"},Object.values(t.config.components).reduce(((e,t)=>e+t.length),0)," ","components")),o.createElement("div",{className:"bg-tertiary backdrop-blur rounded p-2 text-sm"},"v",t.config.metadata.version)))),o.createElement(C.A,{items:A,className:"gallery-tabs",size:"large",onChange:e=>c(e)}),o.createElement(k.A,{title:"Edit Component",placement:"right",size:"large",onClose:()=>s(null),open:!!i,className:"component-editor-drawer"},i&&o.createElement(M.L,{component:i.component,onChange:e=>{i&&(_(i.category,(t=>t.map(((t,n)=>n===i.index?e:t)))),s(null))},onClose:()=>s(null),navigationDepth:!0})))};var U=n(961),q=n(6942),W=n.n(q),B=n(8168),H=n(3029),V=n(2901),X=n(9417),Y=n(5501),K=n(9426),J=n(4467),Q=n(9379),Z=n(3986),ee=n(2284),te=n(675),ne=n(467),oe=n(2065),re=n(8210),ae=function(e,t){if(e&&t){var n=Array.isArray(t)?t:t.split(","),o=e.name||"",r=e.type||"",a=r.replace(/\/.*$/,"");return n.some((function(e){var t=e.trim();if(/^\*(\/\*)?$/.test(e))return!0;if("."===t.charAt(0)){var n=o.toLowerCase(),i=t.toLowerCase(),s=[i];return".jpg"!==i&&".jpeg"!==i||(s=[".jpg",".jpeg"]),s.some((function(e){return n.endsWith(e)}))}return/\/\*$/.test(t)?a===t.replace(/\/.*$/,""):r===t||!!/^\w+$/.test(t)&&((0,re.Ay)(!1,"Upload takes an invalidate 'accept' type '".concat(t,"'.Skip for check.")),!0)}))}return!0};function ie(e){var t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch(n){return t}}function se(e){var t=new XMLHttpRequest;e.onProgress&&t.upload&&(t.upload.onprogress=function(t){t.total>0&&(t.percent=t.loaded/t.total*100),e.onProgress(t)});var n=new FormData;e.data&&Object.keys(e.data).forEach((function(t){var o=e.data[t];Array.isArray(o)?o.forEach((function(e){n.append("".concat(t,"[]"),e)})):n.append(t,o)})),e.file instanceof Blob?n.append(e.filename,e.file,e.file.name):n.append(e.filename,e.file),t.onerror=function(t){e.onError(t)},t.onload=function(){return t.status<200||t.status>=300?e.onError(function(e,t){var n="cannot ".concat(e.method," ").concat(e.action," ").concat(t.status,"'"),o=new Error(n);return o.status=t.status,o.method=e.method,o.url=e.action,o}(e,t),ie(t)):e.onSuccess(ie(t),t)},t.open(e.method,e.action,!0),e.withCredentials&&"withCredentials"in t&&(t.withCredentials=!0);var o=e.headers||{};return null!==o["X-Requested-With"]&&t.setRequestHeader("X-Requested-With","XMLHttpRequest"),Object.keys(o).forEach((function(e){null!==o[e]&&t.setRequestHeader(e,o[e])})),t.send(n),{abort:function(){t.abort()}}}var le=function(){var e=(0,ne.A)((0,te.A)().mark((function e(t,n){var o,r,i,s,l,c,p,d;return(0,te.A)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:c=function(){return(c=(0,ne.A)((0,te.A)().mark((function e(t){return(0,te.A)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e){t.file((function(o){n(o)?(t.fullPath&&!o.webkitRelativePath&&(Object.defineProperties(o,{webkitRelativePath:{writable:!0}}),o.webkitRelativePath=t.fullPath.replace(/^\//,""),Object.defineProperties(o,{webkitRelativePath:{writable:!1}})),e(o)):e(null)}))})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)},l=function(e){return c.apply(this,arguments)},s=function(){return(s=(0,ne.A)((0,te.A)().mark((function e(t){var n,o,r,a,i;return(0,te.A)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.createReader(),o=[];case 2:return e.next=5,new Promise((function(e){n.readEntries(e,(function(){return e([])}))}));case 5:if(r=e.sent,a=r.length){e.next=9;break}return e.abrupt("break",12);case 9:for(i=0;i<a;i++)o.push(r[i]);e.next=2;break;case 12:return e.abrupt("return",o);case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)},i=function(e){return s.apply(this,arguments)},o=[],r=[],t.forEach((function(e){return r.push(e.webkitGetAsEntry())})),p=function(){var e=(0,ne.A)((0,te.A)().mark((function e(t,n){var s,c;return(0,te.A)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2;break}return e.abrupt("return");case 2:if(t.path=n||"",!t.isFile){e.next=10;break}return e.next=6,l(t);case 6:(s=e.sent)&&o.push(s),e.next=15;break;case 10:if(!t.isDirectory){e.next=15;break}return e.next=13,i(t);case 13:c=e.sent,r.push.apply(r,(0,a.A)(c));case 15:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),d=0;case 9:if(!(d<r.length)){e.next=15;break}return e.next=12,p(r[d]);case 12:d++,e.next=9;break;case 15:return e.abrupt("return",o);case 16:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),ce=le,pe=+new Date,de=0;function me(){return"rc-upload-".concat(pe,"-").concat(++de)}var ue=["component","prefixCls","className","classNames","disabled","id","name","style","styles","multiple","accept","capture","children","directory","openFileDialogOnClick","onMouseEnter","onMouseLeave","hasControlInside"],ge=function(e){(0,Y.A)(n,e);var t=(0,K.A)(n);function n(){var e;(0,H.A)(this,n);for(var o=arguments.length,r=new Array(o),i=0;i<o;i++)r[i]=arguments[i];return e=t.call.apply(t,[this].concat(r)),(0,J.A)((0,X.A)(e),"state",{uid:me()}),(0,J.A)((0,X.A)(e),"reqs",{}),(0,J.A)((0,X.A)(e),"fileInput",void 0),(0,J.A)((0,X.A)(e),"_isMounted",void 0),(0,J.A)((0,X.A)(e),"onChange",(function(t){var n=e.props,o=n.accept,r=n.directory,i=t.target.files,s=(0,a.A)(i).filter((function(e){return!r||ae(e,o)}));e.uploadFiles(s),e.reset()})),(0,J.A)((0,X.A)(e),"onClick",(function(t){var n=e.fileInput;if(n){var o=t.target,r=e.props.onClick;if(o&&"BUTTON"===o.tagName)n.parentNode.focus(),o.blur();n.click(),r&&r(t)}})),(0,J.A)((0,X.A)(e),"onKeyDown",(function(t){"Enter"===t.key&&e.onClick(t)})),(0,J.A)((0,X.A)(e),"onFileDrop",function(){var t=(0,ne.A)((0,te.A)().mark((function t(n){var o,r,i;return(0,te.A)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o=e.props.multiple,n.preventDefault(),"dragover"!==n.type){t.next=4;break}return t.abrupt("return");case 4:if(!e.props.directory){t.next=11;break}return t.next=7,ce(Array.prototype.slice.call(n.dataTransfer.items),(function(t){return ae(t,e.props.accept)}));case 7:r=t.sent,e.uploadFiles(r),t.next=14;break;case 11:i=(0,a.A)(n.dataTransfer.files).filter((function(t){return ae(t,e.props.accept)})),!1===o&&(i=i.slice(0,1)),e.uploadFiles(i);case 14:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()),(0,J.A)((0,X.A)(e),"uploadFiles",(function(t){var n=(0,a.A)(t),o=n.map((function(t){return t.uid=me(),e.processFile(t,n)}));Promise.all(o).then((function(t){var n=e.props.onBatchStart;null==n||n(t.map((function(e){return{file:e.origin,parsedFile:e.parsedFile}}))),t.filter((function(e){return null!==e.parsedFile})).forEach((function(t){e.post(t)}))}))})),(0,J.A)((0,X.A)(e),"processFile",function(){var t=(0,ne.A)((0,te.A)().mark((function t(n,o){var r,a,i,s,l,c,p,d,m;return(0,te.A)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.props.beforeUpload,a=n,!r){t.next=14;break}return t.prev=3,t.next=6,r(n,o);case 6:a=t.sent,t.next=12;break;case 9:t.prev=9,t.t0=t.catch(3),a=!1;case 12:if(!1!==a){t.next=14;break}return t.abrupt("return",{origin:n,parsedFile:null,action:null,data:null});case 14:if("function"!=typeof(i=e.props.action)){t.next=21;break}return t.next=18,i(n);case 18:s=t.sent,t.next=22;break;case 21:s=i;case 22:if("function"!=typeof(l=e.props.data)){t.next=29;break}return t.next=26,l(n);case 26:c=t.sent,t.next=30;break;case 29:c=l;case 30:return p="object"!==(0,ee.A)(a)&&"string"!=typeof a||!a?n:a,d=p instanceof File?p:new File([p],n.name,{type:n.type}),(m=d).uid=n.uid,t.abrupt("return",{origin:n,data:c,parsedFile:m,action:s});case 35:case"end":return t.stop()}}),t,null,[[3,9]])})));return function(e,n){return t.apply(this,arguments)}}()),(0,J.A)((0,X.A)(e),"saveFileInput",(function(t){e.fileInput=t})),e}return(0,V.A)(n,[{key:"componentDidMount",value:function(){this._isMounted=!0}},{key:"componentWillUnmount",value:function(){this._isMounted=!1,this.abort()}},{key:"post",value:function(e){var t=this,n=e.data,o=e.origin,r=e.action,a=e.parsedFile;if(this._isMounted){var i=this.props,s=i.onStart,l=i.customRequest,c=i.name,p=i.headers,d=i.withCredentials,m=i.method,u=o.uid,g=l||se,f={action:r,filename:c,data:n,file:a,headers:p,withCredentials:d,method:m||"post",onProgress:function(e){var n=t.props.onProgress;null==n||n(e,a)},onSuccess:function(e,n){var o=t.props.onSuccess;null==o||o(e,a,n),delete t.reqs[u]},onError:function(e,n){var o=t.props.onError;null==o||o(e,n,a),delete t.reqs[u]}};s(o),this.reqs[u]=g(f)}}},{key:"reset",value:function(){this.setState({uid:me()})}},{key:"abort",value:function(e){var t=this.reqs;if(e){var n=e.uid?e.uid:e;t[n]&&t[n].abort&&t[n].abort(),delete t[n]}else Object.keys(t).forEach((function(e){t[e]&&t[e].abort&&t[e].abort(),delete t[e]}))}},{key:"render",value:function(){var e=this.props,t=e.component,n=e.prefixCls,r=e.className,a=e.classNames,i=void 0===a?{}:a,s=e.disabled,l=e.id,c=e.name,p=e.style,d=e.styles,m=void 0===d?{}:d,u=e.multiple,g=e.accept,f=e.capture,h=e.children,v=e.directory,y=e.openFileDialogOnClick,b=e.onMouseEnter,_=e.onMouseLeave,x=e.hasControlInside,w=(0,Z.A)(e,ue),A=W()((0,J.A)((0,J.A)((0,J.A)({},n,!0),"".concat(n,"-disabled"),s),r,r)),E=v?{directory:"directory",webkitdirectory:"webkitdirectory"}:{},C=s?{}:{onClick:y?this.onClick:function(){},onKeyDown:y?this.onKeyDown:function(){},onMouseEnter:b,onMouseLeave:_,onDrop:this.onFileDrop,onDragOver:this.onFileDrop,tabIndex:x?void 0:"0"};return o.createElement(t,(0,B.A)({},C,{className:A,role:x?void 0:"button",style:p}),o.createElement("input",(0,B.A)({},(0,oe.A)(w,{aria:!0,data:!0}),{id:l,name:c,disabled:s,type:"file",ref:this.saveFileInput,onClick:function(e){return e.stopPropagation()},key:this.state.uid,style:(0,Q.A)({display:"none"},m.input),className:i.input,accept:g},E,{multiple:u,onChange:this.onChange},null!=f?{capture:f}:{})),h)}}]),n}(o.Component),fe=ge;function he(){}var ve=function(e){(0,Y.A)(n,e);var t=(0,K.A)(n);function n(){var e;(0,H.A)(this,n);for(var o=arguments.length,r=new Array(o),a=0;a<o;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r)),(0,J.A)((0,X.A)(e),"uploader",void 0),(0,J.A)((0,X.A)(e),"saveUploader",(function(t){e.uploader=t})),e}return(0,V.A)(n,[{key:"abort",value:function(e){this.uploader.abort(e)}},{key:"render",value:function(){return o.createElement(fe,(0,B.A)({},this.props,{ref:this.saveUploader}))}}]),n}(o.Component);(0,J.A)(ve,"defaultProps",{component:"span",prefixCls:"rc-upload",data:{},headers:{},name:"file",multipart:!1,onStart:he,onError:he,onSuccess:he,multiple:!1,beforeUpload:null,customRequest:null,withCredentials:!1,openFileDialogOnClick:!0,hasControlInside:!1});var ye=ve,be=n(2533),_e=n(2279),xe=n(8119),we=n(9155),Ae=n(8055),Ee=n(5905),Ce=n(977),ke=n(7358),$e=n(4277),Oe=n(2187);var Ie=e=>{const{componentCls:t,iconCls:n}=e;return{[`${t}-wrapper`]:{[`${t}-drag`]:{position:"relative",width:"100%",height:"100%",textAlign:"center",background:e.colorFillAlter,border:`${(0,Oe.zA)(e.lineWidth)} dashed ${e.colorBorder}`,borderRadius:e.borderRadiusLG,cursor:"pointer",transition:`border-color ${e.motionDurationSlow}`,[t]:{padding:e.padding},[`${t}-btn`]:{display:"table",width:"100%",height:"100%",outline:"none",borderRadius:e.borderRadiusLG,"&:focus-visible":{outline:`${(0,Oe.zA)(e.lineWidthFocus)} solid ${e.colorPrimaryBorder}`}},[`${t}-drag-container`]:{display:"table-cell",verticalAlign:"middle"},[`\n          &:not(${t}-disabled):hover,\n          &-hover:not(${t}-disabled)\n        `]:{borderColor:e.colorPrimaryHover},[`p${t}-drag-icon`]:{marginBottom:e.margin,[n]:{color:e.colorPrimary,fontSize:e.uploadThumbnailSize}},[`p${t}-text`]:{margin:`0 0 ${(0,Oe.zA)(e.marginXXS)}`,color:e.colorTextHeading,fontSize:e.fontSizeLG},[`p${t}-hint`]:{color:e.colorTextDescription,fontSize:e.fontSize},[`&${t}-disabled`]:{[`p${t}-drag-icon ${n},\n            p${t}-text,\n            p${t}-hint\n          `]:{color:e.colorTextDisabled}}}}}};var Se=e=>{const{componentCls:t,iconCls:n,fontSize:o,lineHeight:r,calc:a}=e,i=`${t}-list-item`,s=`${i}-actions`,l=`${i}-action`;return{[`${t}-wrapper`]:{[`${t}-list`]:Object.assign(Object.assign({},(0,Ee.t6)()),{lineHeight:e.lineHeight,[i]:{position:"relative",height:a(e.lineHeight).mul(o).equal(),marginTop:e.marginXS,fontSize:o,display:"flex",alignItems:"center",transition:`background-color ${e.motionDurationSlow}`,borderRadius:e.borderRadiusSM,"&:hover":{backgroundColor:e.controlItemBgHover},[`${i}-name`]:Object.assign(Object.assign({},Ee.L9),{padding:`0 ${(0,Oe.zA)(e.paddingXS)}`,lineHeight:r,flex:"auto",transition:`all ${e.motionDurationSlow}`}),[s]:{whiteSpace:"nowrap",[l]:{opacity:0},[n]:{color:e.actionsColor,transition:`all ${e.motionDurationSlow}`},[`\n              ${l}:focus-visible,\n              &.picture ${l}\n            `]:{opacity:1}},[`${t}-icon ${n}`]:{color:e.colorTextDescription,fontSize:o},[`${i}-progress`]:{position:"absolute",bottom:e.calc(e.uploadProgressOffset).mul(-1).equal(),width:"100%",paddingInlineStart:a(o).add(e.paddingXS).equal(),fontSize:o,lineHeight:0,pointerEvents:"none","> div":{margin:0}}},[`${i}:hover ${l}`]:{opacity:1},[`${i}-error`]:{color:e.colorError,[`${i}-name, ${t}-icon ${n}`]:{color:e.colorError},[s]:{[`${n}, ${n}:hover`]:{color:e.colorError},[l]:{opacity:1}}},[`${t}-list-item-container`]:{transition:`opacity ${e.motionDurationSlow}, height ${e.motionDurationSlow}`,"&::before":{display:"table",width:0,height:0,content:'""'}}})}}},Ne=n(8680);var Te=e=>{const{componentCls:t}=e,n=new Oe.Mo("uploadAnimateInlineIn",{from:{width:0,height:0,padding:0,opacity:0,margin:e.calc(e.marginXS).div(-2).equal()}}),o=new Oe.Mo("uploadAnimateInlineOut",{to:{width:0,height:0,padding:0,opacity:0,margin:e.calc(e.marginXS).div(-2).equal()}}),r=`${t}-animate-inline`;return[{[`${t}-wrapper`]:{[`${r}-appear, ${r}-enter, ${r}-leave`]:{animationDuration:e.motionDurationSlow,animationTimingFunction:e.motionEaseInOutCirc,animationFillMode:"forwards"},[`${r}-appear, ${r}-enter`]:{animationName:n},[`${r}-leave`]:{animationName:o}}},{[`${t}-wrapper`]:(0,Ne.p9)(e)},n,o]},Pe=n(5748);const Re=e=>{const{componentCls:t,iconCls:n,uploadThumbnailSize:o,uploadProgressOffset:r,calc:a}=e,i=`${t}-list`,s=`${i}-item`;return{[`${t}-wrapper`]:{[`\n        ${i}${i}-picture,\n        ${i}${i}-picture-card,\n        ${i}${i}-picture-circle\n      `]:{[s]:{position:"relative",height:a(o).add(a(e.lineWidth).mul(2)).add(a(e.paddingXS).mul(2)).equal(),padding:e.paddingXS,border:`${(0,Oe.zA)(e.lineWidth)} ${e.lineType} ${e.colorBorder}`,borderRadius:e.borderRadiusLG,"&:hover":{background:"transparent"},[`${s}-thumbnail`]:Object.assign(Object.assign({},Ee.L9),{width:o,height:o,lineHeight:(0,Oe.zA)(a(o).add(e.paddingSM).equal()),textAlign:"center",flex:"none",[n]:{fontSize:e.fontSizeHeading2,color:e.colorPrimary},img:{display:"block",width:"100%",height:"100%",overflow:"hidden"}}),[`${s}-progress`]:{bottom:r,width:`calc(100% - ${(0,Oe.zA)(a(e.paddingSM).mul(2).equal())})`,marginTop:0,paddingInlineStart:a(o).add(e.paddingXS).equal()}},[`${s}-error`]:{borderColor:e.colorError,[`${s}-thumbnail ${n}`]:{[`svg path[fill='${Pe.z1[0]}']`]:{fill:e.colorErrorBg},[`svg path[fill='${Pe.z1.primary}']`]:{fill:e.colorError}}},[`${s}-uploading`]:{borderStyle:"dashed",[`${s}-name`]:{marginBottom:r}}},[`${i}${i}-picture-circle ${s}`]:{[`&, &::before, ${s}-thumbnail`]:{borderRadius:"50%"}}}}},Me=e=>{const{componentCls:t,iconCls:n,fontSizeLG:o,colorTextLightSolid:r,calc:a}=e,i=`${t}-list`,s=`${i}-item`,l=e.uploadPicCardSize;return{[`\n      ${t}-wrapper${t}-picture-card-wrapper,\n      ${t}-wrapper${t}-picture-circle-wrapper\n    `]:Object.assign(Object.assign({},(0,Ee.t6)()),{display:"block",[`${t}${t}-select`]:{width:l,height:l,textAlign:"center",verticalAlign:"top",backgroundColor:e.colorFillAlter,border:`${(0,Oe.zA)(e.lineWidth)} dashed ${e.colorBorder}`,borderRadius:e.borderRadiusLG,cursor:"pointer",transition:`border-color ${e.motionDurationSlow}`,[`> ${t}`]:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%",textAlign:"center"},[`&:not(${t}-disabled):hover`]:{borderColor:e.colorPrimary}},[`${i}${i}-picture-card, ${i}${i}-picture-circle`]:{display:"flex",flexWrap:"wrap","@supports not (gap: 1px)":{"& > *":{marginBlockEnd:e.marginXS,marginInlineEnd:e.marginXS}},"@supports (gap: 1px)":{gap:e.marginXS},[`${i}-item-container`]:{display:"inline-block",width:l,height:l,verticalAlign:"top"},"&::after":{display:"none"},"&::before":{display:"none"},[s]:{height:"100%",margin:0,"&::before":{position:"absolute",zIndex:1,width:`calc(100% - ${(0,Oe.zA)(a(e.paddingXS).mul(2).equal())})`,height:`calc(100% - ${(0,Oe.zA)(a(e.paddingXS).mul(2).equal())})`,backgroundColor:e.colorBgMask,opacity:0,transition:`all ${e.motionDurationSlow}`,content:'" "'}},[`${s}:hover`]:{[`&::before, ${s}-actions`]:{opacity:1}},[`${s}-actions`]:{position:"absolute",insetInlineStart:0,zIndex:10,width:"100%",whiteSpace:"nowrap",textAlign:"center",opacity:0,transition:`all ${e.motionDurationSlow}`,[`\n            ${n}-eye,\n            ${n}-download,\n            ${n}-delete\n          `]:{zIndex:10,width:o,margin:`0 ${(0,Oe.zA)(e.marginXXS)}`,fontSize:o,cursor:"pointer",transition:`all ${e.motionDurationSlow}`,color:r,"&:hover":{color:r},svg:{verticalAlign:"baseline"}}},[`${s}-thumbnail, ${s}-thumbnail img`]:{position:"static",display:"block",width:"100%",height:"100%",objectFit:"contain"},[`${s}-name`]:{display:"none",textAlign:"center"},[`${s}-file + ${s}-name`]:{position:"absolute",bottom:e.margin,display:"block",width:`calc(100% - ${(0,Oe.zA)(a(e.paddingXS).mul(2).equal())})`},[`${s}-uploading`]:{[`&${s}`]:{backgroundColor:e.colorFillAlter},[`&::before, ${n}-eye, ${n}-download, ${n}-delete`]:{display:"none"}},[`${s}-progress`]:{bottom:e.marginXL,width:`calc(100% - ${(0,Oe.zA)(a(e.paddingXS).mul(2).equal())})`,paddingInlineStart:0}}}),[`${t}-wrapper${t}-picture-circle-wrapper`]:{[`${t}${t}-select`]:{borderRadius:"50%"}}}};var je=e=>{const{componentCls:t}=e;return{[`${t}-rtl`]:{direction:"rtl"}}};const ze=e=>{const{componentCls:t,colorTextDisabled:n}=e;return{[`${t}-wrapper`]:Object.assign(Object.assign({},(0,Ee.dF)(e)),{[t]:{outline:0,"input[type='file']":{cursor:"pointer"}},[`${t}-select`]:{display:"inline-block"},[`${t}-hidden`]:{display:"none"},[`${t}-disabled`]:{color:n,cursor:"not-allowed"}})}};var De=(0,ke.OF)("Upload",(e=>{const{fontSizeHeading3:t,fontHeight:n,lineWidth:o,controlHeightLG:r,calc:a}=e,i=(0,$e.oX)(e,{uploadThumbnailSize:a(t).mul(2).equal(),uploadProgressOffset:a(a(n).div(2)).add(o).equal(),uploadPicCardSize:a(r).mul(2.55).equal()});return[ze(i),Ie(i),Re(i),Me(i),Se(i),Te(i),je(i),(0,Ce.A)(i)]}),(e=>({actionsColor:e.colorTextDescription}))),Le={icon:function(e,t){return{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M534 352V136H232v752h560V394H576a42 42 0 01-42-42z",fill:t}},{tag:"path",attrs:{d:"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM602 137.8L790.2 326H602V137.8zM792 888H232V136h302v216a42 42 0 0042 42h216v494z",fill:e}}]}},name:"file",theme:"twotone"},Fe=n(7064),Ge=function(e,t){return o.createElement(Fe.A,(0,B.A)({},e,{ref:t,icon:Le}))};var Ue=o.forwardRef(Ge),qe=n(3567),We={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z"}}]},name:"paper-clip",theme:"outlined"},Be=function(e,t){return o.createElement(Fe.A,(0,B.A)({},e,{ref:t,icon:We}))};var He=o.forwardRef(Be),Ve={icon:function(e,t){return{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2z",fill:e}},{tag:"path",attrs:{d:"M424.6 765.8l-150.1-178L136 752.1V792h752v-30.4L658.1 489z",fill:t}},{tag:"path",attrs:{d:"M136 652.7l132.4-157c3.2-3.8 9-3.8 12.2 0l144 170.7L652 396.8c3.2-3.8 9-3.8 12.2 0L888 662.2V232H136v420.7zM304 280a88 88 0 110 176 88 88 0 010-176z",fill:t}},{tag:"path",attrs:{d:"M276 368a28 28 0 1056 0 28 28 0 10-56 0z",fill:t}},{tag:"path",attrs:{d:"M304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z",fill:e}}]}},name:"picture",theme:"twotone"},Xe=function(e,t){return o.createElement(Fe.A,(0,B.A)({},e,{ref:t,icon:Ve}))};var Ye=o.forwardRef(Xe),Ke=n(754),Je=n(9853),Qe=n(7447),Ze=n(3723),et=n(682);function tt(e){return Object.assign(Object.assign({},e),{lastModified:e.lastModified,lastModifiedDate:e.lastModifiedDate,name:e.name,size:e.size,type:e.type,uid:e.uid,percent:0,originFileObj:e})}function nt(e,t){const n=(0,a.A)(t),o=n.findIndex((t=>{let{uid:n}=t;return n===e.uid}));return-1===o?n.push(e):n[o]=e,n}function ot(e,t){const n=void 0!==e.uid?"uid":"name";return t.filter((t=>t[n]===e[n]))[0]}const rt=e=>0===e.indexOf("image/"),at=e=>{if(e.type&&!e.thumbUrl)return rt(e.type);const t=e.thumbUrl||e.url||"",n=function(){const e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").split("/"),t=e[e.length-1].split(/#|\?/)[0];return(/\.[^./\\]*$/.exec(t)||[""])[0]}(t);return!(!/^data:image\//.test(t)&&!/(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico|heic|heif)$/i.test(n))||!/^data:/.test(t)&&!n},it=200;function st(e){return new Promise((t=>{if(!e.type||!rt(e.type))return void t("");const n=document.createElement("canvas");n.width=it,n.height=it,n.style.cssText="position: fixed; left: 0; top: 0; width: 200px; height: 200px; z-index: 9999; display: none;",document.body.appendChild(n);const o=n.getContext("2d"),r=new Image;if(r.onload=()=>{const{width:e,height:a}=r;let i=it,s=it,l=0,c=0;e>a?(s=a*(it/e),c=-(s-i)/2):(i=e*(it/a),l=-(i-s)/2),o.drawImage(r,l,c,i,s);const p=n.toDataURL();document.body.removeChild(n),window.URL.revokeObjectURL(r.src),t(p)},r.crossOrigin="anonymous",e.type.startsWith("image/svg+xml")){const t=new FileReader;t.onload=()=>{t.result&&"string"==typeof t.result&&(r.src=t.result)},t.readAsDataURL(e)}else if(e.type.startsWith("image/gif")){const n=new FileReader;n.onload=()=>{n.result&&t(n.result)},n.readAsDataURL(e)}else r.src=window.URL.createObjectURL(e)}))}var lt={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"}}]},name:"delete",theme:"outlined"},ct=function(e,t){return o.createElement(Fe.A,(0,B.A)({},e,{ref:t,icon:lt}))};var pt=o.forwardRef(ct),dt={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z"}}]},name:"download",theme:"outlined"},mt=function(e,t){return o.createElement(Fe.A,(0,B.A)({},e,{ref:t,icon:dt}))};var ut=o.forwardRef(mt),gt=n(234),ft=n(2616),ht=n(8811),vt=n(6067),yt=n(6029),bt=n(7852),_t={percent:0,prefixCls:"rc-progress",strokeColor:"#2db7f5",strokeLinecap:"round",strokeWidth:1,trailColor:"#D9D9D9",trailWidth:1,gapPosition:"bottom"},xt=function(){var e=(0,o.useRef)([]),t=(0,o.useRef)(null);return(0,o.useEffect)((function(){var n=Date.now(),o=!1;e.current.forEach((function(e){if(e){o=!0;var r=e.style;r.transitionDuration=".3s, .3s, .3s, .06s",t.current&&n-t.current<100&&(r.transitionDuration="0s, 0s")}})),o&&(t.current=Date.now())})),e.current};var wt=n(5544),At=n(998),Et=0,Ct=(0,At.A)();var kt=function(e){var t=o.useState(),n=(0,wt.A)(t,2),r=n[0],a=n[1];return o.useEffect((function(){var e;a("rc_progress_".concat((Ct?(e=Et,Et+=1):e="TEST_OR_SSR",e)))}),[]),e||r},$t=function(e){var t=e.bg,n=e.children;return o.createElement("div",{style:{width:"100%",height:"100%",background:t}},n)};function Ot(e,t){return Object.keys(e).map((function(n){var o=parseFloat(n),r="".concat(Math.floor(o*t),"%");return"".concat(e[n]," ").concat(r)}))}var It=o.forwardRef((function(e,t){var n=e.prefixCls,r=e.color,a=e.gradientId,i=e.radius,s=e.style,l=e.ptg,c=e.strokeLinecap,p=e.strokeWidth,d=e.size,m=e.gapDegree,u=r&&"object"===(0,ee.A)(r),g=u?"#FFF":void 0,f=d/2,h=o.createElement("circle",{className:"".concat(n,"-circle-path"),r:i,cx:f,cy:f,stroke:g,strokeLinecap:c,strokeWidth:p,opacity:0===l?0:1,style:s,ref:t});if(!u)return h;var v="".concat(a,"-conic"),y=m?"".concat(180+m/2,"deg"):"0deg",b=Ot(r,(360-m)/360),_=Ot(r,1),x="conic-gradient(from ".concat(y,", ").concat(b.join(", "),")"),w="linear-gradient(to ".concat(m?"bottom":"top",", ").concat(_.join(", "),")");return o.createElement(o.Fragment,null,o.createElement("mask",{id:v},h),o.createElement("foreignObject",{x:0,y:0,width:d,height:d,mask:"url(#".concat(v,")")},o.createElement($t,{bg:w},o.createElement($t,{bg:x}))))})),St=100,Nt=function(e,t,n,o,r,a,i,s,l,c){var p=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,d=n/100*360*((360-a)/360),m=0===a?0:{bottom:0,top:180,left:90,right:-90}[i],u=(100-o)/100*t;"round"===l&&100!==o&&(u+=c/2)>=t&&(u=t-.01);return{stroke:"string"==typeof s?s:void 0,strokeDasharray:"".concat(t,"px ").concat(e),strokeDashoffset:u+p,transform:"rotate(".concat(r+d+m,"deg)"),transformOrigin:"".concat(50,"px ").concat(50,"px"),transition:"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s",fillOpacity:0}},Tt=["id","prefixCls","steps","strokeWidth","trailWidth","gapDegree","gapPosition","trailColor","strokeLinecap","style","className","strokeColor","percent"];function Pt(e){var t=null!=e?e:[];return Array.isArray(t)?t:[t]}var Rt=function(e){var t,n,r,a=(0,Q.A)((0,Q.A)({},_t),e),i=a.id,s=a.prefixCls,l=a.steps,c=a.strokeWidth,p=a.trailWidth,d=a.gapDegree,m=void 0===d?0:d,u=a.gapPosition,g=a.trailColor,f=a.strokeLinecap,h=a.style,v=a.className,y=a.strokeColor,b=a.percent,_=(0,Z.A)(a,Tt),x=kt(i),w="".concat(x,"-gradient"),A=50-c/2,E=2*Math.PI*A,C=m>0?90+m/2:-90,k=E*((360-m)/360),$="object"===(0,ee.A)(l)?l:{count:l,gap:2},O=$.count,I=$.gap,S=Pt(b),N=Pt(y),T=N.find((function(e){return e&&"object"===(0,ee.A)(e)})),P=T&&"object"===(0,ee.A)(T)?"butt":f,R=Nt(E,k,0,100,C,m,u,g,P,c),M=xt();return o.createElement("svg",(0,B.A)({className:W()("".concat(s,"-circle"),v),viewBox:"0 0 ".concat(St," ").concat(St),style:h,id:i,role:"presentation"},_),!O&&o.createElement("circle",{className:"".concat(s,"-circle-trail"),r:A,cx:50,cy:50,stroke:g,strokeLinecap:P,strokeWidth:p||c,style:R}),O?(t=Math.round(O*(S[0]/100)),n=100/O,r=0,new Array(O).fill(null).map((function(e,a){var i=a<=t-1?N[0]:g,l=i&&"object"===(0,ee.A)(i)?"url(#".concat(w,")"):void 0,p=Nt(E,k,r,n,C,m,u,i,"butt",c,I);return r+=100*(k-p.strokeDashoffset+I)/k,o.createElement("circle",{key:a,className:"".concat(s,"-circle-path"),r:A,cx:50,cy:50,stroke:l,strokeWidth:c,opacity:1,style:p,ref:function(e){M[a]=e}})}))):function(){var e=0;return S.map((function(t,n){var r=N[n]||N[N.length-1],a=Nt(E,k,e,t,C,m,u,r,P,c);return e+=t,o.createElement(It,{key:n,color:r,ptg:t,radius:A,prefixCls:s,gradientId:w,style:a,strokeLinecap:P,strokeWidth:c,gapDegree:m,ref:function(e){M[n]=e},size:St})})).reverse()}())};function Mt(e){return!e||e<0?0:e>100?100:e}function jt(e){let{success:t,successPercent:n}=e,o=n;return t&&"progress"in t&&(o=t.progress),t&&"percent"in t&&(o=t.percent),o}const zt=(e,t,n)=>{var o,r,a,i;let s=-1,l=-1;if("step"===t){const t=n.steps,o=n.strokeWidth;"string"==typeof e||void 0===e?(s="small"===e?2:14,l=null!=o?o:8):"number"==typeof e?[s,l]=[e,e]:[s=14,l=8]=Array.isArray(e)?e:[e.width,e.height],s*=t}else if("line"===t){const t=null==n?void 0:n.strokeWidth;"string"==typeof e||void 0===e?l=t||("small"===e?6:8):"number"==typeof e?[s,l]=[e,e]:[s=-1,l=8]=Array.isArray(e)?e:[e.width,e.height]}else"circle"!==t&&"dashboard"!==t||("string"==typeof e||void 0===e?[s,l]="small"===e?[60,60]:[120,120]:"number"==typeof e?[s,l]=[e,e]:Array.isArray(e)&&(s=null!==(r=null!==(o=e[0])&&void 0!==o?o:e[1])&&void 0!==r?r:120,l=null!==(i=null!==(a=e[0])&&void 0!==a?a:e[1])&&void 0!==i?i:120));return[s,l]};var Dt=e=>{const{prefixCls:t,trailColor:n=null,strokeLinecap:r="round",gapPosition:a,gapDegree:i,width:s=120,type:l,children:c,success:p,size:m=s,steps:u}=e,[g,f]=zt(m,"circle");let{strokeWidth:h}=e;void 0===h&&(h=Math.max((e=>3/e*100)(g),6));const v={width:g,height:f,fontSize:.15*g+6},y=o.useMemo((()=>i||0===i?i:"dashboard"===l?75:void 0),[i,l]),b=(e=>{let{percent:t,success:n,successPercent:o}=e;const r=Mt(jt({success:n,successPercent:o}));return[r,Mt(Mt(t)-r)]})(e),_=a||"dashboard"===l&&"bottom"||void 0,x="[object Object]"===Object.prototype.toString.call(e.strokeColor),w=(e=>{let{success:t={},strokeColor:n}=e;const{strokeColor:o}=t;return[o||Pe.uy.green,n||null]})({success:p,strokeColor:e.strokeColor}),A=W()(`${t}-inner`,{[`${t}-circle-gradient`]:x}),E=o.createElement(Rt,{steps:u,percent:u?b[1]:b,strokeWidth:h,trailWidth:h,strokeColor:u?w[1]:w,strokeLinecap:r,trailColor:n,prefixCls:t,gapDegree:y,gapPosition:_}),C=g<=20,k=o.createElement("div",{className:A,style:v},E,!C&&c);return C?o.createElement(d.A,{title:c},k):k};const Lt="--progress-line-stroke-color",Ft="--progress-percent",Gt=e=>{const t=e?"100%":"-100%";return new Oe.Mo(`antProgress${e?"RTL":"LTR"}Active`,{"0%":{transform:`translateX(${t}) scaleX(0)`,opacity:.1},"20%":{transform:`translateX(${t}) scaleX(0)`,opacity:.5},to:{transform:"translateX(0) scaleX(1)",opacity:0}})},Ut=e=>{const{componentCls:t,iconCls:n}=e;return{[t]:Object.assign(Object.assign({},(0,Ee.dF)(e)),{display:"inline-block","&-rtl":{direction:"rtl"},"&-line":{position:"relative",width:"100%",fontSize:e.fontSize},[`${t}-outer`]:{display:"inline-flex",alignItems:"center",width:"100%"},[`${t}-inner`]:{position:"relative",display:"inline-block",width:"100%",flex:1,overflow:"hidden",verticalAlign:"middle",backgroundColor:e.remainingColor,borderRadius:e.lineBorderRadius},[`${t}-inner:not(${t}-circle-gradient)`]:{[`${t}-circle-path`]:{stroke:e.defaultColor}},[`${t}-success-bg, ${t}-bg`]:{position:"relative",background:e.defaultColor,borderRadius:e.lineBorderRadius,transition:`all ${e.motionDurationSlow} ${e.motionEaseInOutCirc}`},[`${t}-layout-bottom`]:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",[`${t}-text`]:{width:"max-content",marginInlineStart:0,marginTop:e.marginXXS}},[`${t}-bg`]:{overflow:"hidden","&::after":{content:'""',background:{_multi_value_:!0,value:["inherit",`var(${Lt})`]},height:"100%",width:`calc(1 / var(${Ft}) * 100%)`,display:"block"},[`&${t}-bg-inner`]:{minWidth:"max-content","&::after":{content:"none"},[`${t}-text-inner`]:{color:e.colorWhite,[`&${t}-text-bright`]:{color:"rgba(0, 0, 0, 0.45)"}}}},[`${t}-success-bg`]:{position:"absolute",insetBlockStart:0,insetInlineStart:0,backgroundColor:e.colorSuccess},[`${t}-text`]:{display:"inline-block",marginInlineStart:e.marginXS,color:e.colorText,lineHeight:1,width:"2em",whiteSpace:"nowrap",textAlign:"start",verticalAlign:"middle",wordBreak:"normal",[n]:{fontSize:e.fontSize},[`&${t}-text-outer`]:{width:"max-content"},[`&${t}-text-outer${t}-text-start`]:{width:"max-content",marginInlineStart:0,marginInlineEnd:e.marginXS}},[`${t}-text-inner`]:{display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%",marginInlineStart:0,padding:`0 ${(0,Oe.zA)(e.paddingXXS)}`,[`&${t}-text-start`]:{justifyContent:"start"},[`&${t}-text-end`]:{justifyContent:"end"}},[`&${t}-status-active`]:{[`${t}-bg::before`]:{position:"absolute",inset:0,backgroundColor:e.colorBgContainer,borderRadius:e.lineBorderRadius,opacity:0,animationName:Gt(),animationDuration:e.progressActiveMotionDuration,animationTimingFunction:e.motionEaseOutQuint,animationIterationCount:"infinite",content:'""'}},[`&${t}-rtl${t}-status-active`]:{[`${t}-bg::before`]:{animationName:Gt(!0)}},[`&${t}-status-exception`]:{[`${t}-bg`]:{backgroundColor:e.colorError},[`${t}-text`]:{color:e.colorError}},[`&${t}-status-exception ${t}-inner:not(${t}-circle-gradient)`]:{[`${t}-circle-path`]:{stroke:e.colorError}},[`&${t}-status-success`]:{[`${t}-bg`]:{backgroundColor:e.colorSuccess},[`${t}-text`]:{color:e.colorSuccess}},[`&${t}-status-success ${t}-inner:not(${t}-circle-gradient)`]:{[`${t}-circle-path`]:{stroke:e.colorSuccess}}})}},qt=e=>{const{componentCls:t,iconCls:n}=e;return{[t]:{[`${t}-circle-trail`]:{stroke:e.remainingColor},[`&${t}-circle ${t}-inner`]:{position:"relative",lineHeight:1,backgroundColor:"transparent"},[`&${t}-circle ${t}-text`]:{position:"absolute",insetBlockStart:"50%",insetInlineStart:0,width:"100%",margin:0,padding:0,color:e.circleTextColor,fontSize:e.circleTextFontSize,lineHeight:1,whiteSpace:"normal",textAlign:"center",transform:"translateY(-50%)",[n]:{fontSize:e.circleIconFontSize}},[`${t}-circle&-status-exception`]:{[`${t}-text`]:{color:e.colorError}},[`${t}-circle&-status-success`]:{[`${t}-text`]:{color:e.colorSuccess}}},[`${t}-inline-circle`]:{lineHeight:1,[`${t}-inner`]:{verticalAlign:"bottom"}}}},Wt=e=>{const{componentCls:t}=e;return{[t]:{[`${t}-steps`]:{display:"inline-block","&-outer":{display:"flex",flexDirection:"row",alignItems:"center"},"&-item":{flexShrink:0,minWidth:e.progressStepMinWidth,marginInlineEnd:e.progressStepMarginInlineEnd,backgroundColor:e.remainingColor,transition:`all ${e.motionDurationSlow}`,"&-active":{backgroundColor:e.defaultColor}}}}}},Bt=e=>{const{componentCls:t,iconCls:n}=e;return{[t]:{[`${t}-small&-line, ${t}-small&-line ${t}-text ${n}`]:{fontSize:e.fontSizeSM}}}};var Ht=(0,ke.OF)("Progress",(e=>{const t=e.calc(e.marginXXS).div(2).equal(),n=(0,$e.oX)(e,{progressStepMarginInlineEnd:t,progressStepMinWidth:t,progressActiveMotionDuration:"2.4s"});return[Ut(n),qt(n),Wt(n),Bt(n)]}),(e=>({circleTextColor:e.colorText,defaultColor:e.colorInfo,remainingColor:e.colorFillSecondary,lineBorderRadius:100,circleTextFontSize:"1em",circleIconFontSize:e.fontSize/e.fontSizeSM+"em"}))),Vt=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};const Xt=(e,t)=>{const{from:n=Pe.uy.blue,to:o=Pe.uy.blue,direction:r=("rtl"===t?"to left":"to right")}=e,a=Vt(e,["from","to","direction"]);if(0!==Object.keys(a).length){const e=`linear-gradient(${r}, ${(e=>{let t=[];return Object.keys(e).forEach((n=>{const o=parseFloat(n.replace(/%/g,""));Number.isNaN(o)||t.push({key:o,value:e[n]})})),t=t.sort(((e,t)=>e.key-t.key)),t.map((e=>{let{key:t,value:n}=e;return`${n} ${t}%`})).join(", ")})(a)})`;return{background:e,[Lt]:e}}const i=`linear-gradient(${r}, ${n}, ${o})`;return{background:i,[Lt]:i}};var Yt=e=>{const{prefixCls:t,direction:n,percent:r,size:a,strokeWidth:i,strokeColor:s,strokeLinecap:l="round",children:c,trailColor:p=null,percentPosition:d,success:m}=e,{align:u,type:g}=d,f=s&&"string"!=typeof s?Xt(s,n):{[Lt]:s,background:s},h="square"===l||"butt"===l?0:void 0,v=null!=a?a:[-1,i||("small"===a?6:8)],[y,b]=zt(v,"line",{strokeWidth:i});const _={backgroundColor:p||void 0,borderRadius:h},x=Object.assign(Object.assign({width:`${Mt(r)}%`,height:b,borderRadius:h},f),{[Ft]:Mt(r)/100}),w=jt(e),A={width:`${Mt(w)}%`,height:b,borderRadius:h,backgroundColor:null==m?void 0:m.strokeColor},E={width:y<0?"100%":y},C=o.createElement("div",{className:`${t}-inner`,style:_},o.createElement("div",{className:W()(`${t}-bg`,`${t}-bg-${g}`),style:x},"inner"===g&&c),void 0!==w&&o.createElement("div",{className:`${t}-success-bg`,style:A})),k="outer"===g&&"start"===u,$="outer"===g&&"end"===u;return"outer"===g&&"center"===u?o.createElement("div",{className:`${t}-layout-bottom`},C,c):o.createElement("div",{className:`${t}-outer`,style:E},k&&c,C,$&&c)};var Kt=e=>{const{size:t,steps:n,rounding:r=Math.round,percent:a=0,strokeWidth:i=8,strokeColor:s,trailColor:l=null,prefixCls:c,children:p}=e,d=r(n*(a/100)),m=null!=t?t:["small"===t?2:14,i],[u,g]=zt(m,"step",{steps:n,strokeWidth:i}),f=u/n,h=Array.from({length:n});for(let v=0;v<n;v++){const e=Array.isArray(s)?s[v]:s;h[v]=o.createElement("div",{key:v,className:W()(`${c}-steps-item`,{[`${c}-steps-item-active`]:v<=d-1}),style:{backgroundColor:v<=d-1?e:l,width:f,height:g}})}return o.createElement("div",{className:`${c}-steps-outer`},h,p)},Jt=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};const Qt=["normal","exception","active","success"],Zt=o.forwardRef(((e,t)=>{const{prefixCls:n,className:r,rootClassName:a,steps:i,strokeColor:s,percent:l=0,size:c="default",showInfo:p=!0,type:d="line",status:m,format:u,style:g,percentPosition:f={}}=e,h=Jt(e,["prefixCls","className","rootClassName","steps","strokeColor","percent","size","showInfo","type","status","format","style","percentPosition"]),{align:v="end",type:y="outer"}=f,b=Array.isArray(s)?s[0]:s,_="string"==typeof s||Array.isArray(s)?s:void 0,x=o.useMemo((()=>{if(b){const e="string"==typeof b?b:Object.values(b)[0];return new ft.Y(e).isLight()}return!1}),[s]),w=o.useMemo((()=>{var t,n;const o=jt(e);return parseInt(void 0!==o?null===(t=null!=o?o:0)||void 0===t?void 0:t.toString():null===(n=null!=l?l:0)||void 0===n?void 0:n.toString(),10)}),[l,e.success,e.successPercent]),A=o.useMemo((()=>!Qt.includes(m)&&w>=100?"success":m||"normal"),[m,w]),{getPrefixCls:E,direction:C,progress:k}=o.useContext(_e.QO),$=E("progress",n),[O,I,S]=Ht($),N="line"===d,T=N&&!i,P=o.useMemo((()=>{if(!p)return null;const t=jt(e);let n;const r=N&&x&&"inner"===y;return"inner"===y||u||"exception"!==A&&"success"!==A?n=(u||(e=>`${e}%`))(Mt(l),Mt(t)):"exception"===A?n=N?o.createElement(yt.A,null):o.createElement(bt.A,null):"success"===A&&(n=N?o.createElement(ht.A,null):o.createElement(vt.A,null)),o.createElement("span",{className:W()(`${$}-text`,{[`${$}-text-bright`]:r,[`${$}-text-${v}`]:T,[`${$}-text-${y}`]:T}),title:"string"==typeof n?n:void 0},n)}),[p,l,w,A,d,$,u]);let R;"line"===d?R=i?o.createElement(Kt,Object.assign({},e,{strokeColor:_,prefixCls:$,steps:"object"==typeof i?i.count:i}),P):o.createElement(Yt,Object.assign({},e,{strokeColor:b,prefixCls:$,direction:C,percentPosition:{align:v,type:y}}),P):"circle"!==d&&"dashboard"!==d||(R=o.createElement(Dt,Object.assign({},e,{strokeColor:b,prefixCls:$,progressStatus:A}),P));const M=W()($,`${$}-status-${A}`,{[`${$}-${"dashboard"===d?"circle":d}`]:"line"!==d,[`${$}-inline-circle`]:"circle"===d&&zt(c,"circle")[0]<=20,[`${$}-line`]:T,[`${$}-line-align-${v}`]:T,[`${$}-line-position-${y}`]:T,[`${$}-steps`]:i,[`${$}-show-info`]:p,[`${$}-${c}`]:"string"==typeof c,[`${$}-rtl`]:"rtl"===C},null==k?void 0:k.className,r,a,I,S);return O(o.createElement("div",Object.assign({ref:t,style:Object.assign(Object.assign({},null==k?void 0:k.style),g),className:M,role:"progressbar","aria-valuenow":w,"aria-valuemin":0,"aria-valuemax":100},(0,Je.A)(h,["trailColor","strokeWidth","width","gapDegree","gapPosition","strokeLinecap","success","successPercent"])),R))}));var en=Zt;const tn=o.forwardRef(((e,t)=>{let{prefixCls:n,className:r,style:a,locale:i,listType:s,file:l,items:c,progress:p,iconRender:m,actionIconRender:u,itemRender:g,isImgUrl:f,showPreviewIcon:h,showRemoveIcon:v,showDownloadIcon:y,previewIcon:b,removeIcon:_,downloadIcon:x,extra:w,onPreview:A,onDownload:E,onClose:C}=e;var k,$;const{status:O}=l,[I,S]=o.useState(O);o.useEffect((()=>{"removed"!==O&&S(O)}),[O]);const[N,T]=o.useState(!1);o.useEffect((()=>{const e=setTimeout((()=>{T(!0)}),300);return()=>{clearTimeout(e)}}),[]);const P=m(l);let R=o.createElement("div",{className:`${n}-icon`},P);if("picture"===s||"picture-card"===s||"picture-circle"===s)if("uploading"===I||!l.thumbUrl&&!l.url){const e=W()(`${n}-list-item-thumbnail`,{[`${n}-list-item-file`]:"uploading"!==I});R=o.createElement("div",{className:e},P)}else{const e=(null==f?void 0:f(l))?o.createElement("img",{src:l.thumbUrl||l.url,alt:l.name,className:`${n}-list-item-image`,crossOrigin:l.crossOrigin}):P,t=W()(`${n}-list-item-thumbnail`,{[`${n}-list-item-file`]:f&&!f(l)});R=o.createElement("a",{className:t,onClick:e=>A(l,e),href:l.url||l.thumbUrl,target:"_blank",rel:"noopener noreferrer"},e)}const M=W()(`${n}-list-item`,`${n}-list-item-${I}`),j="string"==typeof l.linkProps?JSON.parse(l.linkProps):l.linkProps,z=("function"==typeof v?v(l):v)?u(("function"==typeof _?_(l):_)||o.createElement(pt,null),(()=>C(l)),n,i.removeFile,!0):null,D=("function"==typeof y?y(l):y)&&"done"===I?u(("function"==typeof x?x(l):x)||o.createElement(ut,null),(()=>E(l)),n,i.downloadFile):null,L="picture-card"!==s&&"picture-circle"!==s&&o.createElement("span",{key:"download-delete",className:W()(`${n}-list-item-actions`,{picture:"picture"===s})},D,z),F="function"==typeof w?w(l):w,G=F&&o.createElement("span",{className:`${n}-list-item-extra`},F),U=W()(`${n}-list-item-name`),q=l.url?o.createElement("a",Object.assign({key:"view",target:"_blank",rel:"noopener noreferrer",className:U,title:l.name},j,{href:l.url,onClick:e=>A(l,e)}),l.name,G):o.createElement("span",{key:"view",className:U,onClick:e=>A(l,e),title:l.name},l.name,G),B=("function"==typeof h?h(l):h)&&(l.url||l.thumbUrl)?o.createElement("a",{href:l.url||l.thumbUrl,target:"_blank",rel:"noopener noreferrer",onClick:e=>A(l,e),title:i.previewFile},"function"==typeof b?b(l):b||o.createElement(gt.A,null)):null,H=("picture-card"===s||"picture-circle"===s)&&"uploading"!==I&&o.createElement("span",{className:`${n}-list-item-actions`},B,"done"===I&&D,z),{getPrefixCls:V}=o.useContext(_e.QO),X=V(),Y=o.createElement("div",{className:M},R,q,L,H,N&&o.createElement(Ke.Ay,{motionName:`${X}-fade`,visible:"uploading"===I,motionDeadline:2e3},(e=>{let{className:t}=e;const r="percent"in l?o.createElement(en,Object.assign({},p,{type:"line",percent:l.percent,"aria-label":l["aria-label"],"aria-labelledby":l["aria-labelledby"]})):null;return o.createElement("div",{className:W()(`${n}-list-item-progress`,t)},r)}))),K=l.response&&"string"==typeof l.response?l.response:(null===(k=l.error)||void 0===k?void 0:k.statusText)||(null===($=l.error)||void 0===$?void 0:$.message)||i.uploadError,J="error"===I?o.createElement(d.A,{title:K,getPopupContainer:e=>e.parentNode},Y):Y;return o.createElement("div",{className:W()(`${n}-list-item-container`,r),style:a,ref:t},g?g(J,l,c,{download:E.bind(null,l),preview:A.bind(null,l),remove:C.bind(null,l)}):J)}));var nn=tn;const on=(e,t)=>{const{listType:n="text",previewFile:r=st,onPreview:i,onDownload:s,onRemove:l,locale:c,iconRender:p,isImageUrl:d=at,prefixCls:u,items:g=[],showPreviewIcon:f=!0,showRemoveIcon:h=!0,showDownloadIcon:v=!1,removeIcon:y,previewIcon:b,downloadIcon:_,extra:x,progress:w={size:[-1,2],showInfo:!1},appendAction:A,appendActionVisible:E=!0,itemRender:C,disabled:k}=e,$=(0,Qe.A)(),[O,I]=o.useState(!1),S=["picture-card","picture-circle"].includes(n);o.useEffect((()=>{n.startsWith("picture")&&(g||[]).forEach((e=>{(e.originFileObj instanceof File||e.originFileObj instanceof Blob)&&void 0===e.thumbUrl&&(e.thumbUrl="",null==r||r(e.originFileObj).then((t=>{e.thumbUrl=t||"",$()})))}))}),[n,g,r]),o.useEffect((()=>{I(!0)}),[]);const N=(e,t)=>{if(i)return null==t||t.preventDefault(),i(e)},T=e=>{"function"==typeof s?s(e):e.url&&window.open(e.url)},P=e=>{null==l||l(e)},R=e=>{if(p)return p(e,n);const t="uploading"===e.status;if(n.startsWith("picture")){const r="picture"===n?o.createElement(qe.A,null):c.uploading,a=(null==d?void 0:d(e))?o.createElement(Ye,null):o.createElement(Ue,null);return t?r:a}return t?o.createElement(qe.A,null):o.createElement(He,null)},M=(e,t,n,r,a)=>{const i={type:"text",size:"small",title:r,onClick:n=>{var r,a;t(),o.isValidElement(e)&&(null===(a=(r=e.props).onClick)||void 0===a||a.call(r,n))},className:`${n}-list-item-action`};return a&&(i.disabled=k),o.isValidElement(e)?o.createElement(m.Ay,Object.assign({},i,{icon:(0,et.Ob)(e,Object.assign(Object.assign({},e.props),{onClick:()=>{}}))})):o.createElement(m.Ay,Object.assign({},i),o.createElement("span",null,e))};o.useImperativeHandle(t,(()=>({handlePreview:N,handleDownload:T})));const{getPrefixCls:j}=o.useContext(_e.QO),z=j("upload",u),D=j(),L=W()(`${z}-list`,`${z}-list-${n}`),F=o.useMemo((()=>(0,Je.A)((0,Ze.A)(D),["onAppearEnd","onEnterEnd","onLeaveEnd"])),[D]),G=Object.assign(Object.assign({},S?{}:F),{motionDeadline:2e3,motionName:`${z}-${S?"animate-inline":"animate"}`,keys:(0,a.A)(g.map((e=>({key:e.uid,file:e})))),motionAppear:O});return o.createElement("div",{className:L},o.createElement(Ke.aF,Object.assign({},G,{component:!1}),(e=>{let{key:t,file:r,className:a,style:i}=e;return o.createElement(nn,{key:t,locale:c,prefixCls:z,className:a,style:i,file:r,items:g,progress:w,listType:n,isImgUrl:d,showPreviewIcon:f,showRemoveIcon:h,showDownloadIcon:v,removeIcon:y,previewIcon:b,downloadIcon:_,extra:x,iconRender:R,actionIconRender:M,itemRender:C,onPreview:N,onDownload:T,onClose:P})})),A&&o.createElement(Ke.Ay,Object.assign({},G,{visible:E,forceRender:!0}),(e=>{let{className:t,style:n}=e;return(0,et.Ob)(A,(e=>({className:W()(e.className,t),style:Object.assign(Object.assign(Object.assign({},n),{pointerEvents:t?"none":void 0}),e.style)})))})))};var rn=o.forwardRef(on),an=function(e,t,n,o){return new(n||(n=Promise))((function(r,a){function i(e){try{l(o.next(e))}catch(t){a(t)}}function s(e){try{l(o.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))};const sn=`__LIST_IGNORE_${Date.now()}__`,ln=(e,t)=>{const{fileList:n,defaultFileList:r,onRemove:i,showUploadList:s=!0,listType:l="text",onPreview:c,onDownload:p,onChange:d,onDrop:m,previewFile:u,disabled:g,locale:f,iconRender:h,isImageUrl:v,progress:y,prefixCls:b,className:_,type:x="select",children:w,style:A,itemRender:E,maxCount:C,data:k={},multiple:$=!1,hasControlInside:O=!0,action:I="",accept:S="",supportServerRender:N=!0,rootClassName:T}=e,P=o.useContext(xe.A),R=null!=g?g:P,[M,j]=(0,be.A)(r||[],{value:n,postState:e=>null!=e?e:[]}),[z,D]=o.useState("drop"),L=o.useRef(null),F=o.useRef(null);o.useMemo((()=>{const e=Date.now();(n||[]).forEach(((t,n)=>{t.uid||Object.isFrozen(t)||(t.uid=`__AUTO__${e}_${n}__`)}))}),[n]);const G=(e,t,n)=>{let o=(0,a.A)(t),r=!1;1===C?o=o.slice(-1):C&&(r=o.length>C,o=o.slice(0,C)),(0,U.flushSync)((()=>{j(o)}));const i={file:e,fileList:o};n&&(i.event=n),r&&"removed"!==e.status&&!o.some((t=>t.uid===e.uid))||(0,U.flushSync)((()=>{null==d||d(i)}))},q=e=>{const t=e.filter((e=>!e.file[sn]));if(!t.length)return;const n=t.map((e=>tt(e.file)));let o=(0,a.A)(M);n.forEach((e=>{o=nt(e,o)})),n.forEach(((e,n)=>{let r=e;if(t[n].parsedFile)e.status="uploading";else{const{originFileObj:t}=e;let n;try{n=new File([t],t.name,{type:t.type})}catch(a){n=new Blob([t],{type:t.type}),n.name=t.name,n.lastModifiedDate=new Date,n.lastModified=(new Date).getTime()}n.uid=e.uid,r=n}G(r,o)}))},B=(e,t,n)=>{try{"string"==typeof e&&(e=JSON.parse(e))}catch(a){}if(!ot(t,M))return;const o=tt(t);o.status="done",o.percent=100,o.response=e,o.xhr=n;const r=nt(o,M);G(o,r)},H=(e,t)=>{if(!ot(t,M))return;const n=tt(t);n.status="uploading",n.percent=e.percent;const o=nt(n,M);G(n,o,e)},V=(e,t,n)=>{if(!ot(n,M))return;const o=tt(n);o.error=e,o.response=t,o.status="error";const r=nt(o,M);G(o,r)},X=e=>{let t;Promise.resolve("function"==typeof i?i(e):i).then((n=>{var o;if(!1===n)return;const r=function(e,t){const n=void 0!==e.uid?"uid":"name",o=t.filter((t=>t[n]!==e[n]));return o.length===t.length?null:o}(e,M);r&&(t=Object.assign(Object.assign({},e),{status:"removed"}),null==M||M.forEach((e=>{const n=void 0!==t.uid?"uid":"name";e[n]!==t[n]||Object.isFrozen(e)||(e.status="removed")})),null===(o=L.current)||void 0===o||o.abort(t),G(t,r))}))},Y=e=>{D(e.type),"drop"===e.type&&(null==m||m(e))};o.useImperativeHandle(t,(()=>({onBatchStart:q,onSuccess:B,onProgress:H,onError:V,fileList:M,upload:L.current,nativeElement:F.current})));const{getPrefixCls:K,direction:J,upload:Q}=o.useContext(_e.QO),Z=K("upload",b),ee=Object.assign(Object.assign({onBatchStart:q,onError:V,onProgress:H,onSuccess:B},e),{data:k,multiple:$,action:I,accept:S,supportServerRender:N,prefixCls:Z,disabled:R,beforeUpload:(t,n)=>an(void 0,void 0,void 0,(function*(){const{beforeUpload:o,transformFile:r}=e;let a=t;if(o){const e=yield o(t,n);if(!1===e)return!1;if(delete t[sn],e===sn)return Object.defineProperty(t,sn,{value:!0,configurable:!0}),!1;"object"==typeof e&&e&&(a=e)}return r&&(a=yield r(a)),a})),onChange:void 0,hasControlInside:O});delete ee.className,delete ee.style,w&&!R||delete ee.id;const te=`${Z}-wrapper`,[ne,oe,re]=De(Z,te),[ae]=(0,we.A)("Upload",Ae.A.Upload),{showRemoveIcon:ie,showPreviewIcon:se,showDownloadIcon:le,removeIcon:ce,previewIcon:pe,downloadIcon:de,extra:me}="boolean"==typeof s?{}:s,ue=void 0===ie?!R:ie,ge=(e,t)=>s?o.createElement(rn,{prefixCls:Z,listType:l,items:M,previewFile:u,onPreview:c,onDownload:p,onRemove:X,showRemoveIcon:ue,showPreviewIcon:se,showDownloadIcon:le,removeIcon:ce,previewIcon:pe,downloadIcon:de,iconRender:h,extra:me,locale:Object.assign(Object.assign({},ae),f),isImageUrl:v,progress:y,appendAction:e,appendActionVisible:t,itemRender:E,disabled:R}):e,fe=W()(te,_,T,oe,re,null==Q?void 0:Q.className,{[`${Z}-rtl`]:"rtl"===J,[`${Z}-picture-card-wrapper`]:"picture-card"===l,[`${Z}-picture-circle-wrapper`]:"picture-circle"===l}),he=Object.assign(Object.assign({},null==Q?void 0:Q.style),A);if("drag"===x){const e=W()(oe,Z,`${Z}-drag`,{[`${Z}-drag-uploading`]:M.some((e=>"uploading"===e.status)),[`${Z}-drag-hover`]:"dragover"===z,[`${Z}-disabled`]:R,[`${Z}-rtl`]:"rtl"===J});return ne(o.createElement("span",{className:fe,ref:F},o.createElement("div",{className:e,style:he,onDrop:Y,onDragOver:Y,onDragLeave:Y},o.createElement(ye,Object.assign({},ee,{ref:L,className:`${Z}-btn`}),o.createElement("div",{className:`${Z}-drag-container`},w))),ge()))}const ve=W()(Z,`${Z}-select`,{[`${Z}-disabled`]:R,[`${Z}-hidden`]:!w}),Ee=o.createElement("div",{className:ve},o.createElement(ye,Object.assign({},ee,{ref:L})));return ne("picture-card"===l||"picture-circle"===l?o.createElement("span",{className:fe,ref:F},ge(Ee,!!w)):o.createElement("span",{className:fe,ref:F},Ee,ge()))};var cn=o.forwardRef(ln),pn=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};const dn=o.forwardRef(((e,t)=>{var{style:n,height:r,hasControlInside:a=!1}=e,i=pn(e,["style","height","hasControlInside"]);return o.createElement(cn,Object.assign({ref:t,hasControlInside:a},i,{type:"drag",style:Object.assign(Object.assign({},n),{height:r})}))}));var mn=dn;const un=cn;un.Dragger=mn,un.LIST_IGNORE=sn;var gn=un,fn=n(7260);const hn=(0,h.A)("Upload",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"17 8 12 3 7 8",key:"t8dd8p"}],["line",{x1:"12",x2:"12",y1:"3",y2:"15",key:"widbto"}]]);var vn=n(3164),yn=n(9872);const bn=(()=>{try{return n(1610)}catch(e){throw console.error("Error loading gallery JSON:",e),e}})(),_n=e=>{let{open:t,onCancel:n,onCreateGallery:r}=e;const{0:a,1:i}=(0,o.useState)("url"),{0:l,1:c}=(0,o.useState)(""),{0:p,1:d}=(0,o.useState)(JSON.stringify(bn,null,2)),{0:u,1:g}=(0,o.useState)(""),{0:f,1:h}=(0,o.useState)(!1),v=(0,o.useRef)(null),y={accept:".json",showUploadList:!1,customRequest:e=>{let{file:t,onSuccess:n}=e;setTimeout((()=>{n&&n("ok")}),0)},onChange:e=>{const{status:t,originFileObj:o}=e.file;if("done"===t&&o instanceof File){const e=new FileReader;e.onload=e=>{try{var t;const o=JSON.parse(null===(t=e.target)||void 0===t?void 0:t.result);r({config:o}),n()}catch(o){g("Invalid JSON file")}},e.readAsText(o)}else"error"===t&&g("File upload failed")}},_=(0,o.useRef)(null),x=[{key:"url",label:o.createElement("span",{className:"flex items-center gap-2"},o.createElement(b,{className:"w-4 h-4"})," URL Import"),children:o.createElement("div",{className:"space-y-4"},o.createElement(E.A,{ref:_,placeholder:"Enter gallery URL...",value:l,onChange:e=>c(e.target.value)}),o.createElement("div",{className:"text-xs"},"Sample",o.createElement("a",{role:"button",onClick:e=>{c("https://raw.githubusercontent.com/victordibia/multiagent-systems-with-autogen/refs/heads/main/research/components/gallery/base.json"),e.preventDefault()},href:"https://raw.githubusercontent.com/victordibia/multiagent-systems-with-autogen/refs/heads/main/research/components/gallery/base.json",target:"_blank",rel:"noreferrer",className:"text-accent"}," ","gallery.json"," ")),o.createElement(m.Ay,{type:"primary",onClick:async()=>{h(!0),g("");try{const e=await fetch(l),t=await e.json();r({config:t}),n()}catch(e){g("Failed to fetch or parse gallery from URL")}finally{h(!1)}},disabled:!l||f,block:!0},"Import from URL"))},{key:"file",label:o.createElement("span",{className:"flex items-center gap-2"},o.createElement(hn,{className:"w-4 h-4"})," File Upload"),children:o.createElement("div",{className:"border-2 border-dashed rounded-lg p-8 text-center space-y-4"},o.createElement(gn.Dragger,y,o.createElement("p",{className:"ant-upload-drag-icon"},o.createElement(hn,{className:"w-8 h-8 mx-auto text-secondary"})),o.createElement("p",{className:"ant-upload-text"},"Click or drag JSON file to this area")))},{key:"paste",label:o.createElement("span",{className:"flex items-center gap-2"},o.createElement(vn.A,{className:"w-4 h-4"})," Paste JSON"),children:o.createElement("div",{className:"space-y-4"},o.createElement("div",{className:"h-64"},o.createElement(yn.T,{value:p,onChange:d,editorRef:v,language:"json",minimap:!1})),o.createElement(m.Ay,{type:"primary",onClick:()=>{try{const e=JSON.parse(p);r({config:e}),n()}catch(e){g("Invalid JSON format")}},block:!0},"Import JSON"))}];return o.createElement(s.A,{title:"Create New Gallery",open:t,onCancel:n,footer:null,width:800},o.createElement("div",{className:"mt-4"},o.createElement(C.A,{activeKey:a,onChange:i,items:x}),u&&o.createElement(fn.A,{message:u,type:"error",showIcon:!0,className:"mt-4"})))};var xn=()=>{const{0:e,1:t}=(0,o.useState)(!1),{0:n,1:r}=(0,o.useState)([]),{0:d,1:m}=(0,o.useState)(null),{0:u,1:g}=(0,o.useState)(!1),{0:f,1:h}=(0,o.useState)(!1),{0:v,1:y}=(0,o.useState)((()=>{if("undefined"!=typeof window){const e=localStorage.getItem("gallerySidebar");return null===e||JSON.parse(e)}return!0})),{user:b}=(0,o.useContext)(c.v),[_,x]=i.Ay.useMessage();(0,o.useEffect)((()=>{"undefined"!=typeof window&&localStorage.setItem("gallerySidebar",JSON.stringify(v))}),[v]);const w=(0,o.useCallback)((async()=>{if(null!=b&&b.id)try{t(!0);const e=await p.f.listGalleries(b.id);r(e),!d&&e.length>0&&m(e[0])}catch(e){console.error("Error fetching galleries:",e),_.error("Failed to fetch galleries")}finally{t(!1)}}),[null==b?void 0:b.id,d,_]);(0,o.useEffect)((()=>{w()}),[w]),(0,o.useEffect)((()=>{const e=new URLSearchParams(window.location.search).get("galleryId");if(e&&!d){const t=parseInt(e,10);isNaN(t)||E(t)}}),[]),(0,o.useEffect)((()=>{null!=d&&d.id&&window.history.pushState({},"",`?galleryId=${d.id.toString()}`)}),[null==d?void 0:d.id]);const E=async e=>{null!=b&&b.id&&(f?s.A.confirm({title:"Unsaved Changes",content:"You have unsaved changes. Do you want to discard them?",okText:"Discard",cancelText:"Go Back",onOk:()=>{C(e),h(!1)}}):await C(e))},C=async e=>{if(null!=b&&b.id){t(!0);try{const t=await p.f.getGallery(e,b.id);m(t)}catch(n){console.error("Error loading gallery:",n),_.error("Failed to load gallery")}finally{t(!1)}}},k=async e=>{if(null!=b&&b.id&&null!=d&&d.id)try{const t={...e,created_at:void 0,updated_at:void 0},o=await p.f.updateGallery(d.id,t,b.id);r(n.map((e=>e.id===o.id?o:e))),m(o),h(!1),_.success("Gallery updated successfully")}catch(t){console.error("Error updating gallery:",t),_.error("Failed to update gallery")}};return null!=b&&b.id?o.createElement("div",{className:"relative flex h-full w-full"},x,o.createElement(_n,{open:u,onCancel:()=>g(!1),onCreateGallery:async e=>{if(null!=b&&b.id){e.user_id=b.id;try{const t=await p.f.createGallery(e,b.id);r([t].concat((0,a.A)(n))),m(t),g(!1),_.success("Gallery created successfully")}catch(t){console.error("Error creating gallery:",t),_.error("Failed to create gallery")}}}}),o.createElement("div",{className:"absolute left-0 top-0 h-full transition-all duration-200 ease-in-out "+(v?"w-64":"w-12")},o.createElement(A,{isOpen:v,galleries:n,currentGallery:d,onToggle:()=>y(!v),onSelectGallery:e=>E(e.id),onCreateGallery:()=>g(!0),onDeleteGallery:async e=>{if(null!=b&&b.id)try{await p.f.deleteGallery(e,b.id),r(n.filter((t=>t.id!==e))),(null==d?void 0:d.id)===e&&m(null),_.success("Gallery deleted successfully")}catch(t){console.error("Error deleting gallery:",t),_.error("Failed to delete gallery")}},onSyncGallery:async e=>{if(null!=b&&b.id)try{t(!0);const o=n.find((t=>t.id===e));if(null==o||!o.config.url)return;const r=await p.f.syncGallery(o.config.url);await k({...r,id:e,config:{...r.config,metadata:{...r.config.metadata,lastSynced:(new Date).toISOString()}}}),_.success("Gallery synced successfully")}catch(o){console.error("Error syncing gallery:",o),_.error("Failed to sync gallery")}finally{t(!1)}},isLoading:e})),o.createElement("div",{className:"flex-1 transition-all -mr-6 duration-200 "+(v?"ml-64":"ml-12")},o.createElement("div",{className:"p-4 pt-2"},o.createElement("div",{className:"flex items-center gap-2 mb-4 text-sm"},o.createElement("span",{className:"text-primary font-medium"},"Galleries"),d&&o.createElement(o.Fragment,null,o.createElement(l.A,{className:"w-4 h-4 text-secondary"}),o.createElement("span",{className:"text-secondary"},d.config.name))),e&&!d?o.createElement("div",{className:"flex items-center justify-center h-[calc(100vh-120px)] text-secondary"},"Loading galleries..."):d?o.createElement(G,{gallery:d,onSave:k,onDirtyStateChange:h}):o.createElement("div",{className:"flex items-center justify-center h-[calc(100vh-120px)] text-secondary"},"Select a gallery from the sidebar or create a new one")))):o.createElement("div",{className:"flex items-center justify-center h-[calc(100vh-120px)] text-secondary"},"Please log in to view galleries")};var wn=e=>{let{data:t}=e;return o.createElement(r.A,{meta:t.site.siteMetadata,title:"Home",link:"/gallery"},o.createElement("main",{style:{height:"100%"},className:" h-full "},o.createElement(xn,null)))}},5404:function(e,t,n){n.d(t,{A:function(){return o}});const o=(0,n(1788).A)("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]])},6274:function(e,t,n){n.d(t,{A:function(){return o}});const o=(0,n(1788).A)("Users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["path",{d:"M16 3.13a4 4 0 0 1 0 7.75",key:"1da9ce"}]])},6816:function(e,t,n){n.d(t,{A:function(){return o}});const o=(0,n(1788).A)("Wrench",[["path",{d:"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z",key:"cbrjhi"}]])},7260:function(e,t,n){n.d(t,{A:function(){return L}});var o=n(6540),r=n(8811),a=n(6029),i=n(7852),s=n(7541),l=n(7850),c=n(6942),p=n.n(c),d=n(754),m=n(2065),u=n(8719),g=n(682),f=n(2279),h=n(2187),v=n(5905),y=n(7358);const b=(e,t,n,o,r)=>({background:e,border:`${(0,h.zA)(o.lineWidth)} ${o.lineType} ${t}`,[`${r}-icon`]:{color:n}}),_=e=>{const{componentCls:t,motionDurationSlow:n,marginXS:o,marginSM:r,fontSize:a,fontSizeLG:i,lineHeight:s,borderRadiusLG:l,motionEaseInOutCirc:c,withDescriptionIconSize:p,colorText:d,colorTextHeading:m,withDescriptionPadding:u,defaultPadding:g}=e;return{[t]:Object.assign(Object.assign({},(0,v.dF)(e)),{position:"relative",display:"flex",alignItems:"center",padding:g,wordWrap:"break-word",borderRadius:l,[`&${t}-rtl`]:{direction:"rtl"},[`${t}-content`]:{flex:1,minWidth:0},[`${t}-icon`]:{marginInlineEnd:o,lineHeight:0},"&-description":{display:"none",fontSize:a,lineHeight:s},"&-message":{color:m},[`&${t}-motion-leave`]:{overflow:"hidden",opacity:1,transition:`max-height ${n} ${c}, opacity ${n} ${c},\n        padding-top ${n} ${c}, padding-bottom ${n} ${c},\n        margin-bottom ${n} ${c}`},[`&${t}-motion-leave-active`]:{maxHeight:0,marginBottom:"0 !important",paddingTop:0,paddingBottom:0,opacity:0}}),[`${t}-with-description`]:{alignItems:"flex-start",padding:u,[`${t}-icon`]:{marginInlineEnd:r,fontSize:p,lineHeight:0},[`${t}-message`]:{display:"block",marginBottom:o,color:m,fontSize:i},[`${t}-description`]:{display:"block",color:d}},[`${t}-banner`]:{marginBottom:0,border:"0 !important",borderRadius:0}}},x=e=>{const{componentCls:t,colorSuccess:n,colorSuccessBorder:o,colorSuccessBg:r,colorWarning:a,colorWarningBorder:i,colorWarningBg:s,colorError:l,colorErrorBorder:c,colorErrorBg:p,colorInfo:d,colorInfoBorder:m,colorInfoBg:u}=e;return{[t]:{"&-success":b(r,o,n,e,t),"&-info":b(u,m,d,e,t),"&-warning":b(s,i,a,e,t),"&-error":Object.assign(Object.assign({},b(p,c,l,e,t)),{[`${t}-description > pre`]:{margin:0,padding:0}})}}},w=e=>{const{componentCls:t,iconCls:n,motionDurationMid:o,marginXS:r,fontSizeIcon:a,colorIcon:i,colorIconHover:s}=e;return{[t]:{"&-action":{marginInlineStart:r},[`${t}-close-icon`]:{marginInlineStart:r,padding:0,overflow:"hidden",fontSize:a,lineHeight:(0,h.zA)(a),backgroundColor:"transparent",border:"none",outline:"none",cursor:"pointer",[`${n}-close`]:{color:i,transition:`color ${o}`,"&:hover":{color:s}}},"&-close-text":{color:i,transition:`color ${o}`,"&:hover":{color:s}}}}};var A=(0,y.OF)("Alert",(e=>[_(e),x(e),w(e)]),(e=>({withDescriptionIconSize:e.fontSizeHeading3,defaultPadding:`${e.paddingContentVerticalSM}px 12px`,withDescriptionPadding:`${e.paddingMD}px ${e.paddingContentHorizontalLG}px`}))),E=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n};const C={success:r.A,info:l.A,error:a.A,warning:s.A},k=e=>{const{icon:t,prefixCls:n,type:r}=e,a=C[r]||null;return t?(0,g.fx)(t,o.createElement("span",{className:`${n}-icon`},t),(()=>({className:p()(`${n}-icon`,t.props.className)}))):o.createElement(a,{className:`${n}-icon`})},$=e=>{const{isClosable:t,prefixCls:n,closeIcon:r,handleClose:a,ariaProps:s}=e,l=!0===r||void 0===r?o.createElement(i.A,null):r;return t?o.createElement("button",Object.assign({type:"button",onClick:a,className:`${n}-close-icon`,tabIndex:0},s),l):null},O=o.forwardRef(((e,t)=>{const{description:n,prefixCls:r,message:a,banner:i,className:s,rootClassName:l,style:c,onMouseEnter:g,onMouseLeave:h,onClick:v,afterClose:y,showIcon:b,closable:_,closeText:x,closeIcon:w,action:C,id:O}=e,I=E(e,["description","prefixCls","message","banner","className","rootClassName","style","onMouseEnter","onMouseLeave","onClick","afterClose","showIcon","closable","closeText","closeIcon","action","id"]),[S,N]=o.useState(!1);const T=o.useRef(null);o.useImperativeHandle(t,(()=>({nativeElement:T.current})));const{getPrefixCls:P,direction:R,closable:M,closeIcon:j,className:z,style:D}=(0,f.TP)("alert"),L=P("alert",r),[F,G,U]=A(L),q=t=>{var n;N(!0),null===(n=e.onClose)||void 0===n||n.call(e,t)},W=o.useMemo((()=>void 0!==e.type?e.type:i?"warning":"info"),[e.type,i]),B=o.useMemo((()=>!("object"!=typeof _||!_.closeIcon)||(!!x||("boolean"==typeof _?_:!1!==w&&null!=w||!!M))),[x,w,_,M]),H=!(!i||void 0!==b)||b,V=p()(L,`${L}-${W}`,{[`${L}-with-description`]:!!n,[`${L}-no-icon`]:!H,[`${L}-banner`]:!!i,[`${L}-rtl`]:"rtl"===R},z,s,l,U,G),X=(0,m.A)(I,{aria:!0,data:!0}),Y=o.useMemo((()=>"object"==typeof _&&_.closeIcon?_.closeIcon:x||(void 0!==w?w:"object"==typeof M&&M.closeIcon?M.closeIcon:j)),[w,_,x,j]),K=o.useMemo((()=>{const e=null!=_?_:M;if("object"==typeof e){const{closeIcon:t}=e;return E(e,["closeIcon"])}return{}}),[_,M]);return F(o.createElement(d.Ay,{visible:!S,motionName:`${L}-motion`,motionAppear:!1,motionEnter:!1,onLeaveStart:e=>({maxHeight:e.offsetHeight}),onLeaveEnd:y},((t,r)=>{let{className:i,style:s}=t;return o.createElement("div",Object.assign({id:O,ref:(0,u.K4)(T,r),"data-show":!S,className:p()(V,i),style:Object.assign(Object.assign(Object.assign({},D),c),s),onMouseEnter:g,onMouseLeave:h,onClick:v,role:"alert"},X),H?o.createElement(k,{description:n,icon:e.icon,prefixCls:L,type:W}):null,o.createElement("div",{className:`${L}-content`},a?o.createElement("div",{className:`${L}-message`},a):null,n?o.createElement("div",{className:`${L}-description`},n):null),C?o.createElement("div",{className:`${L}-action`},C):null,o.createElement($,{isClosable:B,prefixCls:L,closeIcon:Y,handleClose:q,ariaProps:K}))})))}));var I=O,S=n(3029),N=n(2901),T=n(3954),P=n(2176),R=n(6822);var M=n(5501);let j=function(e){function t(){var e,n,o,r;return(0,S.A)(this,t),n=this,o=t,r=arguments,o=(0,T.A)(o),(e=(0,R.A)(n,(0,P.A)()?Reflect.construct(o,r||[],(0,T.A)(n).constructor):o.apply(n,r))).state={error:void 0,info:{componentStack:""}},e}return(0,M.A)(t,e),(0,N.A)(t,[{key:"componentDidCatch",value:function(e,t){this.setState({error:e,info:t})}},{key:"render",value:function(){const{message:e,description:t,id:n,children:r}=this.props,{error:a,info:i}=this.state,s=(null==i?void 0:i.componentStack)||null,l=void 0===e?(a||"").toString():e,c=void 0===t?s:t;return a?o.createElement(I,{id:n,type:"error",message:l,description:o.createElement("pre",{style:{fontSize:"0.9em",overflowX:"auto"}},c)}):r}}])}(o.Component);var z=j;const D=I;D.ErrorBoundary=z;var L=D}}]);
//# sourceMappingURL=component---src-pages-gallery-tsx-d7db3e88a92169f0f750.js.map